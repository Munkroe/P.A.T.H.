
MotorController.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008d04  08000190  08000190  00010190  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000220  08008e98  08008e98  00018e98  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080090b8  080090b8  00020018  2**0
                  CONTENTS
  4 .ARM          00000008  080090b8  080090b8  000190b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080090c0  080090c0  00020018  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080090c0  080090c0  000190c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080090c4  080090c4  000190c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000018  20000000  080090c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004d0  20000018  080090e0  00020018  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200004e8  080090e0  000204e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY
 12 .debug_info   00016c16  00000000  00000000  00020048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002a26  00000000  00000000  00036c5e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000013c0  00000000  00000000  00039688  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000012c8  00000000  00000000  0003aa48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003761  00000000  00000000  0003bd10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000145a3  00000000  00000000  0003f471  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000dbf83  00000000  00000000  00053a14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0012f997  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000058bc  00000000  00000000  0012f9ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000018 	.word	0x20000018
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08008e7c 	.word	0x08008e7c

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000001c 	.word	0x2000001c
 80001cc:	08008e7c 	.word	0x08008e7c

080001d0 <__aeabi_drsub>:
 80001d0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001d4:	e002      	b.n	80001dc <__adddf3>
 80001d6:	bf00      	nop

080001d8 <__aeabi_dsub>:
 80001d8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001dc <__adddf3>:
 80001dc:	b530      	push	{r4, r5, lr}
 80001de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001e6:	ea94 0f05 	teq	r4, r5
 80001ea:	bf08      	it	eq
 80001ec:	ea90 0f02 	teqeq	r0, r2
 80001f0:	bf1f      	itttt	ne
 80001f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000202:	f000 80e2 	beq.w	80003ca <__adddf3+0x1ee>
 8000206:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800020a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800020e:	bfb8      	it	lt
 8000210:	426d      	neglt	r5, r5
 8000212:	dd0c      	ble.n	800022e <__adddf3+0x52>
 8000214:	442c      	add	r4, r5
 8000216:	ea80 0202 	eor.w	r2, r0, r2
 800021a:	ea81 0303 	eor.w	r3, r1, r3
 800021e:	ea82 0000 	eor.w	r0, r2, r0
 8000222:	ea83 0101 	eor.w	r1, r3, r1
 8000226:	ea80 0202 	eor.w	r2, r0, r2
 800022a:	ea81 0303 	eor.w	r3, r1, r3
 800022e:	2d36      	cmp	r5, #54	; 0x36
 8000230:	bf88      	it	hi
 8000232:	bd30      	pophi	{r4, r5, pc}
 8000234:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000238:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800023c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000240:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000244:	d002      	beq.n	800024c <__adddf3+0x70>
 8000246:	4240      	negs	r0, r0
 8000248:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800024c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000250:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000254:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000258:	d002      	beq.n	8000260 <__adddf3+0x84>
 800025a:	4252      	negs	r2, r2
 800025c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000260:	ea94 0f05 	teq	r4, r5
 8000264:	f000 80a7 	beq.w	80003b6 <__adddf3+0x1da>
 8000268:	f1a4 0401 	sub.w	r4, r4, #1
 800026c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000270:	db0d      	blt.n	800028e <__adddf3+0xb2>
 8000272:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000276:	fa22 f205 	lsr.w	r2, r2, r5
 800027a:	1880      	adds	r0, r0, r2
 800027c:	f141 0100 	adc.w	r1, r1, #0
 8000280:	fa03 f20e 	lsl.w	r2, r3, lr
 8000284:	1880      	adds	r0, r0, r2
 8000286:	fa43 f305 	asr.w	r3, r3, r5
 800028a:	4159      	adcs	r1, r3
 800028c:	e00e      	b.n	80002ac <__adddf3+0xd0>
 800028e:	f1a5 0520 	sub.w	r5, r5, #32
 8000292:	f10e 0e20 	add.w	lr, lr, #32
 8000296:	2a01      	cmp	r2, #1
 8000298:	fa03 fc0e 	lsl.w	ip, r3, lr
 800029c:	bf28      	it	cs
 800029e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002a2:	fa43 f305 	asr.w	r3, r3, r5
 80002a6:	18c0      	adds	r0, r0, r3
 80002a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b0:	d507      	bpl.n	80002c2 <__adddf3+0xe6>
 80002b2:	f04f 0e00 	mov.w	lr, #0
 80002b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80002ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002be:	eb6e 0101 	sbc.w	r1, lr, r1
 80002c2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002c6:	d31b      	bcc.n	8000300 <__adddf3+0x124>
 80002c8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002cc:	d30c      	bcc.n	80002e8 <__adddf3+0x10c>
 80002ce:	0849      	lsrs	r1, r1, #1
 80002d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80002d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002d8:	f104 0401 	add.w	r4, r4, #1
 80002dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002e4:	f080 809a 	bcs.w	800041c <__adddf3+0x240>
 80002e8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002ec:	bf08      	it	eq
 80002ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002f2:	f150 0000 	adcs.w	r0, r0, #0
 80002f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002fa:	ea41 0105 	orr.w	r1, r1, r5
 80002fe:	bd30      	pop	{r4, r5, pc}
 8000300:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000304:	4140      	adcs	r0, r0
 8000306:	eb41 0101 	adc.w	r1, r1, r1
 800030a:	3c01      	subs	r4, #1
 800030c:	bf28      	it	cs
 800030e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000312:	d2e9      	bcs.n	80002e8 <__adddf3+0x10c>
 8000314:	f091 0f00 	teq	r1, #0
 8000318:	bf04      	itt	eq
 800031a:	4601      	moveq	r1, r0
 800031c:	2000      	moveq	r0, #0
 800031e:	fab1 f381 	clz	r3, r1
 8000322:	bf08      	it	eq
 8000324:	3320      	addeq	r3, #32
 8000326:	f1a3 030b 	sub.w	r3, r3, #11
 800032a:	f1b3 0220 	subs.w	r2, r3, #32
 800032e:	da0c      	bge.n	800034a <__adddf3+0x16e>
 8000330:	320c      	adds	r2, #12
 8000332:	dd08      	ble.n	8000346 <__adddf3+0x16a>
 8000334:	f102 0c14 	add.w	ip, r2, #20
 8000338:	f1c2 020c 	rsb	r2, r2, #12
 800033c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000340:	fa21 f102 	lsr.w	r1, r1, r2
 8000344:	e00c      	b.n	8000360 <__adddf3+0x184>
 8000346:	f102 0214 	add.w	r2, r2, #20
 800034a:	bfd8      	it	le
 800034c:	f1c2 0c20 	rsble	ip, r2, #32
 8000350:	fa01 f102 	lsl.w	r1, r1, r2
 8000354:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000358:	bfdc      	itt	le
 800035a:	ea41 010c 	orrle.w	r1, r1, ip
 800035e:	4090      	lslle	r0, r2
 8000360:	1ae4      	subs	r4, r4, r3
 8000362:	bfa2      	ittt	ge
 8000364:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000368:	4329      	orrge	r1, r5
 800036a:	bd30      	popge	{r4, r5, pc}
 800036c:	ea6f 0404 	mvn.w	r4, r4
 8000370:	3c1f      	subs	r4, #31
 8000372:	da1c      	bge.n	80003ae <__adddf3+0x1d2>
 8000374:	340c      	adds	r4, #12
 8000376:	dc0e      	bgt.n	8000396 <__adddf3+0x1ba>
 8000378:	f104 0414 	add.w	r4, r4, #20
 800037c:	f1c4 0220 	rsb	r2, r4, #32
 8000380:	fa20 f004 	lsr.w	r0, r0, r4
 8000384:	fa01 f302 	lsl.w	r3, r1, r2
 8000388:	ea40 0003 	orr.w	r0, r0, r3
 800038c:	fa21 f304 	lsr.w	r3, r1, r4
 8000390:	ea45 0103 	orr.w	r1, r5, r3
 8000394:	bd30      	pop	{r4, r5, pc}
 8000396:	f1c4 040c 	rsb	r4, r4, #12
 800039a:	f1c4 0220 	rsb	r2, r4, #32
 800039e:	fa20 f002 	lsr.w	r0, r0, r2
 80003a2:	fa01 f304 	lsl.w	r3, r1, r4
 80003a6:	ea40 0003 	orr.w	r0, r0, r3
 80003aa:	4629      	mov	r1, r5
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	fa21 f004 	lsr.w	r0, r1, r4
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	f094 0f00 	teq	r4, #0
 80003ba:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003be:	bf06      	itte	eq
 80003c0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003c4:	3401      	addeq	r4, #1
 80003c6:	3d01      	subne	r5, #1
 80003c8:	e74e      	b.n	8000268 <__adddf3+0x8c>
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf18      	it	ne
 80003d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003d4:	d029      	beq.n	800042a <__adddf3+0x24e>
 80003d6:	ea94 0f05 	teq	r4, r5
 80003da:	bf08      	it	eq
 80003dc:	ea90 0f02 	teqeq	r0, r2
 80003e0:	d005      	beq.n	80003ee <__adddf3+0x212>
 80003e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80003e6:	bf04      	itt	eq
 80003e8:	4619      	moveq	r1, r3
 80003ea:	4610      	moveq	r0, r2
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	ea91 0f03 	teq	r1, r3
 80003f2:	bf1e      	ittt	ne
 80003f4:	2100      	movne	r1, #0
 80003f6:	2000      	movne	r0, #0
 80003f8:	bd30      	popne	{r4, r5, pc}
 80003fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003fe:	d105      	bne.n	800040c <__adddf3+0x230>
 8000400:	0040      	lsls	r0, r0, #1
 8000402:	4149      	adcs	r1, r1
 8000404:	bf28      	it	cs
 8000406:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800040a:	bd30      	pop	{r4, r5, pc}
 800040c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000410:	bf3c      	itt	cc
 8000412:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000416:	bd30      	popcc	{r4, r5, pc}
 8000418:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800041c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000420:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000424:	f04f 0000 	mov.w	r0, #0
 8000428:	bd30      	pop	{r4, r5, pc}
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf1a      	itte	ne
 8000430:	4619      	movne	r1, r3
 8000432:	4610      	movne	r0, r2
 8000434:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000438:	bf1c      	itt	ne
 800043a:	460b      	movne	r3, r1
 800043c:	4602      	movne	r2, r0
 800043e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000442:	bf06      	itte	eq
 8000444:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000448:	ea91 0f03 	teqeq	r1, r3
 800044c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000450:	bd30      	pop	{r4, r5, pc}
 8000452:	bf00      	nop

08000454 <__aeabi_ui2d>:
 8000454:	f090 0f00 	teq	r0, #0
 8000458:	bf04      	itt	eq
 800045a:	2100      	moveq	r1, #0
 800045c:	4770      	bxeq	lr
 800045e:	b530      	push	{r4, r5, lr}
 8000460:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000464:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000468:	f04f 0500 	mov.w	r5, #0
 800046c:	f04f 0100 	mov.w	r1, #0
 8000470:	e750      	b.n	8000314 <__adddf3+0x138>
 8000472:	bf00      	nop

08000474 <__aeabi_i2d>:
 8000474:	f090 0f00 	teq	r0, #0
 8000478:	bf04      	itt	eq
 800047a:	2100      	moveq	r1, #0
 800047c:	4770      	bxeq	lr
 800047e:	b530      	push	{r4, r5, lr}
 8000480:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000484:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000488:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800048c:	bf48      	it	mi
 800048e:	4240      	negmi	r0, r0
 8000490:	f04f 0100 	mov.w	r1, #0
 8000494:	e73e      	b.n	8000314 <__adddf3+0x138>
 8000496:	bf00      	nop

08000498 <__aeabi_f2d>:
 8000498:	0042      	lsls	r2, r0, #1
 800049a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800049e:	ea4f 0131 	mov.w	r1, r1, rrx
 80004a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004a6:	bf1f      	itttt	ne
 80004a8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004ac:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004b4:	4770      	bxne	lr
 80004b6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004ba:	bf08      	it	eq
 80004bc:	4770      	bxeq	lr
 80004be:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004c2:	bf04      	itt	eq
 80004c4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004c8:	4770      	bxeq	lr
 80004ca:	b530      	push	{r4, r5, lr}
 80004cc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004d8:	e71c      	b.n	8000314 <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_ul2d>:
 80004dc:	ea50 0201 	orrs.w	r2, r0, r1
 80004e0:	bf08      	it	eq
 80004e2:	4770      	bxeq	lr
 80004e4:	b530      	push	{r4, r5, lr}
 80004e6:	f04f 0500 	mov.w	r5, #0
 80004ea:	e00a      	b.n	8000502 <__aeabi_l2d+0x16>

080004ec <__aeabi_l2d>:
 80004ec:	ea50 0201 	orrs.w	r2, r0, r1
 80004f0:	bf08      	it	eq
 80004f2:	4770      	bxeq	lr
 80004f4:	b530      	push	{r4, r5, lr}
 80004f6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004fa:	d502      	bpl.n	8000502 <__aeabi_l2d+0x16>
 80004fc:	4240      	negs	r0, r0
 80004fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000502:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000506:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800050a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800050e:	f43f aed8 	beq.w	80002c2 <__adddf3+0xe6>
 8000512:	f04f 0203 	mov.w	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800052a:	f1c2 0320 	rsb	r3, r2, #32
 800052e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000532:	fa20 f002 	lsr.w	r0, r0, r2
 8000536:	fa01 fe03 	lsl.w	lr, r1, r3
 800053a:	ea40 000e 	orr.w	r0, r0, lr
 800053e:	fa21 f102 	lsr.w	r1, r1, r2
 8000542:	4414      	add	r4, r2
 8000544:	e6bd      	b.n	80002c2 <__adddf3+0xe6>
 8000546:	bf00      	nop

08000548 <__aeabi_dmul>:
 8000548:	b570      	push	{r4, r5, r6, lr}
 800054a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800054e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000552:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000556:	bf1d      	ittte	ne
 8000558:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800055c:	ea94 0f0c 	teqne	r4, ip
 8000560:	ea95 0f0c 	teqne	r5, ip
 8000564:	f000 f8de 	bleq	8000724 <__aeabi_dmul+0x1dc>
 8000568:	442c      	add	r4, r5
 800056a:	ea81 0603 	eor.w	r6, r1, r3
 800056e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000572:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000576:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800057a:	bf18      	it	ne
 800057c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000580:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000584:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000588:	d038      	beq.n	80005fc <__aeabi_dmul+0xb4>
 800058a:	fba0 ce02 	umull	ip, lr, r0, r2
 800058e:	f04f 0500 	mov.w	r5, #0
 8000592:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000596:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800059a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800059e:	f04f 0600 	mov.w	r6, #0
 80005a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005a6:	f09c 0f00 	teq	ip, #0
 80005aa:	bf18      	it	ne
 80005ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005b4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005b8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005bc:	d204      	bcs.n	80005c8 <__aeabi_dmul+0x80>
 80005be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005c2:	416d      	adcs	r5, r5
 80005c4:	eb46 0606 	adc.w	r6, r6, r6
 80005c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005dc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e0:	bf88      	it	hi
 80005e2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005e6:	d81e      	bhi.n	8000626 <__aeabi_dmul+0xde>
 80005e8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005ec:	bf08      	it	eq
 80005ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005f2:	f150 0000 	adcs.w	r0, r0, #0
 80005f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000600:	ea46 0101 	orr.w	r1, r6, r1
 8000604:	ea40 0002 	orr.w	r0, r0, r2
 8000608:	ea81 0103 	eor.w	r1, r1, r3
 800060c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000610:	bfc2      	ittt	gt
 8000612:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000616:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800061a:	bd70      	popgt	{r4, r5, r6, pc}
 800061c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000620:	f04f 0e00 	mov.w	lr, #0
 8000624:	3c01      	subs	r4, #1
 8000626:	f300 80ab 	bgt.w	8000780 <__aeabi_dmul+0x238>
 800062a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800062e:	bfde      	ittt	le
 8000630:	2000      	movle	r0, #0
 8000632:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000636:	bd70      	pople	{r4, r5, r6, pc}
 8000638:	f1c4 0400 	rsb	r4, r4, #0
 800063c:	3c20      	subs	r4, #32
 800063e:	da35      	bge.n	80006ac <__aeabi_dmul+0x164>
 8000640:	340c      	adds	r4, #12
 8000642:	dc1b      	bgt.n	800067c <__aeabi_dmul+0x134>
 8000644:	f104 0414 	add.w	r4, r4, #20
 8000648:	f1c4 0520 	rsb	r5, r4, #32
 800064c:	fa00 f305 	lsl.w	r3, r0, r5
 8000650:	fa20 f004 	lsr.w	r0, r0, r4
 8000654:	fa01 f205 	lsl.w	r2, r1, r5
 8000658:	ea40 0002 	orr.w	r0, r0, r2
 800065c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000660:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000664:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000668:	fa21 f604 	lsr.w	r6, r1, r4
 800066c:	eb42 0106 	adc.w	r1, r2, r6
 8000670:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000674:	bf08      	it	eq
 8000676:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f1c4 040c 	rsb	r4, r4, #12
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f304 	lsl.w	r3, r0, r4
 8000688:	fa20 f005 	lsr.w	r0, r0, r5
 800068c:	fa01 f204 	lsl.w	r2, r1, r4
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000698:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800069c:	f141 0100 	adc.w	r1, r1, #0
 80006a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006a4:	bf08      	it	eq
 80006a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f1c4 0520 	rsb	r5, r4, #32
 80006b0:	fa00 f205 	lsl.w	r2, r0, r5
 80006b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b8:	fa20 f304 	lsr.w	r3, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea43 0302 	orr.w	r3, r3, r2
 80006c4:	fa21 f004 	lsr.w	r0, r1, r4
 80006c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	fa21 f204 	lsr.w	r2, r1, r4
 80006d0:	ea20 0002 	bic.w	r0, r0, r2
 80006d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f094 0f00 	teq	r4, #0
 80006e8:	d10f      	bne.n	800070a <__aeabi_dmul+0x1c2>
 80006ea:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006ee:	0040      	lsls	r0, r0, #1
 80006f0:	eb41 0101 	adc.w	r1, r1, r1
 80006f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006f8:	bf08      	it	eq
 80006fa:	3c01      	subeq	r4, #1
 80006fc:	d0f7      	beq.n	80006ee <__aeabi_dmul+0x1a6>
 80006fe:	ea41 0106 	orr.w	r1, r1, r6
 8000702:	f095 0f00 	teq	r5, #0
 8000706:	bf18      	it	ne
 8000708:	4770      	bxne	lr
 800070a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800070e:	0052      	lsls	r2, r2, #1
 8000710:	eb43 0303 	adc.w	r3, r3, r3
 8000714:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000718:	bf08      	it	eq
 800071a:	3d01      	subeq	r5, #1
 800071c:	d0f7      	beq.n	800070e <__aeabi_dmul+0x1c6>
 800071e:	ea43 0306 	orr.w	r3, r3, r6
 8000722:	4770      	bx	lr
 8000724:	ea94 0f0c 	teq	r4, ip
 8000728:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800072c:	bf18      	it	ne
 800072e:	ea95 0f0c 	teqne	r5, ip
 8000732:	d00c      	beq.n	800074e <__aeabi_dmul+0x206>
 8000734:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000738:	bf18      	it	ne
 800073a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800073e:	d1d1      	bne.n	80006e4 <__aeabi_dmul+0x19c>
 8000740:	ea81 0103 	eor.w	r1, r1, r3
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd70      	pop	{r4, r5, r6, pc}
 800074e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000752:	bf06      	itte	eq
 8000754:	4610      	moveq	r0, r2
 8000756:	4619      	moveq	r1, r3
 8000758:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800075c:	d019      	beq.n	8000792 <__aeabi_dmul+0x24a>
 800075e:	ea94 0f0c 	teq	r4, ip
 8000762:	d102      	bne.n	800076a <__aeabi_dmul+0x222>
 8000764:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000768:	d113      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800076a:	ea95 0f0c 	teq	r5, ip
 800076e:	d105      	bne.n	800077c <__aeabi_dmul+0x234>
 8000770:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000774:	bf1c      	itt	ne
 8000776:	4610      	movne	r0, r2
 8000778:	4619      	movne	r1, r3
 800077a:	d10a      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800077c:	ea81 0103 	eor.w	r1, r1, r3
 8000780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000784:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000788:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800078c:	f04f 0000 	mov.w	r0, #0
 8000790:	bd70      	pop	{r4, r5, r6, pc}
 8000792:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000796:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800079a:	bd70      	pop	{r4, r5, r6, pc}

0800079c <__aeabi_ddiv>:
 800079c:	b570      	push	{r4, r5, r6, lr}
 800079e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007a2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007aa:	bf1d      	ittte	ne
 80007ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b0:	ea94 0f0c 	teqne	r4, ip
 80007b4:	ea95 0f0c 	teqne	r5, ip
 80007b8:	f000 f8a7 	bleq	800090a <__aeabi_ddiv+0x16e>
 80007bc:	eba4 0405 	sub.w	r4, r4, r5
 80007c0:	ea81 0e03 	eor.w	lr, r1, r3
 80007c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007cc:	f000 8088 	beq.w	80008e0 <__aeabi_ddiv+0x144>
 80007d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007d4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007f4:	429d      	cmp	r5, r3
 80007f6:	bf08      	it	eq
 80007f8:	4296      	cmpeq	r6, r2
 80007fa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007fe:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000802:	d202      	bcs.n	800080a <__aeabi_ddiv+0x6e>
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	1ab6      	subs	r6, r6, r2
 800080c:	eb65 0503 	sbc.w	r5, r5, r3
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800081a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800081e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000822:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000826:	bf22      	ittt	cs
 8000828:	1ab6      	subcs	r6, r6, r2
 800082a:	4675      	movcs	r5, lr
 800082c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000830:	085b      	lsrs	r3, r3, #1
 8000832:	ea4f 0232 	mov.w	r2, r2, rrx
 8000836:	ebb6 0e02 	subs.w	lr, r6, r2
 800083a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800083e:	bf22      	ittt	cs
 8000840:	1ab6      	subcs	r6, r6, r2
 8000842:	4675      	movcs	r5, lr
 8000844:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000852:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000856:	bf22      	ittt	cs
 8000858:	1ab6      	subcs	r6, r6, r2
 800085a:	4675      	movcs	r5, lr
 800085c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000878:	ea55 0e06 	orrs.w	lr, r5, r6
 800087c:	d018      	beq.n	80008b0 <__aeabi_ddiv+0x114>
 800087e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000882:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000886:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800088a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800088e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000892:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000896:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800089a:	d1c0      	bne.n	800081e <__aeabi_ddiv+0x82>
 800089c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a0:	d10b      	bne.n	80008ba <__aeabi_ddiv+0x11e>
 80008a2:	ea41 0100 	orr.w	r1, r1, r0
 80008a6:	f04f 0000 	mov.w	r0, #0
 80008aa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008ae:	e7b6      	b.n	800081e <__aeabi_ddiv+0x82>
 80008b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008b4:	bf04      	itt	eq
 80008b6:	4301      	orreq	r1, r0
 80008b8:	2000      	moveq	r0, #0
 80008ba:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008be:	bf88      	it	hi
 80008c0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008c4:	f63f aeaf 	bhi.w	8000626 <__aeabi_dmul+0xde>
 80008c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80008cc:	bf04      	itt	eq
 80008ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008d6:	f150 0000 	adcs.w	r0, r0, #0
 80008da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008de:	bd70      	pop	{r4, r5, r6, pc}
 80008e0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008ec:	bfc2      	ittt	gt
 80008ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008f6:	bd70      	popgt	{r4, r5, r6, pc}
 80008f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008fc:	f04f 0e00 	mov.w	lr, #0
 8000900:	3c01      	subs	r4, #1
 8000902:	e690      	b.n	8000626 <__aeabi_dmul+0xde>
 8000904:	ea45 0e06 	orr.w	lr, r5, r6
 8000908:	e68d      	b.n	8000626 <__aeabi_dmul+0xde>
 800090a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800090e:	ea94 0f0c 	teq	r4, ip
 8000912:	bf08      	it	eq
 8000914:	ea95 0f0c 	teqeq	r5, ip
 8000918:	f43f af3b 	beq.w	8000792 <__aeabi_dmul+0x24a>
 800091c:	ea94 0f0c 	teq	r4, ip
 8000920:	d10a      	bne.n	8000938 <__aeabi_ddiv+0x19c>
 8000922:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000926:	f47f af34 	bne.w	8000792 <__aeabi_dmul+0x24a>
 800092a:	ea95 0f0c 	teq	r5, ip
 800092e:	f47f af25 	bne.w	800077c <__aeabi_dmul+0x234>
 8000932:	4610      	mov	r0, r2
 8000934:	4619      	mov	r1, r3
 8000936:	e72c      	b.n	8000792 <__aeabi_dmul+0x24a>
 8000938:	ea95 0f0c 	teq	r5, ip
 800093c:	d106      	bne.n	800094c <__aeabi_ddiv+0x1b0>
 800093e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000942:	f43f aefd 	beq.w	8000740 <__aeabi_dmul+0x1f8>
 8000946:	4610      	mov	r0, r2
 8000948:	4619      	mov	r1, r3
 800094a:	e722      	b.n	8000792 <__aeabi_dmul+0x24a>
 800094c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000950:	bf18      	it	ne
 8000952:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000956:	f47f aec5 	bne.w	80006e4 <__aeabi_dmul+0x19c>
 800095a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800095e:	f47f af0d 	bne.w	800077c <__aeabi_dmul+0x234>
 8000962:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000966:	f47f aeeb 	bne.w	8000740 <__aeabi_dmul+0x1f8>
 800096a:	e712      	b.n	8000792 <__aeabi_dmul+0x24a>

0800096c <__gedf2>:
 800096c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000970:	e006      	b.n	8000980 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__ledf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	e002      	b.n	8000980 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__cmpdf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000984:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000988:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800098c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000990:	bf18      	it	ne
 8000992:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000996:	d01b      	beq.n	80009d0 <__cmpdf2+0x54>
 8000998:	b001      	add	sp, #4
 800099a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800099e:	bf0c      	ite	eq
 80009a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009a4:	ea91 0f03 	teqne	r1, r3
 80009a8:	bf02      	ittt	eq
 80009aa:	ea90 0f02 	teqeq	r0, r2
 80009ae:	2000      	moveq	r0, #0
 80009b0:	4770      	bxeq	lr
 80009b2:	f110 0f00 	cmn.w	r0, #0
 80009b6:	ea91 0f03 	teq	r1, r3
 80009ba:	bf58      	it	pl
 80009bc:	4299      	cmppl	r1, r3
 80009be:	bf08      	it	eq
 80009c0:	4290      	cmpeq	r0, r2
 80009c2:	bf2c      	ite	cs
 80009c4:	17d8      	asrcs	r0, r3, #31
 80009c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009ca:	f040 0001 	orr.w	r0, r0, #1
 80009ce:	4770      	bx	lr
 80009d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d8:	d102      	bne.n	80009e0 <__cmpdf2+0x64>
 80009da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009de:	d107      	bne.n	80009f0 <__cmpdf2+0x74>
 80009e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e8:	d1d6      	bne.n	8000998 <__cmpdf2+0x1c>
 80009ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009ee:	d0d3      	beq.n	8000998 <__cmpdf2+0x1c>
 80009f0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009f4:	4770      	bx	lr
 80009f6:	bf00      	nop

080009f8 <__aeabi_cdrcmple>:
 80009f8:	4684      	mov	ip, r0
 80009fa:	4610      	mov	r0, r2
 80009fc:	4662      	mov	r2, ip
 80009fe:	468c      	mov	ip, r1
 8000a00:	4619      	mov	r1, r3
 8000a02:	4663      	mov	r3, ip
 8000a04:	e000      	b.n	8000a08 <__aeabi_cdcmpeq>
 8000a06:	bf00      	nop

08000a08 <__aeabi_cdcmpeq>:
 8000a08:	b501      	push	{r0, lr}
 8000a0a:	f7ff ffb7 	bl	800097c <__cmpdf2>
 8000a0e:	2800      	cmp	r0, #0
 8000a10:	bf48      	it	mi
 8000a12:	f110 0f00 	cmnmi.w	r0, #0
 8000a16:	bd01      	pop	{r0, pc}

08000a18 <__aeabi_dcmpeq>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff fff4 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a20:	bf0c      	ite	eq
 8000a22:	2001      	moveq	r0, #1
 8000a24:	2000      	movne	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmplt>:
 8000a2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a30:	f7ff ffea 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a34:	bf34      	ite	cc
 8000a36:	2001      	movcc	r0, #1
 8000a38:	2000      	movcs	r0, #0
 8000a3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3e:	bf00      	nop

08000a40 <__aeabi_dcmple>:
 8000a40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a44:	f7ff ffe0 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a48:	bf94      	ite	ls
 8000a4a:	2001      	movls	r0, #1
 8000a4c:	2000      	movhi	r0, #0
 8000a4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a52:	bf00      	nop

08000a54 <__aeabi_dcmpge>:
 8000a54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a58:	f7ff ffce 	bl	80009f8 <__aeabi_cdrcmple>
 8000a5c:	bf94      	ite	ls
 8000a5e:	2001      	movls	r0, #1
 8000a60:	2000      	movhi	r0, #0
 8000a62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a66:	bf00      	nop

08000a68 <__aeabi_dcmpgt>:
 8000a68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a6c:	f7ff ffc4 	bl	80009f8 <__aeabi_cdrcmple>
 8000a70:	bf34      	ite	cc
 8000a72:	2001      	movcc	r0, #1
 8000a74:	2000      	movcs	r0, #0
 8000a76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7a:	bf00      	nop

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2f>:
 8000acc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ad0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad4:	bf24      	itt	cs
 8000ad6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ada:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ade:	d90d      	bls.n	8000afc <__aeabi_d2f+0x30>
 8000ae0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aec:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000af0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af4:	bf08      	it	eq
 8000af6:	f020 0001 	biceq.w	r0, r0, #1
 8000afa:	4770      	bx	lr
 8000afc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b00:	d121      	bne.n	8000b46 <__aeabi_d2f+0x7a>
 8000b02:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b06:	bfbc      	itt	lt
 8000b08:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b0c:	4770      	bxlt	lr
 8000b0e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b12:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b16:	f1c2 0218 	rsb	r2, r2, #24
 8000b1a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b22:	fa20 f002 	lsr.w	r0, r0, r2
 8000b26:	bf18      	it	ne
 8000b28:	f040 0001 	orrne.w	r0, r0, #1
 8000b2c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b30:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b34:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b38:	ea40 000c 	orr.w	r0, r0, ip
 8000b3c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b40:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b44:	e7cc      	b.n	8000ae0 <__aeabi_d2f+0x14>
 8000b46:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b4a:	d107      	bne.n	8000b5c <__aeabi_d2f+0x90>
 8000b4c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b50:	bf1e      	ittt	ne
 8000b52:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b56:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b5a:	4770      	bxne	lr
 8000b5c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b60:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b64:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop

08000b6c <__aeabi_uldivmod>:
 8000b6c:	b953      	cbnz	r3, 8000b84 <__aeabi_uldivmod+0x18>
 8000b6e:	b94a      	cbnz	r2, 8000b84 <__aeabi_uldivmod+0x18>
 8000b70:	2900      	cmp	r1, #0
 8000b72:	bf08      	it	eq
 8000b74:	2800      	cmpeq	r0, #0
 8000b76:	bf1c      	itt	ne
 8000b78:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000b7c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000b80:	f000 b96e 	b.w	8000e60 <__aeabi_idiv0>
 8000b84:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b88:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b8c:	f000 f806 	bl	8000b9c <__udivmoddi4>
 8000b90:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b94:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b98:	b004      	add	sp, #16
 8000b9a:	4770      	bx	lr

08000b9c <__udivmoddi4>:
 8000b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ba0:	9d08      	ldr	r5, [sp, #32]
 8000ba2:	4604      	mov	r4, r0
 8000ba4:	468c      	mov	ip, r1
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	f040 8083 	bne.w	8000cb2 <__udivmoddi4+0x116>
 8000bac:	428a      	cmp	r2, r1
 8000bae:	4617      	mov	r7, r2
 8000bb0:	d947      	bls.n	8000c42 <__udivmoddi4+0xa6>
 8000bb2:	fab2 f282 	clz	r2, r2
 8000bb6:	b142      	cbz	r2, 8000bca <__udivmoddi4+0x2e>
 8000bb8:	f1c2 0020 	rsb	r0, r2, #32
 8000bbc:	fa24 f000 	lsr.w	r0, r4, r0
 8000bc0:	4091      	lsls	r1, r2
 8000bc2:	4097      	lsls	r7, r2
 8000bc4:	ea40 0c01 	orr.w	ip, r0, r1
 8000bc8:	4094      	lsls	r4, r2
 8000bca:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000bce:	0c23      	lsrs	r3, r4, #16
 8000bd0:	fbbc f6f8 	udiv	r6, ip, r8
 8000bd4:	fa1f fe87 	uxth.w	lr, r7
 8000bd8:	fb08 c116 	mls	r1, r8, r6, ip
 8000bdc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000be0:	fb06 f10e 	mul.w	r1, r6, lr
 8000be4:	4299      	cmp	r1, r3
 8000be6:	d909      	bls.n	8000bfc <__udivmoddi4+0x60>
 8000be8:	18fb      	adds	r3, r7, r3
 8000bea:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000bee:	f080 8119 	bcs.w	8000e24 <__udivmoddi4+0x288>
 8000bf2:	4299      	cmp	r1, r3
 8000bf4:	f240 8116 	bls.w	8000e24 <__udivmoddi4+0x288>
 8000bf8:	3e02      	subs	r6, #2
 8000bfa:	443b      	add	r3, r7
 8000bfc:	1a5b      	subs	r3, r3, r1
 8000bfe:	b2a4      	uxth	r4, r4
 8000c00:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c04:	fb08 3310 	mls	r3, r8, r0, r3
 8000c08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c0c:	fb00 fe0e 	mul.w	lr, r0, lr
 8000c10:	45a6      	cmp	lr, r4
 8000c12:	d909      	bls.n	8000c28 <__udivmoddi4+0x8c>
 8000c14:	193c      	adds	r4, r7, r4
 8000c16:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000c1a:	f080 8105 	bcs.w	8000e28 <__udivmoddi4+0x28c>
 8000c1e:	45a6      	cmp	lr, r4
 8000c20:	f240 8102 	bls.w	8000e28 <__udivmoddi4+0x28c>
 8000c24:	3802      	subs	r0, #2
 8000c26:	443c      	add	r4, r7
 8000c28:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c2c:	eba4 040e 	sub.w	r4, r4, lr
 8000c30:	2600      	movs	r6, #0
 8000c32:	b11d      	cbz	r5, 8000c3c <__udivmoddi4+0xa0>
 8000c34:	40d4      	lsrs	r4, r2
 8000c36:	2300      	movs	r3, #0
 8000c38:	e9c5 4300 	strd	r4, r3, [r5]
 8000c3c:	4631      	mov	r1, r6
 8000c3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c42:	b902      	cbnz	r2, 8000c46 <__udivmoddi4+0xaa>
 8000c44:	deff      	udf	#255	; 0xff
 8000c46:	fab2 f282 	clz	r2, r2
 8000c4a:	2a00      	cmp	r2, #0
 8000c4c:	d150      	bne.n	8000cf0 <__udivmoddi4+0x154>
 8000c4e:	1bcb      	subs	r3, r1, r7
 8000c50:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000c54:	fa1f f887 	uxth.w	r8, r7
 8000c58:	2601      	movs	r6, #1
 8000c5a:	fbb3 fcfe 	udiv	ip, r3, lr
 8000c5e:	0c21      	lsrs	r1, r4, #16
 8000c60:	fb0e 331c 	mls	r3, lr, ip, r3
 8000c64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000c68:	fb08 f30c 	mul.w	r3, r8, ip
 8000c6c:	428b      	cmp	r3, r1
 8000c6e:	d907      	bls.n	8000c80 <__udivmoddi4+0xe4>
 8000c70:	1879      	adds	r1, r7, r1
 8000c72:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8000c76:	d202      	bcs.n	8000c7e <__udivmoddi4+0xe2>
 8000c78:	428b      	cmp	r3, r1
 8000c7a:	f200 80e9 	bhi.w	8000e50 <__udivmoddi4+0x2b4>
 8000c7e:	4684      	mov	ip, r0
 8000c80:	1ac9      	subs	r1, r1, r3
 8000c82:	b2a3      	uxth	r3, r4
 8000c84:	fbb1 f0fe 	udiv	r0, r1, lr
 8000c88:	fb0e 1110 	mls	r1, lr, r0, r1
 8000c8c:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000c90:	fb08 f800 	mul.w	r8, r8, r0
 8000c94:	45a0      	cmp	r8, r4
 8000c96:	d907      	bls.n	8000ca8 <__udivmoddi4+0x10c>
 8000c98:	193c      	adds	r4, r7, r4
 8000c9a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000c9e:	d202      	bcs.n	8000ca6 <__udivmoddi4+0x10a>
 8000ca0:	45a0      	cmp	r8, r4
 8000ca2:	f200 80d9 	bhi.w	8000e58 <__udivmoddi4+0x2bc>
 8000ca6:	4618      	mov	r0, r3
 8000ca8:	eba4 0408 	sub.w	r4, r4, r8
 8000cac:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000cb0:	e7bf      	b.n	8000c32 <__udivmoddi4+0x96>
 8000cb2:	428b      	cmp	r3, r1
 8000cb4:	d909      	bls.n	8000cca <__udivmoddi4+0x12e>
 8000cb6:	2d00      	cmp	r5, #0
 8000cb8:	f000 80b1 	beq.w	8000e1e <__udivmoddi4+0x282>
 8000cbc:	2600      	movs	r6, #0
 8000cbe:	e9c5 0100 	strd	r0, r1, [r5]
 8000cc2:	4630      	mov	r0, r6
 8000cc4:	4631      	mov	r1, r6
 8000cc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cca:	fab3 f683 	clz	r6, r3
 8000cce:	2e00      	cmp	r6, #0
 8000cd0:	d14a      	bne.n	8000d68 <__udivmoddi4+0x1cc>
 8000cd2:	428b      	cmp	r3, r1
 8000cd4:	d302      	bcc.n	8000cdc <__udivmoddi4+0x140>
 8000cd6:	4282      	cmp	r2, r0
 8000cd8:	f200 80b8 	bhi.w	8000e4c <__udivmoddi4+0x2b0>
 8000cdc:	1a84      	subs	r4, r0, r2
 8000cde:	eb61 0103 	sbc.w	r1, r1, r3
 8000ce2:	2001      	movs	r0, #1
 8000ce4:	468c      	mov	ip, r1
 8000ce6:	2d00      	cmp	r5, #0
 8000ce8:	d0a8      	beq.n	8000c3c <__udivmoddi4+0xa0>
 8000cea:	e9c5 4c00 	strd	r4, ip, [r5]
 8000cee:	e7a5      	b.n	8000c3c <__udivmoddi4+0xa0>
 8000cf0:	f1c2 0320 	rsb	r3, r2, #32
 8000cf4:	fa20 f603 	lsr.w	r6, r0, r3
 8000cf8:	4097      	lsls	r7, r2
 8000cfa:	fa01 f002 	lsl.w	r0, r1, r2
 8000cfe:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d02:	40d9      	lsrs	r1, r3
 8000d04:	4330      	orrs	r0, r6
 8000d06:	0c03      	lsrs	r3, r0, #16
 8000d08:	fbb1 f6fe 	udiv	r6, r1, lr
 8000d0c:	fa1f f887 	uxth.w	r8, r7
 8000d10:	fb0e 1116 	mls	r1, lr, r6, r1
 8000d14:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d18:	fb06 f108 	mul.w	r1, r6, r8
 8000d1c:	4299      	cmp	r1, r3
 8000d1e:	fa04 f402 	lsl.w	r4, r4, r2
 8000d22:	d909      	bls.n	8000d38 <__udivmoddi4+0x19c>
 8000d24:	18fb      	adds	r3, r7, r3
 8000d26:	f106 3cff 	add.w	ip, r6, #4294967295	; 0xffffffff
 8000d2a:	f080 808d 	bcs.w	8000e48 <__udivmoddi4+0x2ac>
 8000d2e:	4299      	cmp	r1, r3
 8000d30:	f240 808a 	bls.w	8000e48 <__udivmoddi4+0x2ac>
 8000d34:	3e02      	subs	r6, #2
 8000d36:	443b      	add	r3, r7
 8000d38:	1a5b      	subs	r3, r3, r1
 8000d3a:	b281      	uxth	r1, r0
 8000d3c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d40:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d44:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d48:	fb00 f308 	mul.w	r3, r0, r8
 8000d4c:	428b      	cmp	r3, r1
 8000d4e:	d907      	bls.n	8000d60 <__udivmoddi4+0x1c4>
 8000d50:	1879      	adds	r1, r7, r1
 8000d52:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8000d56:	d273      	bcs.n	8000e40 <__udivmoddi4+0x2a4>
 8000d58:	428b      	cmp	r3, r1
 8000d5a:	d971      	bls.n	8000e40 <__udivmoddi4+0x2a4>
 8000d5c:	3802      	subs	r0, #2
 8000d5e:	4439      	add	r1, r7
 8000d60:	1acb      	subs	r3, r1, r3
 8000d62:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000d66:	e778      	b.n	8000c5a <__udivmoddi4+0xbe>
 8000d68:	f1c6 0c20 	rsb	ip, r6, #32
 8000d6c:	fa03 f406 	lsl.w	r4, r3, r6
 8000d70:	fa22 f30c 	lsr.w	r3, r2, ip
 8000d74:	431c      	orrs	r4, r3
 8000d76:	fa20 f70c 	lsr.w	r7, r0, ip
 8000d7a:	fa01 f306 	lsl.w	r3, r1, r6
 8000d7e:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000d82:	fa21 f10c 	lsr.w	r1, r1, ip
 8000d86:	431f      	orrs	r7, r3
 8000d88:	0c3b      	lsrs	r3, r7, #16
 8000d8a:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d8e:	fa1f f884 	uxth.w	r8, r4
 8000d92:	fb0e 1119 	mls	r1, lr, r9, r1
 8000d96:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000d9a:	fb09 fa08 	mul.w	sl, r9, r8
 8000d9e:	458a      	cmp	sl, r1
 8000da0:	fa02 f206 	lsl.w	r2, r2, r6
 8000da4:	fa00 f306 	lsl.w	r3, r0, r6
 8000da8:	d908      	bls.n	8000dbc <__udivmoddi4+0x220>
 8000daa:	1861      	adds	r1, r4, r1
 8000dac:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8000db0:	d248      	bcs.n	8000e44 <__udivmoddi4+0x2a8>
 8000db2:	458a      	cmp	sl, r1
 8000db4:	d946      	bls.n	8000e44 <__udivmoddi4+0x2a8>
 8000db6:	f1a9 0902 	sub.w	r9, r9, #2
 8000dba:	4421      	add	r1, r4
 8000dbc:	eba1 010a 	sub.w	r1, r1, sl
 8000dc0:	b2bf      	uxth	r7, r7
 8000dc2:	fbb1 f0fe 	udiv	r0, r1, lr
 8000dc6:	fb0e 1110 	mls	r1, lr, r0, r1
 8000dca:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000dce:	fb00 f808 	mul.w	r8, r0, r8
 8000dd2:	45b8      	cmp	r8, r7
 8000dd4:	d907      	bls.n	8000de6 <__udivmoddi4+0x24a>
 8000dd6:	19e7      	adds	r7, r4, r7
 8000dd8:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 8000ddc:	d22e      	bcs.n	8000e3c <__udivmoddi4+0x2a0>
 8000dde:	45b8      	cmp	r8, r7
 8000de0:	d92c      	bls.n	8000e3c <__udivmoddi4+0x2a0>
 8000de2:	3802      	subs	r0, #2
 8000de4:	4427      	add	r7, r4
 8000de6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000dea:	eba7 0708 	sub.w	r7, r7, r8
 8000dee:	fba0 8902 	umull	r8, r9, r0, r2
 8000df2:	454f      	cmp	r7, r9
 8000df4:	46c6      	mov	lr, r8
 8000df6:	4649      	mov	r1, r9
 8000df8:	d31a      	bcc.n	8000e30 <__udivmoddi4+0x294>
 8000dfa:	d017      	beq.n	8000e2c <__udivmoddi4+0x290>
 8000dfc:	b15d      	cbz	r5, 8000e16 <__udivmoddi4+0x27a>
 8000dfe:	ebb3 020e 	subs.w	r2, r3, lr
 8000e02:	eb67 0701 	sbc.w	r7, r7, r1
 8000e06:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000e0a:	40f2      	lsrs	r2, r6
 8000e0c:	ea4c 0202 	orr.w	r2, ip, r2
 8000e10:	40f7      	lsrs	r7, r6
 8000e12:	e9c5 2700 	strd	r2, r7, [r5]
 8000e16:	2600      	movs	r6, #0
 8000e18:	4631      	mov	r1, r6
 8000e1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e1e:	462e      	mov	r6, r5
 8000e20:	4628      	mov	r0, r5
 8000e22:	e70b      	b.n	8000c3c <__udivmoddi4+0xa0>
 8000e24:	4606      	mov	r6, r0
 8000e26:	e6e9      	b.n	8000bfc <__udivmoddi4+0x60>
 8000e28:	4618      	mov	r0, r3
 8000e2a:	e6fd      	b.n	8000c28 <__udivmoddi4+0x8c>
 8000e2c:	4543      	cmp	r3, r8
 8000e2e:	d2e5      	bcs.n	8000dfc <__udivmoddi4+0x260>
 8000e30:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e34:	eb69 0104 	sbc.w	r1, r9, r4
 8000e38:	3801      	subs	r0, #1
 8000e3a:	e7df      	b.n	8000dfc <__udivmoddi4+0x260>
 8000e3c:	4608      	mov	r0, r1
 8000e3e:	e7d2      	b.n	8000de6 <__udivmoddi4+0x24a>
 8000e40:	4660      	mov	r0, ip
 8000e42:	e78d      	b.n	8000d60 <__udivmoddi4+0x1c4>
 8000e44:	4681      	mov	r9, r0
 8000e46:	e7b9      	b.n	8000dbc <__udivmoddi4+0x220>
 8000e48:	4666      	mov	r6, ip
 8000e4a:	e775      	b.n	8000d38 <__udivmoddi4+0x19c>
 8000e4c:	4630      	mov	r0, r6
 8000e4e:	e74a      	b.n	8000ce6 <__udivmoddi4+0x14a>
 8000e50:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e54:	4439      	add	r1, r7
 8000e56:	e713      	b.n	8000c80 <__udivmoddi4+0xe4>
 8000e58:	3802      	subs	r0, #2
 8000e5a:	443c      	add	r4, r7
 8000e5c:	e724      	b.n	8000ca8 <__udivmoddi4+0x10c>
 8000e5e:	bf00      	nop

08000e60 <__aeabi_idiv0>:
 8000e60:	4770      	bx	lr
 8000e62:	bf00      	nop

08000e64 <to_frame>:

#include "comm_relay.h"
#include "stdint.h"
#include "main.h"

int to_frame(char * frame, uint8_t *revolutionAddr, uint8_t *ID) {
 8000e64:	b580      	push	{r7, lr}
 8000e66:	b088      	sub	sp, #32
 8000e68:	af00      	add	r7, sp, #0
 8000e6a:	60f8      	str	r0, [r7, #12]
 8000e6c:	60b9      	str	r1, [r7, #8]
 8000e6e:	607a      	str	r2, [r7, #4]

	int i = 2, j = 0, PACKAGE_SIZE = 0;
 8000e70:	2302      	movs	r3, #2
 8000e72:	61fb      	str	r3, [r7, #28]
 8000e74:	2300      	movs	r3, #0
 8000e76:	61bb      	str	r3, [r7, #24]
 8000e78:	2300      	movs	r3, #0
 8000e7a:	617b      	str	r3, [r7, #20]

	frame[0] = COMM_DEL_START;
 8000e7c:	68fb      	ldr	r3, [r7, #12]
 8000e7e:	2224      	movs	r2, #36	; 0x24
 8000e80:	701a      	strb	r2, [r3, #0]
	frame[1] = ID;
 8000e82:	687a      	ldr	r2, [r7, #4]
 8000e84:	68fb      	ldr	r3, [r7, #12]
 8000e86:	3301      	adds	r3, #1
 8000e88:	b2d2      	uxtb	r2, r2
 8000e8a:	701a      	strb	r2, [r3, #0]

	if (ID == 3) {
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	2b03      	cmp	r3, #3
 8000e90:	d102      	bne.n	8000e98 <to_frame+0x34>
		PACKAGE_SIZE = 5;
 8000e92:	2305      	movs	r3, #5
 8000e94:	617b      	str	r3, [r7, #20]
 8000e96:	e02d      	b.n	8000ef4 <to_frame+0x90>
	} else if (ID == 2) {
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	2b02      	cmp	r3, #2
 8000e9c:	d12a      	bne.n	8000ef4 <to_frame+0x90>
		PACKAGE_SIZE = 24;
 8000e9e:	2318      	movs	r3, #24
 8000ea0:	617b      	str	r3, [r7, #20]
	}

	for (; i < FRAME_SIZE && j < PACKAGE_SIZE; i++, j++) {
 8000ea2:	e027      	b.n	8000ef4 <to_frame+0x90>
		char c;
		c = *(revolutionAddr + j);
 8000ea4:	69bb      	ldr	r3, [r7, #24]
 8000ea6:	68ba      	ldr	r2, [r7, #8]
 8000ea8:	4413      	add	r3, r2
 8000eaa:	781b      	ldrb	r3, [r3, #0]
 8000eac:	74fb      	strb	r3, [r7, #19]

		if (is_special_character(c)) {
 8000eae:	7cfb      	ldrb	r3, [r7, #19]
 8000eb0:	4618      	mov	r0, r3
 8000eb2:	f000 f830 	bl	8000f16 <is_special_character>
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	2b00      	cmp	r3, #0
 8000eba:	d010      	beq.n	8000ede <to_frame+0x7a>
			frame[i] = COMM_ESCAPE;
 8000ebc:	69fb      	ldr	r3, [r7, #28]
 8000ebe:	68fa      	ldr	r2, [r7, #12]
 8000ec0:	4413      	add	r3, r2
 8000ec2:	2223      	movs	r2, #35	; 0x23
 8000ec4:	701a      	strb	r2, [r3, #0]
			frame[i+1] = c + 2;
 8000ec6:	69fb      	ldr	r3, [r7, #28]
 8000ec8:	3301      	adds	r3, #1
 8000eca:	68fa      	ldr	r2, [r7, #12]
 8000ecc:	4413      	add	r3, r2
 8000ece:	7cfa      	ldrb	r2, [r7, #19]
 8000ed0:	3202      	adds	r2, #2
 8000ed2:	b2d2      	uxtb	r2, r2
 8000ed4:	701a      	strb	r2, [r3, #0]
			i++;
 8000ed6:	69fb      	ldr	r3, [r7, #28]
 8000ed8:	3301      	adds	r3, #1
 8000eda:	61fb      	str	r3, [r7, #28]
 8000edc:	e004      	b.n	8000ee8 <to_frame+0x84>
		} else {
			frame[i] = c;
 8000ede:	69fb      	ldr	r3, [r7, #28]
 8000ee0:	68fa      	ldr	r2, [r7, #12]
 8000ee2:	4413      	add	r3, r2
 8000ee4:	7cfa      	ldrb	r2, [r7, #19]
 8000ee6:	701a      	strb	r2, [r3, #0]
	for (; i < FRAME_SIZE && j < PACKAGE_SIZE; i++, j++) {
 8000ee8:	69fb      	ldr	r3, [r7, #28]
 8000eea:	3301      	adds	r3, #1
 8000eec:	61fb      	str	r3, [r7, #28]
 8000eee:	69bb      	ldr	r3, [r7, #24]
 8000ef0:	3301      	adds	r3, #1
 8000ef2:	61bb      	str	r3, [r7, #24]
 8000ef4:	69fb      	ldr	r3, [r7, #28]
 8000ef6:	2b32      	cmp	r3, #50	; 0x32
 8000ef8:	dc03      	bgt.n	8000f02 <to_frame+0x9e>
 8000efa:	69ba      	ldr	r2, [r7, #24]
 8000efc:	697b      	ldr	r3, [r7, #20]
 8000efe:	429a      	cmp	r2, r3
 8000f00:	dbd0      	blt.n	8000ea4 <to_frame+0x40>
		}
	}

	frame[i] = COMM_DEL_STOP;
 8000f02:	69fb      	ldr	r3, [r7, #28]
 8000f04:	68fa      	ldr	r2, [r7, #12]
 8000f06:	4413      	add	r3, r2
 8000f08:	2240      	movs	r2, #64	; 0x40
 8000f0a:	701a      	strb	r2, [r3, #0]

	return 1;
 8000f0c:	2301      	movs	r3, #1
}
 8000f0e:	4618      	mov	r0, r3
 8000f10:	3720      	adds	r7, #32
 8000f12:	46bd      	mov	sp, r7
 8000f14:	bd80      	pop	{r7, pc}

08000f16 <is_special_character>:


int is_special_character(char c) {
 8000f16:	b480      	push	{r7}
 8000f18:	b083      	sub	sp, #12
 8000f1a:	af00      	add	r7, sp, #0
 8000f1c:	4603      	mov	r3, r0
 8000f1e:	71fb      	strb	r3, [r7, #7]
	if ((c == COMM_DEL_START) || (c == COMM_DEL_STOP) || (c == COMM_ESCAPE) || (c == 0)) return 1;
 8000f20:	79fb      	ldrb	r3, [r7, #7]
 8000f22:	2b24      	cmp	r3, #36	; 0x24
 8000f24:	d008      	beq.n	8000f38 <is_special_character+0x22>
 8000f26:	79fb      	ldrb	r3, [r7, #7]
 8000f28:	2b40      	cmp	r3, #64	; 0x40
 8000f2a:	d005      	beq.n	8000f38 <is_special_character+0x22>
 8000f2c:	79fb      	ldrb	r3, [r7, #7]
 8000f2e:	2b23      	cmp	r3, #35	; 0x23
 8000f30:	d002      	beq.n	8000f38 <is_special_character+0x22>
 8000f32:	79fb      	ldrb	r3, [r7, #7]
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	d101      	bne.n	8000f3c <is_special_character+0x26>
 8000f38:	2301      	movs	r3, #1
 8000f3a:	e000      	b.n	8000f3e <is_special_character+0x28>
	return 0;
 8000f3c:	2300      	movs	r3, #0
}
 8000f3e:	4618      	mov	r0, r3
 8000f40:	370c      	adds	r7, #12
 8000f42:	46bd      	mov	sp, r7
 8000f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f48:	4770      	bx	lr

08000f4a <from_frame>:

int from_frame(const char * frame, size_t len, char * destination, uint32_t *outputLen) {
 8000f4a:	b480      	push	{r7}
 8000f4c:	b089      	sub	sp, #36	; 0x24
 8000f4e:	af00      	add	r7, sp, #0
 8000f50:	60f8      	str	r0, [r7, #12]
 8000f52:	60b9      	str	r1, [r7, #8]
 8000f54:	607a      	str	r2, [r7, #4]
 8000f56:	603b      	str	r3, [r7, #0]
	uint32_t indexFrame = 0, indexDest = 0;
 8000f58:	2300      	movs	r3, #0
 8000f5a:	61fb      	str	r3, [r7, #28]
 8000f5c:	2300      	movs	r3, #0
 8000f5e:	61bb      	str	r3, [r7, #24]

	if (frame[0] == COMM_DEL_START) indexFrame++;
 8000f60:	68fb      	ldr	r3, [r7, #12]
 8000f62:	781b      	ldrb	r3, [r3, #0]
 8000f64:	2b24      	cmp	r3, #36	; 0x24
 8000f66:	d137      	bne.n	8000fd8 <from_frame+0x8e>
 8000f68:	69fb      	ldr	r3, [r7, #28]
 8000f6a:	3301      	adds	r3, #1
 8000f6c:	61fb      	str	r3, [r7, #28]

	for (; indexFrame < len - 1; indexFrame++, indexDest++) {
 8000f6e:	e033      	b.n	8000fd8 <from_frame+0x8e>
		char c = 0;
 8000f70:	2300      	movs	r3, #0
 8000f72:	75fb      	strb	r3, [r7, #23]

		if (frame[indexFrame] == COMM_DEL_START) return -1; // If we meet start delimiter inside frame data, something's wrong.
 8000f74:	68fa      	ldr	r2, [r7, #12]
 8000f76:	69fb      	ldr	r3, [r7, #28]
 8000f78:	4413      	add	r3, r2
 8000f7a:	781b      	ldrb	r3, [r3, #0]
 8000f7c:	2b24      	cmp	r3, #36	; 0x24
 8000f7e:	d102      	bne.n	8000f86 <from_frame+0x3c>
 8000f80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000f84:	e044      	b.n	8001010 <from_frame+0xc6>
		if (frame[indexFrame] == COMM_DEL_STOP) return 1; // If we meet stop delimiter inside frame data, it is just a shorter message.
 8000f86:	68fa      	ldr	r2, [r7, #12]
 8000f88:	69fb      	ldr	r3, [r7, #28]
 8000f8a:	4413      	add	r3, r2
 8000f8c:	781b      	ldrb	r3, [r3, #0]
 8000f8e:	2b40      	cmp	r3, #64	; 0x40
 8000f90:	d101      	bne.n	8000f96 <from_frame+0x4c>
 8000f92:	2301      	movs	r3, #1
 8000f94:	e03c      	b.n	8001010 <from_frame+0xc6>

		if (frame[indexFrame] == COMM_ESCAPE) {
 8000f96:	68fa      	ldr	r2, [r7, #12]
 8000f98:	69fb      	ldr	r3, [r7, #28]
 8000f9a:	4413      	add	r3, r2
 8000f9c:	781b      	ldrb	r3, [r3, #0]
 8000f9e:	2b23      	cmp	r3, #35	; 0x23
 8000fa0:	d10a      	bne.n	8000fb8 <from_frame+0x6e>
			c = frame[indexFrame+1] - 2; // Return the character after the escape character minus 2
 8000fa2:	69fb      	ldr	r3, [r7, #28]
 8000fa4:	3301      	adds	r3, #1
 8000fa6:	68fa      	ldr	r2, [r7, #12]
 8000fa8:	4413      	add	r3, r2
 8000faa:	781b      	ldrb	r3, [r3, #0]
 8000fac:	3b02      	subs	r3, #2
 8000fae:	75fb      	strb	r3, [r7, #23]
			indexFrame++;
 8000fb0:	69fb      	ldr	r3, [r7, #28]
 8000fb2:	3301      	adds	r3, #1
 8000fb4:	61fb      	str	r3, [r7, #28]
 8000fb6:	e004      	b.n	8000fc2 <from_frame+0x78>
		}
		else c = frame[indexFrame]; // There was no escape character, so return it
 8000fb8:	68fa      	ldr	r2, [r7, #12]
 8000fba:	69fb      	ldr	r3, [r7, #28]
 8000fbc:	4413      	add	r3, r2
 8000fbe:	781b      	ldrb	r3, [r3, #0]
 8000fc0:	75fb      	strb	r3, [r7, #23]

		destination[indexDest] = c; 	// Insert the data
 8000fc2:	687a      	ldr	r2, [r7, #4]
 8000fc4:	69bb      	ldr	r3, [r7, #24]
 8000fc6:	4413      	add	r3, r2
 8000fc8:	7dfa      	ldrb	r2, [r7, #23]
 8000fca:	701a      	strb	r2, [r3, #0]
	for (; indexFrame < len - 1; indexFrame++, indexDest++) {
 8000fcc:	69fb      	ldr	r3, [r7, #28]
 8000fce:	3301      	adds	r3, #1
 8000fd0:	61fb      	str	r3, [r7, #28]
 8000fd2:	69bb      	ldr	r3, [r7, #24]
 8000fd4:	3301      	adds	r3, #1
 8000fd6:	61bb      	str	r3, [r7, #24]
 8000fd8:	68bb      	ldr	r3, [r7, #8]
 8000fda:	3b01      	subs	r3, #1
 8000fdc:	69fa      	ldr	r2, [r7, #28]
 8000fde:	429a      	cmp	r2, r3
 8000fe0:	d3c6      	bcc.n	8000f70 <from_frame+0x26>
	}

	// Check whether the last character is either the specified stop delimiter or '0'
	if (indexFrame < len) {
 8000fe2:	69fa      	ldr	r2, [r7, #28]
 8000fe4:	68bb      	ldr	r3, [r7, #8]
 8000fe6:	429a      	cmp	r2, r3
 8000fe8:	d20e      	bcs.n	8001008 <from_frame+0xbe>
		if (!(frame[indexFrame] == COMM_DEL_STOP || frame[indexFrame] == 0)) return -1;
 8000fea:	68fa      	ldr	r2, [r7, #12]
 8000fec:	69fb      	ldr	r3, [r7, #28]
 8000fee:	4413      	add	r3, r2
 8000ff0:	781b      	ldrb	r3, [r3, #0]
 8000ff2:	2b40      	cmp	r3, #64	; 0x40
 8000ff4:	d008      	beq.n	8001008 <from_frame+0xbe>
 8000ff6:	68fa      	ldr	r2, [r7, #12]
 8000ff8:	69fb      	ldr	r3, [r7, #28]
 8000ffa:	4413      	add	r3, r2
 8000ffc:	781b      	ldrb	r3, [r3, #0]
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d002      	beq.n	8001008 <from_frame+0xbe>
 8001002:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001006:	e003      	b.n	8001010 <from_frame+0xc6>
	}

	*outputLen = indexDest;
 8001008:	683b      	ldr	r3, [r7, #0]
 800100a:	69ba      	ldr	r2, [r7, #24]
 800100c:	601a      	str	r2, [r3, #0]

	return 1;
 800100e:	2301      	movs	r3, #1
}
 8001010:	4618      	mov	r0, r3
 8001012:	3724      	adds	r7, #36	; 0x24
 8001014:	46bd      	mov	sp, r7
 8001016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800101a:	4770      	bx	lr
 800101c:	0000      	movs	r0, r0
	...

08001020 <main>:

/**
 * @brief  The application entry point.
 * @retval int
 */
int main(void) {
 8001020:	b5b0      	push	{r4, r5, r7, lr}
 8001022:	af00      	add	r7, sp, #0
	/* USER CODE END 1 */

	/* MCU Configuration--------------------------------------------------------*/

	/* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	HAL_Init();
 8001024:	f001 ff25 	bl	8002e72 <HAL_Init>

	/* USER CODE BEGIN Init */

	// Motor Initialization
	motor_init(&motorR, 'R');
 8001028:	2152      	movs	r1, #82	; 0x52
 800102a:	484b      	ldr	r0, [pc, #300]	; (8001158 <main+0x138>)
 800102c:	f000 fbc8 	bl	80017c0 <motor_init>
	motor_init(&motorL, 'L');
 8001030:	214c      	movs	r1, #76	; 0x4c
 8001032:	484a      	ldr	r0, [pc, #296]	; (800115c <main+0x13c>)
 8001034:	f000 fbc4 	bl	80017c0 <motor_init>

	motorEncoder_init(&encoderR);
 8001038:	4849      	ldr	r0, [pc, #292]	; (8001160 <main+0x140>)
 800103a:	f000 fbd7 	bl	80017ec <motorEncoder_init>
	motorEncoder_init(&encoderL);
 800103e:	4849      	ldr	r0, [pc, #292]	; (8001164 <main+0x144>)
 8001040:	f000 fbd4 	bl	80017ec <motorEncoder_init>

	motorController_init(&controllerR, &motorR, &encoderR);
 8001044:	4a46      	ldr	r2, [pc, #280]	; (8001160 <main+0x140>)
 8001046:	4944      	ldr	r1, [pc, #272]	; (8001158 <main+0x138>)
 8001048:	4847      	ldr	r0, [pc, #284]	; (8001168 <main+0x148>)
 800104a:	f000 fbea 	bl	8001822 <motorController_init>
	motorController_init(&controllerL, &motorL, &encoderL);
 800104e:	4a45      	ldr	r2, [pc, #276]	; (8001164 <main+0x144>)
 8001050:	4942      	ldr	r1, [pc, #264]	; (800115c <main+0x13c>)
 8001052:	4846      	ldr	r0, [pc, #280]	; (800116c <main+0x14c>)
 8001054:	f000 fbe5 	bl	8001822 <motorController_init>

	/* USER CODE END Init */

	/* Configure the system clock */
	SystemClock_Config();
 8001058:	f000 f89c 	bl	8001194 <SystemClock_Config>
	/* USER CODE BEGIN SysInit */

	/* USER CODE END SysInit */

	/* Initialize all configured peripherals */
	MX_GPIO_Init();
 800105c:	f000 fb0e 	bl	800167c <MX_GPIO_Init>
	MX_DMA_Init();
 8001060:	f000 faee 	bl	8001640 <MX_DMA_Init>
	MX_TIM1_Init();
 8001064:	f000 f95c 	bl	8001320 <MX_TIM1_Init>
	MX_TIM6_Init();
 8001068:	f000 fa4c 	bl	8001504 <MX_TIM6_Init>
	MX_USART2_UART_Init();
 800106c:	f000 fab8 	bl	80015e0 <MX_USART2_UART_Init>
	MX_ADC1_Init();
 8001070:	f000 f8e2 	bl	8001238 <MX_ADC1_Init>
	MX_TIM7_Init();
 8001074:	f000 fa7c 	bl	8001570 <MX_TIM7_Init>
	MX_TIM2_Init();
 8001078:	f000 f9ee 	bl	8001458 <MX_TIM2_Init>
	/* USER CODE BEGIN 2 */

	positionCalculationPeriod = ((htim6.Instance->ARR + 1) / (80000000.0 / (htim6.Instance->PSC + 1)));
 800107c:	4b3c      	ldr	r3, [pc, #240]	; (8001170 <main+0x150>)
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001082:	3301      	adds	r3, #1
 8001084:	4618      	mov	r0, r3
 8001086:	f7ff f9e5 	bl	8000454 <__aeabi_ui2d>
 800108a:	4604      	mov	r4, r0
 800108c:	460d      	mov	r5, r1
 800108e:	4b38      	ldr	r3, [pc, #224]	; (8001170 <main+0x150>)
 8001090:	681b      	ldr	r3, [r3, #0]
 8001092:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001094:	3301      	adds	r3, #1
 8001096:	4618      	mov	r0, r3
 8001098:	f7ff f9dc 	bl	8000454 <__aeabi_ui2d>
 800109c:	4602      	mov	r2, r0
 800109e:	460b      	mov	r3, r1
 80010a0:	a12b      	add	r1, pc, #172	; (adr r1, 8001150 <main+0x130>)
 80010a2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80010a6:	f7ff fb79 	bl	800079c <__aeabi_ddiv>
 80010aa:	4602      	mov	r2, r0
 80010ac:	460b      	mov	r3, r1
 80010ae:	4620      	mov	r0, r4
 80010b0:	4629      	mov	r1, r5
 80010b2:	f7ff fb73 	bl	800079c <__aeabi_ddiv>
 80010b6:	4602      	mov	r2, r0
 80010b8:	460b      	mov	r3, r1
 80010ba:	4610      	mov	r0, r2
 80010bc:	4619      	mov	r1, r3
 80010be:	f7ff fd05 	bl	8000acc <__aeabi_d2f>
 80010c2:	4603      	mov	r3, r0
 80010c4:	4a2b      	ldr	r2, [pc, #172]	; (8001174 <main+0x154>)
 80010c6:	6013      	str	r3, [r2, #0]
	controllerPeriod = ((htim2.Instance->ARR + 1) / (80000000.0 / (htim2.Instance->PSC + 1)));
 80010c8:	4b2b      	ldr	r3, [pc, #172]	; (8001178 <main+0x158>)
 80010ca:	681b      	ldr	r3, [r3, #0]
 80010cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80010ce:	3301      	adds	r3, #1
 80010d0:	4618      	mov	r0, r3
 80010d2:	f7ff f9bf 	bl	8000454 <__aeabi_ui2d>
 80010d6:	4604      	mov	r4, r0
 80010d8:	460d      	mov	r5, r1
 80010da:	4b27      	ldr	r3, [pc, #156]	; (8001178 <main+0x158>)
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80010e0:	3301      	adds	r3, #1
 80010e2:	4618      	mov	r0, r3
 80010e4:	f7ff f9b6 	bl	8000454 <__aeabi_ui2d>
 80010e8:	4602      	mov	r2, r0
 80010ea:	460b      	mov	r3, r1
 80010ec:	a118      	add	r1, pc, #96	; (adr r1, 8001150 <main+0x130>)
 80010ee:	e9d1 0100 	ldrd	r0, r1, [r1]
 80010f2:	f7ff fb53 	bl	800079c <__aeabi_ddiv>
 80010f6:	4602      	mov	r2, r0
 80010f8:	460b      	mov	r3, r1
 80010fa:	4620      	mov	r0, r4
 80010fc:	4629      	mov	r1, r5
 80010fe:	f7ff fb4d 	bl	800079c <__aeabi_ddiv>
 8001102:	4602      	mov	r2, r0
 8001104:	460b      	mov	r3, r1
 8001106:	4610      	mov	r0, r2
 8001108:	4619      	mov	r1, r3
 800110a:	f7ff fcdf 	bl	8000acc <__aeabi_d2f>
 800110e:	4603      	mov	r3, r0
 8001110:	4a1a      	ldr	r2, [pc, #104]	; (800117c <main+0x15c>)
 8001112:	6013      	str	r3, [r2, #0]

	HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 8001114:	217f      	movs	r1, #127	; 0x7f
 8001116:	481a      	ldr	r0, [pc, #104]	; (8001180 <main+0x160>)
 8001118:	f003 f824 	bl	8004164 <HAL_ADCEx_Calibration_Start>

	HAL_UART_Receive_DMA(&huart2, uart_in, UART_IN_BUF_SIZE);
 800111c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001120:	4918      	ldr	r1, [pc, #96]	; (8001184 <main+0x164>)
 8001122:	4819      	ldr	r0, [pc, #100]	; (8001188 <main+0x168>)
 8001124:	f006 f8ac 	bl	8007280 <HAL_UART_Receive_DMA>
	HAL_TIM_Base_Start_IT(&htim2);
 8001128:	4813      	ldr	r0, [pc, #76]	; (8001178 <main+0x158>)
 800112a:	f004 ff0b 	bl	8005f44 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim6);
 800112e:	4810      	ldr	r0, [pc, #64]	; (8001170 <main+0x150>)
 8001130:	f004 ff08 	bl	8005f44 <HAL_TIM_Base_Start_IT>
	HAL_TIM_Base_Start_IT(&htim7);
 8001134:	4815      	ldr	r0, [pc, #84]	; (800118c <main+0x16c>)
 8001136:	f004 ff05 	bl	8005f44 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 800113a:	2100      	movs	r1, #0
 800113c:	4814      	ldr	r0, [pc, #80]	; (8001190 <main+0x170>)
 800113e:	f005 f803 	bl	8006148 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 8001142:	2104      	movs	r1, #4
 8001144:	4812      	ldr	r0, [pc, #72]	; (8001190 <main+0x170>)
 8001146:	f004 ffff 	bl	8006148 <HAL_TIM_PWM_Start>
	/* USER CODE END 2 */

	/* Infinite loop */
	/* USER CODE BEGIN WHILE */

	while (1) {
 800114a:	e7fe      	b.n	800114a <main+0x12a>
 800114c:	f3af 8000 	nop.w
 8001150:	00000000 	.word	0x00000000
 8001154:	419312d0 	.word	0x419312d0
 8001158:	2000025c 	.word	0x2000025c
 800115c:	20000264 	.word	0x20000264
 8001160:	200004d0 	.word	0x200004d0
 8001164:	20000470 	.word	0x20000470
 8001168:	2000033c 	.word	0x2000033c
 800116c:	20000270 	.word	0x20000270
 8001170:	200002f0 	.word	0x200002f0
 8001174:	2000026c 	.word	0x2000026c
 8001178:	200003a0 	.word	0x200003a0
 800117c:	200002ec 	.word	0x200002ec
 8001180:	20000288 	.word	0x20000288
 8001184:	20000040 	.word	0x20000040
 8001188:	200003ec 	.word	0x200003ec
 800118c:	20000484 	.word	0x20000484
 8001190:	20000354 	.word	0x20000354

08001194 <SystemClock_Config>:

/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void) {
 8001194:	b580      	push	{r7, lr}
 8001196:	b096      	sub	sp, #88	; 0x58
 8001198:	af00      	add	r7, sp, #0
	RCC_OscInitTypeDef RCC_OscInitStruct = { 0 };
 800119a:	f107 0314 	add.w	r3, r7, #20
 800119e:	2244      	movs	r2, #68	; 0x44
 80011a0:	2100      	movs	r1, #0
 80011a2:	4618      	mov	r0, r3
 80011a4:	f006 fdda 	bl	8007d5c <memset>
	RCC_ClkInitTypeDef RCC_ClkInitStruct = { 0 };
 80011a8:	463b      	mov	r3, r7
 80011aa:	2200      	movs	r2, #0
 80011ac:	601a      	str	r2, [r3, #0]
 80011ae:	605a      	str	r2, [r3, #4]
 80011b0:	609a      	str	r2, [r3, #8]
 80011b2:	60da      	str	r2, [r3, #12]
 80011b4:	611a      	str	r2, [r3, #16]

	/** Configure the main internal regulator output voltage
	 */
	if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK) {
 80011b6:	f44f 7000 	mov.w	r0, #512	; 0x200
 80011ba:	f003 fd09 	bl	8004bd0 <HAL_PWREx_ControlVoltageScaling>
 80011be:	4603      	mov	r3, r0
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d001      	beq.n	80011c8 <SystemClock_Config+0x34>
		Error_Handler();
 80011c4:	f001 fa9a 	bl	80026fc <Error_Handler>
	}
	/** Initializes the RCC Oscillators according to the specified parameters
	 * in the RCC_OscInitTypeDef structure.
	 */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80011c8:	2310      	movs	r3, #16
 80011ca:	617b      	str	r3, [r7, #20]
	RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80011cc:	2301      	movs	r3, #1
 80011ce:	62fb      	str	r3, [r7, #44]	; 0x2c
	RCC_OscInitStruct.MSICalibrationValue = 0;
 80011d0:	2300      	movs	r3, #0
 80011d2:	633b      	str	r3, [r7, #48]	; 0x30
	RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80011d4:	2360      	movs	r3, #96	; 0x60
 80011d6:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011d8:	2302      	movs	r3, #2
 80011da:	63fb      	str	r3, [r7, #60]	; 0x3c
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 80011dc:	2301      	movs	r3, #1
 80011de:	643b      	str	r3, [r7, #64]	; 0x40
	RCC_OscInitStruct.PLL.PLLM = 1;
 80011e0:	2301      	movs	r3, #1
 80011e2:	647b      	str	r3, [r7, #68]	; 0x44
	RCC_OscInitStruct.PLL.PLLN = 40;
 80011e4:	2328      	movs	r3, #40	; 0x28
 80011e6:	64bb      	str	r3, [r7, #72]	; 0x48
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80011e8:	2307      	movs	r3, #7
 80011ea:	64fb      	str	r3, [r7, #76]	; 0x4c
	RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80011ec:	2302      	movs	r3, #2
 80011ee:	653b      	str	r3, [r7, #80]	; 0x50
	RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80011f0:	2302      	movs	r3, #2
 80011f2:	657b      	str	r3, [r7, #84]	; 0x54
	if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 80011f4:	f107 0314 	add.w	r3, r7, #20
 80011f8:	4618      	mov	r0, r3
 80011fa:	f003 fd3f 	bl	8004c7c <HAL_RCC_OscConfig>
 80011fe:	4603      	mov	r3, r0
 8001200:	2b00      	cmp	r3, #0
 8001202:	d001      	beq.n	8001208 <SystemClock_Config+0x74>
		Error_Handler();
 8001204:	f001 fa7a 	bl	80026fc <Error_Handler>
	}
	/** Initializes the CPU, AHB and APB buses clocks
	 */
	RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8001208:	230f      	movs	r3, #15
 800120a:	603b      	str	r3, [r7, #0]
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800120c:	2303      	movs	r3, #3
 800120e:	607b      	str	r3, [r7, #4]
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001210:	2300      	movs	r3, #0
 8001212:	60bb      	str	r3, [r7, #8]
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001214:	2300      	movs	r3, #0
 8001216:	60fb      	str	r3, [r7, #12]
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001218:	2300      	movs	r3, #0
 800121a:	613b      	str	r3, [r7, #16]

	if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK) {
 800121c:	463b      	mov	r3, r7
 800121e:	2104      	movs	r1, #4
 8001220:	4618      	mov	r0, r3
 8001222:	f004 f94b 	bl	80054bc <HAL_RCC_ClockConfig>
 8001226:	4603      	mov	r3, r0
 8001228:	2b00      	cmp	r3, #0
 800122a:	d001      	beq.n	8001230 <SystemClock_Config+0x9c>
		Error_Handler();
 800122c:	f001 fa66 	bl	80026fc <Error_Handler>
	}
}
 8001230:	bf00      	nop
 8001232:	3758      	adds	r7, #88	; 0x58
 8001234:	46bd      	mov	sp, r7
 8001236:	bd80      	pop	{r7, pc}

08001238 <MX_ADC1_Init>:
/**
 * @brief ADC1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC1_Init(void) {
 8001238:	b580      	push	{r7, lr}
 800123a:	b088      	sub	sp, #32
 800123c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN ADC1_Init 0 */

	/* USER CODE END ADC1_Init 0 */

	ADC_ChannelConfTypeDef sConfig = { 0 };
 800123e:	f107 0308 	add.w	r3, r7, #8
 8001242:	2200      	movs	r2, #0
 8001244:	601a      	str	r2, [r3, #0]
 8001246:	605a      	str	r2, [r3, #4]
 8001248:	609a      	str	r2, [r3, #8]
 800124a:	60da      	str	r2, [r3, #12]
 800124c:	611a      	str	r2, [r3, #16]
 800124e:	615a      	str	r2, [r3, #20]
	/* USER CODE BEGIN ADC1_Init 1 */

	/* USER CODE END ADC1_Init 1 */
	/** Common config
	 */
	hadc1.Instance = ADC1;
 8001250:	4b2f      	ldr	r3, [pc, #188]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001252:	4a30      	ldr	r2, [pc, #192]	; (8001314 <MX_ADC1_Init+0xdc>)
 8001254:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8001256:	4b2e      	ldr	r3, [pc, #184]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001258:	2200      	movs	r2, #0
 800125a:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800125c:	4b2c      	ldr	r3, [pc, #176]	; (8001310 <MX_ADC1_Init+0xd8>)
 800125e:	2200      	movs	r2, #0
 8001260:	609a      	str	r2, [r3, #8]
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001262:	4b2b      	ldr	r3, [pc, #172]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001264:	2200      	movs	r2, #0
 8001266:	60da      	str	r2, [r3, #12]
	hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8001268:	4b29      	ldr	r3, [pc, #164]	; (8001310 <MX_ADC1_Init+0xd8>)
 800126a:	2200      	movs	r2, #0
 800126c:	611a      	str	r2, [r3, #16]
	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800126e:	4b28      	ldr	r3, [pc, #160]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001270:	2204      	movs	r2, #4
 8001272:	615a      	str	r2, [r3, #20]
	hadc1.Init.LowPowerAutoWait = DISABLE;
 8001274:	4b26      	ldr	r3, [pc, #152]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001276:	2200      	movs	r2, #0
 8001278:	761a      	strb	r2, [r3, #24]
	hadc1.Init.ContinuousConvMode = DISABLE;
 800127a:	4b25      	ldr	r3, [pc, #148]	; (8001310 <MX_ADC1_Init+0xd8>)
 800127c:	2200      	movs	r2, #0
 800127e:	765a      	strb	r2, [r3, #25]
	hadc1.Init.NbrOfConversion = 1;
 8001280:	4b23      	ldr	r3, [pc, #140]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001282:	2201      	movs	r2, #1
 8001284:	61da      	str	r2, [r3, #28]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001286:	4b22      	ldr	r3, [pc, #136]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001288:	2200      	movs	r2, #0
 800128a:	f883 2020 	strb.w	r2, [r3, #32]
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800128e:	4b20      	ldr	r3, [pc, #128]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001290:	2200      	movs	r2, #0
 8001292:	629a      	str	r2, [r3, #40]	; 0x28
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001294:	4b1e      	ldr	r3, [pc, #120]	; (8001310 <MX_ADC1_Init+0xd8>)
 8001296:	2200      	movs	r2, #0
 8001298:	62da      	str	r2, [r3, #44]	; 0x2c
	hadc1.Init.DMAContinuousRequests = DISABLE;
 800129a:	4b1d      	ldr	r3, [pc, #116]	; (8001310 <MX_ADC1_Init+0xd8>)
 800129c:	2200      	movs	r2, #0
 800129e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 80012a2:	4b1b      	ldr	r3, [pc, #108]	; (8001310 <MX_ADC1_Init+0xd8>)
 80012a4:	2200      	movs	r2, #0
 80012a6:	635a      	str	r2, [r3, #52]	; 0x34
	hadc1.Init.OversamplingMode = DISABLE;
 80012a8:	4b19      	ldr	r3, [pc, #100]	; (8001310 <MX_ADC1_Init+0xd8>)
 80012aa:	2200      	movs	r2, #0
 80012ac:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
	if (HAL_ADC_Init(&hadc1) != HAL_OK) {
 80012b0:	4817      	ldr	r0, [pc, #92]	; (8001310 <MX_ADC1_Init+0xd8>)
 80012b2:	f002 f841 	bl	8003338 <HAL_ADC_Init>
 80012b6:	4603      	mov	r3, r0
 80012b8:	2b00      	cmp	r3, #0
 80012ba:	d001      	beq.n	80012c0 <MX_ADC1_Init+0x88>
		Error_Handler();
 80012bc:	f001 fa1e 	bl	80026fc <Error_Handler>
	}
	/** Configure Regular Channel
	 */
	sConfig.Channel = ADC_CHANNEL_8;
 80012c0:	4b15      	ldr	r3, [pc, #84]	; (8001318 <MX_ADC1_Init+0xe0>)
 80012c2:	60bb      	str	r3, [r7, #8]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 80012c4:	2306      	movs	r3, #6
 80012c6:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 80012c8:	2300      	movs	r3, #0
 80012ca:	613b      	str	r3, [r7, #16]
	sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80012cc:	237f      	movs	r3, #127	; 0x7f
 80012ce:	617b      	str	r3, [r7, #20]
	sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80012d0:	2304      	movs	r3, #4
 80012d2:	61bb      	str	r3, [r7, #24]
	sConfig.Offset = 0;
 80012d4:	2300      	movs	r3, #0
 80012d6:	61fb      	str	r3, [r7, #28]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK) {
 80012d8:	f107 0308 	add.w	r3, r7, #8
 80012dc:	4619      	mov	r1, r3
 80012de:	480c      	ldr	r0, [pc, #48]	; (8001310 <MX_ADC1_Init+0xd8>)
 80012e0:	f002 fa72 	bl	80037c8 <HAL_ADC_ConfigChannel>
 80012e4:	4603      	mov	r3, r0
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d001      	beq.n	80012ee <MX_ADC1_Init+0xb6>
		Error_Handler();
 80012ea:	f001 fa07 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN ADC1_Init 2 */
	__HAL_RCC_ADC_CLK_ENABLE();
 80012ee:	4b0b      	ldr	r3, [pc, #44]	; (800131c <MX_ADC1_Init+0xe4>)
 80012f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80012f2:	4a0a      	ldr	r2, [pc, #40]	; (800131c <MX_ADC1_Init+0xe4>)
 80012f4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80012f8:	64d3      	str	r3, [r2, #76]	; 0x4c
 80012fa:	4b08      	ldr	r3, [pc, #32]	; (800131c <MX_ADC1_Init+0xe4>)
 80012fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80012fe:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001302:	607b      	str	r3, [r7, #4]
 8001304:	687b      	ldr	r3, [r7, #4]
	/* USER CODE END ADC1_Init 2 */

}
 8001306:	bf00      	nop
 8001308:	3720      	adds	r7, #32
 800130a:	46bd      	mov	sp, r7
 800130c:	bd80      	pop	{r7, pc}
 800130e:	bf00      	nop
 8001310:	20000288 	.word	0x20000288
 8001314:	50040000 	.word	0x50040000
 8001318:	21800100 	.word	0x21800100
 800131c:	40021000 	.word	0x40021000

08001320 <MX_TIM1_Init>:
/**
 * @brief TIM1 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM1_Init(void) {
 8001320:	b580      	push	{r7, lr}
 8001322:	b096      	sub	sp, #88	; 0x58
 8001324:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM1_Init 0 */

	/* USER CODE END TIM1_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001326:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800132a:	2200      	movs	r2, #0
 800132c:	601a      	str	r2, [r3, #0]
 800132e:	605a      	str	r2, [r3, #4]
 8001330:	609a      	str	r2, [r3, #8]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 8001332:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001336:	2200      	movs	r2, #0
 8001338:	601a      	str	r2, [r3, #0]
 800133a:	605a      	str	r2, [r3, #4]
 800133c:	609a      	str	r2, [r3, #8]
 800133e:	60da      	str	r2, [r3, #12]
 8001340:	611a      	str	r2, [r3, #16]
 8001342:	615a      	str	r2, [r3, #20]
 8001344:	619a      	str	r2, [r3, #24]
	TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = { 0 };
 8001346:	1d3b      	adds	r3, r7, #4
 8001348:	222c      	movs	r2, #44	; 0x2c
 800134a:	2100      	movs	r1, #0
 800134c:	4618      	mov	r0, r3
 800134e:	f006 fd05 	bl	8007d5c <memset>

	/* USER CODE BEGIN TIM1_Init 1 */

	/* USER CODE END TIM1_Init 1 */
	htim1.Instance = TIM1;
 8001352:	4b3f      	ldr	r3, [pc, #252]	; (8001450 <MX_TIM1_Init+0x130>)
 8001354:	4a3f      	ldr	r2, [pc, #252]	; (8001454 <MX_TIM1_Init+0x134>)
 8001356:	601a      	str	r2, [r3, #0]
	htim1.Init.Prescaler = 0;
 8001358:	4b3d      	ldr	r3, [pc, #244]	; (8001450 <MX_TIM1_Init+0x130>)
 800135a:	2200      	movs	r2, #0
 800135c:	605a      	str	r2, [r3, #4]
	htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800135e:	4b3c      	ldr	r3, [pc, #240]	; (8001450 <MX_TIM1_Init+0x130>)
 8001360:	2200      	movs	r2, #0
 8001362:	609a      	str	r2, [r3, #8]
	htim1.Init.Period = 65535;
 8001364:	4b3a      	ldr	r3, [pc, #232]	; (8001450 <MX_TIM1_Init+0x130>)
 8001366:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800136a:	60da      	str	r2, [r3, #12]
	htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800136c:	4b38      	ldr	r3, [pc, #224]	; (8001450 <MX_TIM1_Init+0x130>)
 800136e:	2200      	movs	r2, #0
 8001370:	611a      	str	r2, [r3, #16]
	htim1.Init.RepetitionCounter = 0;
 8001372:	4b37      	ldr	r3, [pc, #220]	; (8001450 <MX_TIM1_Init+0x130>)
 8001374:	2200      	movs	r2, #0
 8001376:	615a      	str	r2, [r3, #20]
	htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001378:	4b35      	ldr	r3, [pc, #212]	; (8001450 <MX_TIM1_Init+0x130>)
 800137a:	2280      	movs	r2, #128	; 0x80
 800137c:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_PWM_Init(&htim1) != HAL_OK) {
 800137e:	4834      	ldr	r0, [pc, #208]	; (8001450 <MX_TIM1_Init+0x130>)
 8001380:	f004 fe8b 	bl	800609a <HAL_TIM_PWM_Init>
 8001384:	4603      	mov	r3, r0
 8001386:	2b00      	cmp	r3, #0
 8001388:	d001      	beq.n	800138e <MX_TIM1_Init+0x6e>
		Error_Handler();
 800138a:	f001 f9b7 	bl	80026fc <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800138e:	2300      	movs	r3, #0
 8001390:	64fb      	str	r3, [r7, #76]	; 0x4c
	sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001392:	2300      	movs	r3, #0
 8001394:	653b      	str	r3, [r7, #80]	; 0x50
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001396:	2300      	movs	r3, #0
 8001398:	657b      	str	r3, [r7, #84]	; 0x54
	if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK) {
 800139a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800139e:	4619      	mov	r1, r3
 80013a0:	482b      	ldr	r0, [pc, #172]	; (8001450 <MX_TIM1_Init+0x130>)
 80013a2:	f005 fd8f 	bl	8006ec4 <HAL_TIMEx_MasterConfigSynchronization>
 80013a6:	4603      	mov	r3, r0
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d001      	beq.n	80013b0 <MX_TIM1_Init+0x90>
		Error_Handler();
 80013ac:	f001 f9a6 	bl	80026fc <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80013b0:	2360      	movs	r3, #96	; 0x60
 80013b2:	633b      	str	r3, [r7, #48]	; 0x30
	sConfigOC.Pulse = 0;
 80013b4:	2300      	movs	r3, #0
 80013b6:	637b      	str	r3, [r7, #52]	; 0x34
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80013b8:	2300      	movs	r3, #0
 80013ba:	63bb      	str	r3, [r7, #56]	; 0x38
	sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80013bc:	2300      	movs	r3, #0
 80013be:	63fb      	str	r3, [r7, #60]	; 0x3c
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80013c0:	2300      	movs	r3, #0
 80013c2:	643b      	str	r3, [r7, #64]	; 0x40
	sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80013c4:	2300      	movs	r3, #0
 80013c6:	647b      	str	r3, [r7, #68]	; 0x44
	sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80013c8:	2300      	movs	r3, #0
 80013ca:	64bb      	str	r3, [r7, #72]	; 0x48
	if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK) {
 80013cc:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80013d0:	2200      	movs	r2, #0
 80013d2:	4619      	mov	r1, r3
 80013d4:	481e      	ldr	r0, [pc, #120]	; (8001450 <MX_TIM1_Init+0x130>)
 80013d6:	f005 f92b 	bl	8006630 <HAL_TIM_PWM_ConfigChannel>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d001      	beq.n	80013e4 <MX_TIM1_Init+0xc4>
		Error_Handler();
 80013e0:	f001 f98c 	bl	80026fc <Error_Handler>
	}
	if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK) {
 80013e4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80013e8:	2204      	movs	r2, #4
 80013ea:	4619      	mov	r1, r3
 80013ec:	4818      	ldr	r0, [pc, #96]	; (8001450 <MX_TIM1_Init+0x130>)
 80013ee:	f005 f91f 	bl	8006630 <HAL_TIM_PWM_ConfigChannel>
 80013f2:	4603      	mov	r3, r0
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	d001      	beq.n	80013fc <MX_TIM1_Init+0xdc>
		Error_Handler();
 80013f8:	f001 f980 	bl	80026fc <Error_Handler>
	}
	sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80013fc:	2300      	movs	r3, #0
 80013fe:	607b      	str	r3, [r7, #4]
	sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001400:	2300      	movs	r3, #0
 8001402:	60bb      	str	r3, [r7, #8]
	sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001404:	2300      	movs	r3, #0
 8001406:	60fb      	str	r3, [r7, #12]
	sBreakDeadTimeConfig.DeadTime = 0;
 8001408:	2300      	movs	r3, #0
 800140a:	613b      	str	r3, [r7, #16]
	sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800140c:	2300      	movs	r3, #0
 800140e:	617b      	str	r3, [r7, #20]
	sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001410:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001414:	61bb      	str	r3, [r7, #24]
	sBreakDeadTimeConfig.BreakFilter = 0;
 8001416:	2300      	movs	r3, #0
 8001418:	61fb      	str	r3, [r7, #28]
	sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 800141a:	2300      	movs	r3, #0
 800141c:	623b      	str	r3, [r7, #32]
	sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 800141e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001422:	627b      	str	r3, [r7, #36]	; 0x24
	sBreakDeadTimeConfig.Break2Filter = 0;
 8001424:	2300      	movs	r3, #0
 8001426:	62bb      	str	r3, [r7, #40]	; 0x28
	sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001428:	2300      	movs	r3, #0
 800142a:	62fb      	str	r3, [r7, #44]	; 0x2c
	if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK) {
 800142c:	1d3b      	adds	r3, r7, #4
 800142e:	4619      	mov	r1, r3
 8001430:	4807      	ldr	r0, [pc, #28]	; (8001450 <MX_TIM1_Init+0x130>)
 8001432:	f005 fdad 	bl	8006f90 <HAL_TIMEx_ConfigBreakDeadTime>
 8001436:	4603      	mov	r3, r0
 8001438:	2b00      	cmp	r3, #0
 800143a:	d001      	beq.n	8001440 <MX_TIM1_Init+0x120>
		Error_Handler();
 800143c:	f001 f95e 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN TIM1_Init 2 */

	/* USER CODE END TIM1_Init 2 */
	HAL_TIM_MspPostInit(&htim1);
 8001440:	4803      	ldr	r0, [pc, #12]	; (8001450 <MX_TIM1_Init+0x130>)
 8001442:	f001 fb57 	bl	8002af4 <HAL_TIM_MspPostInit>

}
 8001446:	bf00      	nop
 8001448:	3758      	adds	r7, #88	; 0x58
 800144a:	46bd      	mov	sp, r7
 800144c:	bd80      	pop	{r7, pc}
 800144e:	bf00      	nop
 8001450:	20000354 	.word	0x20000354
 8001454:	40012c00 	.word	0x40012c00

08001458 <MX_TIM2_Init>:
/**
 * @brief TIM2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM2_Init(void) {
 8001458:	b580      	push	{r7, lr}
 800145a:	b08a      	sub	sp, #40	; 0x28
 800145c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM2_Init 0 */

	/* USER CODE END TIM2_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800145e:	f107 031c 	add.w	r3, r7, #28
 8001462:	2200      	movs	r2, #0
 8001464:	601a      	str	r2, [r3, #0]
 8001466:	605a      	str	r2, [r3, #4]
 8001468:	609a      	str	r2, [r3, #8]
	TIM_OC_InitTypeDef sConfigOC = { 0 };
 800146a:	463b      	mov	r3, r7
 800146c:	2200      	movs	r2, #0
 800146e:	601a      	str	r2, [r3, #0]
 8001470:	605a      	str	r2, [r3, #4]
 8001472:	609a      	str	r2, [r3, #8]
 8001474:	60da      	str	r2, [r3, #12]
 8001476:	611a      	str	r2, [r3, #16]
 8001478:	615a      	str	r2, [r3, #20]
 800147a:	619a      	str	r2, [r3, #24]

	/* USER CODE BEGIN TIM2_Init 1 */

	/* USER CODE END TIM2_Init 1 */
	htim2.Instance = TIM2;
 800147c:	4b20      	ldr	r3, [pc, #128]	; (8001500 <MX_TIM2_Init+0xa8>)
 800147e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001482:	601a      	str	r2, [r3, #0]
	htim2.Init.Prescaler = 80 - 1;
 8001484:	4b1e      	ldr	r3, [pc, #120]	; (8001500 <MX_TIM2_Init+0xa8>)
 8001486:	224f      	movs	r2, #79	; 0x4f
 8001488:	605a      	str	r2, [r3, #4]
	htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800148a:	4b1d      	ldr	r3, [pc, #116]	; (8001500 <MX_TIM2_Init+0xa8>)
 800148c:	2200      	movs	r2, #0
 800148e:	609a      	str	r2, [r3, #8]
	htim2.Init.Period = 10000 - 1;
 8001490:	4b1b      	ldr	r3, [pc, #108]	; (8001500 <MX_TIM2_Init+0xa8>)
 8001492:	f242 720f 	movw	r2, #9999	; 0x270f
 8001496:	60da      	str	r2, [r3, #12]
	htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001498:	4b19      	ldr	r3, [pc, #100]	; (8001500 <MX_TIM2_Init+0xa8>)
 800149a:	2200      	movs	r2, #0
 800149c:	611a      	str	r2, [r3, #16]
	htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800149e:	4b18      	ldr	r3, [pc, #96]	; (8001500 <MX_TIM2_Init+0xa8>)
 80014a0:	2280      	movs	r2, #128	; 0x80
 80014a2:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_OC_Init(&htim2) != HAL_OK) {
 80014a4:	4816      	ldr	r0, [pc, #88]	; (8001500 <MX_TIM2_Init+0xa8>)
 80014a6:	f004 fda1 	bl	8005fec <HAL_TIM_OC_Init>
 80014aa:	4603      	mov	r3, r0
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d001      	beq.n	80014b4 <MX_TIM2_Init+0x5c>
		Error_Handler();
 80014b0:	f001 f924 	bl	80026fc <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014b4:	2300      	movs	r3, #0
 80014b6:	61fb      	str	r3, [r7, #28]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014b8:	2300      	movs	r3, #0
 80014ba:	627b      	str	r3, [r7, #36]	; 0x24
	if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK) {
 80014bc:	f107 031c 	add.w	r3, r7, #28
 80014c0:	4619      	mov	r1, r3
 80014c2:	480f      	ldr	r0, [pc, #60]	; (8001500 <MX_TIM2_Init+0xa8>)
 80014c4:	f005 fcfe 	bl	8006ec4 <HAL_TIMEx_MasterConfigSynchronization>
 80014c8:	4603      	mov	r3, r0
 80014ca:	2b00      	cmp	r3, #0
 80014cc:	d001      	beq.n	80014d2 <MX_TIM2_Init+0x7a>
		Error_Handler();
 80014ce:	f001 f915 	bl	80026fc <Error_Handler>
	}
	sConfigOC.OCMode = TIM_OCMODE_TIMING;
 80014d2:	2300      	movs	r3, #0
 80014d4:	603b      	str	r3, [r7, #0]
	sConfigOC.Pulse = 0;
 80014d6:	2300      	movs	r3, #0
 80014d8:	607b      	str	r3, [r7, #4]
	sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014da:	2300      	movs	r3, #0
 80014dc:	60bb      	str	r3, [r7, #8]
	sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80014de:	2300      	movs	r3, #0
 80014e0:	613b      	str	r3, [r7, #16]
	if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK) {
 80014e2:	463b      	mov	r3, r7
 80014e4:	2204      	movs	r2, #4
 80014e6:	4619      	mov	r1, r3
 80014e8:	4805      	ldr	r0, [pc, #20]	; (8001500 <MX_TIM2_Init+0xa8>)
 80014ea:	f005 f82b 	bl	8006544 <HAL_TIM_OC_ConfigChannel>
 80014ee:	4603      	mov	r3, r0
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	d001      	beq.n	80014f8 <MX_TIM2_Init+0xa0>
		Error_Handler();
 80014f4:	f001 f902 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN TIM2_Init 2 */

	/* USER CODE END TIM2_Init 2 */

}
 80014f8:	bf00      	nop
 80014fa:	3728      	adds	r7, #40	; 0x28
 80014fc:	46bd      	mov	sp, r7
 80014fe:	bd80      	pop	{r7, pc}
 8001500:	200003a0 	.word	0x200003a0

08001504 <MX_TIM6_Init>:
/**
 * @brief TIM6 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM6_Init(void) {
 8001504:	b580      	push	{r7, lr}
 8001506:	b084      	sub	sp, #16
 8001508:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM6_Init 0 */

	/* USER CODE END TIM6_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 800150a:	1d3b      	adds	r3, r7, #4
 800150c:	2200      	movs	r2, #0
 800150e:	601a      	str	r2, [r3, #0]
 8001510:	605a      	str	r2, [r3, #4]
 8001512:	609a      	str	r2, [r3, #8]

	/* USER CODE BEGIN TIM6_Init 1 */

	/* USER CODE END TIM6_Init 1 */
	htim6.Instance = TIM6;
 8001514:	4b14      	ldr	r3, [pc, #80]	; (8001568 <MX_TIM6_Init+0x64>)
 8001516:	4a15      	ldr	r2, [pc, #84]	; (800156c <MX_TIM6_Init+0x68>)
 8001518:	601a      	str	r2, [r3, #0]
	htim6.Init.Prescaler = 160 - 1;
 800151a:	4b13      	ldr	r3, [pc, #76]	; (8001568 <MX_TIM6_Init+0x64>)
 800151c:	229f      	movs	r2, #159	; 0x9f
 800151e:	605a      	str	r2, [r3, #4]
	htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001520:	4b11      	ldr	r3, [pc, #68]	; (8001568 <MX_TIM6_Init+0x64>)
 8001522:	2200      	movs	r2, #0
 8001524:	609a      	str	r2, [r3, #8]
	htim6.Init.Period = 50000 - 1;
 8001526:	4b10      	ldr	r3, [pc, #64]	; (8001568 <MX_TIM6_Init+0x64>)
 8001528:	f24c 324f 	movw	r2, #49999	; 0xc34f
 800152c:	60da      	str	r2, [r3, #12]
	htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800152e:	4b0e      	ldr	r3, [pc, #56]	; (8001568 <MX_TIM6_Init+0x64>)
 8001530:	2280      	movs	r2, #128	; 0x80
 8001532:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim6) != HAL_OK) {
 8001534:	480c      	ldr	r0, [pc, #48]	; (8001568 <MX_TIM6_Init+0x64>)
 8001536:	f004 fcad 	bl	8005e94 <HAL_TIM_Base_Init>
 800153a:	4603      	mov	r3, r0
 800153c:	2b00      	cmp	r3, #0
 800153e:	d001      	beq.n	8001544 <MX_TIM6_Init+0x40>
		Error_Handler();
 8001540:	f001 f8dc 	bl	80026fc <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001544:	2300      	movs	r3, #0
 8001546:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001548:	2300      	movs	r3, #0
 800154a:	60fb      	str	r3, [r7, #12]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK) {
 800154c:	1d3b      	adds	r3, r7, #4
 800154e:	4619      	mov	r1, r3
 8001550:	4805      	ldr	r0, [pc, #20]	; (8001568 <MX_TIM6_Init+0x64>)
 8001552:	f005 fcb7 	bl	8006ec4 <HAL_TIMEx_MasterConfigSynchronization>
 8001556:	4603      	mov	r3, r0
 8001558:	2b00      	cmp	r3, #0
 800155a:	d001      	beq.n	8001560 <MX_TIM6_Init+0x5c>
		Error_Handler();
 800155c:	f001 f8ce 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN TIM6_Init 2 */

	/* USER CODE END TIM6_Init 2 */

}
 8001560:	bf00      	nop
 8001562:	3710      	adds	r7, #16
 8001564:	46bd      	mov	sp, r7
 8001566:	bd80      	pop	{r7, pc}
 8001568:	200002f0 	.word	0x200002f0
 800156c:	40001000 	.word	0x40001000

08001570 <MX_TIM7_Init>:
/**
 * @brief TIM7 Initialization Function
 * @param None
 * @retval None
 */
static void MX_TIM7_Init(void) {
 8001570:	b580      	push	{r7, lr}
 8001572:	b084      	sub	sp, #16
 8001574:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM7_Init 0 */

	/* USER CODE END TIM7_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = { 0 };
 8001576:	1d3b      	adds	r3, r7, #4
 8001578:	2200      	movs	r2, #0
 800157a:	601a      	str	r2, [r3, #0]
 800157c:	605a      	str	r2, [r3, #4]
 800157e:	609a      	str	r2, [r3, #8]

	/* USER CODE BEGIN TIM7_Init 1 */

	/* USER CODE END TIM7_Init 1 */
	htim7.Instance = TIM7;
 8001580:	4b15      	ldr	r3, [pc, #84]	; (80015d8 <MX_TIM7_Init+0x68>)
 8001582:	4a16      	ldr	r2, [pc, #88]	; (80015dc <MX_TIM7_Init+0x6c>)
 8001584:	601a      	str	r2, [r3, #0]
	htim7.Init.Prescaler = 65535;
 8001586:	4b14      	ldr	r3, [pc, #80]	; (80015d8 <MX_TIM7_Init+0x68>)
 8001588:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800158c:	605a      	str	r2, [r3, #4]
	htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800158e:	4b12      	ldr	r3, [pc, #72]	; (80015d8 <MX_TIM7_Init+0x68>)
 8001590:	2200      	movs	r2, #0
 8001592:	609a      	str	r2, [r3, #8]
	htim7.Init.Period = 12207 - 1;
 8001594:	4b10      	ldr	r3, [pc, #64]	; (80015d8 <MX_TIM7_Init+0x68>)
 8001596:	f642 72ae 	movw	r2, #12206	; 0x2fae
 800159a:	60da      	str	r2, [r3, #12]
	htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800159c:	4b0e      	ldr	r3, [pc, #56]	; (80015d8 <MX_TIM7_Init+0x68>)
 800159e:	2280      	movs	r2, #128	; 0x80
 80015a0:	619a      	str	r2, [r3, #24]
	if (HAL_TIM_Base_Init(&htim7) != HAL_OK) {
 80015a2:	480d      	ldr	r0, [pc, #52]	; (80015d8 <MX_TIM7_Init+0x68>)
 80015a4:	f004 fc76 	bl	8005e94 <HAL_TIM_Base_Init>
 80015a8:	4603      	mov	r3, r0
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d001      	beq.n	80015b2 <MX_TIM7_Init+0x42>
		Error_Handler();
 80015ae:	f001 f8a5 	bl	80026fc <Error_Handler>
	}
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015b2:	2300      	movs	r3, #0
 80015b4:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015b6:	2300      	movs	r3, #0
 80015b8:	60fb      	str	r3, [r7, #12]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK) {
 80015ba:	1d3b      	adds	r3, r7, #4
 80015bc:	4619      	mov	r1, r3
 80015be:	4806      	ldr	r0, [pc, #24]	; (80015d8 <MX_TIM7_Init+0x68>)
 80015c0:	f005 fc80 	bl	8006ec4 <HAL_TIMEx_MasterConfigSynchronization>
 80015c4:	4603      	mov	r3, r0
 80015c6:	2b00      	cmp	r3, #0
 80015c8:	d001      	beq.n	80015ce <MX_TIM7_Init+0x5e>
		Error_Handler();
 80015ca:	f001 f897 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN TIM7_Init 2 */

	/* USER CODE END TIM7_Init 2 */

}
 80015ce:	bf00      	nop
 80015d0:	3710      	adds	r7, #16
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bd80      	pop	{r7, pc}
 80015d6:	bf00      	nop
 80015d8:	20000484 	.word	0x20000484
 80015dc:	40001400 	.word	0x40001400

080015e0 <MX_USART2_UART_Init>:
/**
 * @brief USART2 Initialization Function
 * @param None
 * @retval None
 */
static void MX_USART2_UART_Init(void) {
 80015e0:	b580      	push	{r7, lr}
 80015e2:	af00      	add	r7, sp, #0
	/* USER CODE END USART2_Init 0 */

	/* USER CODE BEGIN USART2_Init 1 */

	/* USER CODE END USART2_Init 1 */
	huart2.Instance = USART2;
 80015e4:	4b14      	ldr	r3, [pc, #80]	; (8001638 <MX_USART2_UART_Init+0x58>)
 80015e6:	4a15      	ldr	r2, [pc, #84]	; (800163c <MX_USART2_UART_Init+0x5c>)
 80015e8:	601a      	str	r2, [r3, #0]
	huart2.Init.BaudRate = 115200;
 80015ea:	4b13      	ldr	r3, [pc, #76]	; (8001638 <MX_USART2_UART_Init+0x58>)
 80015ec:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80015f0:	605a      	str	r2, [r3, #4]
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80015f2:	4b11      	ldr	r3, [pc, #68]	; (8001638 <MX_USART2_UART_Init+0x58>)
 80015f4:	2200      	movs	r2, #0
 80015f6:	609a      	str	r2, [r3, #8]
	huart2.Init.StopBits = UART_STOPBITS_1;
 80015f8:	4b0f      	ldr	r3, [pc, #60]	; (8001638 <MX_USART2_UART_Init+0x58>)
 80015fa:	2200      	movs	r2, #0
 80015fc:	60da      	str	r2, [r3, #12]
	huart2.Init.Parity = UART_PARITY_NONE;
 80015fe:	4b0e      	ldr	r3, [pc, #56]	; (8001638 <MX_USART2_UART_Init+0x58>)
 8001600:	2200      	movs	r2, #0
 8001602:	611a      	str	r2, [r3, #16]
	huart2.Init.Mode = UART_MODE_TX_RX;
 8001604:	4b0c      	ldr	r3, [pc, #48]	; (8001638 <MX_USART2_UART_Init+0x58>)
 8001606:	220c      	movs	r2, #12
 8001608:	615a      	str	r2, [r3, #20]
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800160a:	4b0b      	ldr	r3, [pc, #44]	; (8001638 <MX_USART2_UART_Init+0x58>)
 800160c:	2200      	movs	r2, #0
 800160e:	619a      	str	r2, [r3, #24]
	huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001610:	4b09      	ldr	r3, [pc, #36]	; (8001638 <MX_USART2_UART_Init+0x58>)
 8001612:	2200      	movs	r2, #0
 8001614:	61da      	str	r2, [r3, #28]
	huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001616:	4b08      	ldr	r3, [pc, #32]	; (8001638 <MX_USART2_UART_Init+0x58>)
 8001618:	2200      	movs	r2, #0
 800161a:	621a      	str	r2, [r3, #32]
	huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800161c:	4b06      	ldr	r3, [pc, #24]	; (8001638 <MX_USART2_UART_Init+0x58>)
 800161e:	2200      	movs	r2, #0
 8001620:	625a      	str	r2, [r3, #36]	; 0x24
	if (HAL_UART_Init(&huart2) != HAL_OK) {
 8001622:	4805      	ldr	r0, [pc, #20]	; (8001638 <MX_USART2_UART_Init+0x58>)
 8001624:	f005 fd4a 	bl	80070bc <HAL_UART_Init>
 8001628:	4603      	mov	r3, r0
 800162a:	2b00      	cmp	r3, #0
 800162c:	d001      	beq.n	8001632 <MX_USART2_UART_Init+0x52>
		Error_Handler();
 800162e:	f001 f865 	bl	80026fc <Error_Handler>
	}
	/* USER CODE BEGIN USART2_Init 2 */

	/* USER CODE END USART2_Init 2 */

}
 8001632:	bf00      	nop
 8001634:	bd80      	pop	{r7, pc}
 8001636:	bf00      	nop
 8001638:	200003ec 	.word	0x200003ec
 800163c:	40004400 	.word	0x40004400

08001640 <MX_DMA_Init>:

/**
 * Enable DMA controller clock
 */
static void MX_DMA_Init(void) {
 8001640:	b580      	push	{r7, lr}
 8001642:	b082      	sub	sp, #8
 8001644:	af00      	add	r7, sp, #0

	/* DMA controller clock enable */
	__HAL_RCC_DMA1_CLK_ENABLE();
 8001646:	4b0c      	ldr	r3, [pc, #48]	; (8001678 <MX_DMA_Init+0x38>)
 8001648:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800164a:	4a0b      	ldr	r2, [pc, #44]	; (8001678 <MX_DMA_Init+0x38>)
 800164c:	f043 0301 	orr.w	r3, r3, #1
 8001650:	6493      	str	r3, [r2, #72]	; 0x48
 8001652:	4b09      	ldr	r3, [pc, #36]	; (8001678 <MX_DMA_Init+0x38>)
 8001654:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8001656:	f003 0301 	and.w	r3, r3, #1
 800165a:	607b      	str	r3, [r7, #4]
 800165c:	687b      	ldr	r3, [r7, #4]

	/* DMA interrupt init */
	/* DMA1_Channel6_IRQn interrupt configuration */
	HAL_NVIC_SetPriority(DMA1_Channel6_IRQn, 0, 0);
 800165e:	2200      	movs	r2, #0
 8001660:	2100      	movs	r1, #0
 8001662:	2010      	movs	r0, #16
 8001664:	f002 feb9 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(DMA1_Channel6_IRQn);
 8001668:	2010      	movs	r0, #16
 800166a:	f002 fed2 	bl	8004412 <HAL_NVIC_EnableIRQ>

}
 800166e:	bf00      	nop
 8001670:	3708      	adds	r7, #8
 8001672:	46bd      	mov	sp, r7
 8001674:	bd80      	pop	{r7, pc}
 8001676:	bf00      	nop
 8001678:	40021000 	.word	0x40021000

0800167c <MX_GPIO_Init>:
/**
 * @brief GPIO Initialization Function
 * @param None
 * @retval None
 */
static void MX_GPIO_Init(void) {
 800167c:	b580      	push	{r7, lr}
 800167e:	b088      	sub	sp, #32
 8001680:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 8001682:	f107 030c 	add.w	r3, r7, #12
 8001686:	2200      	movs	r2, #0
 8001688:	601a      	str	r2, [r3, #0]
 800168a:	605a      	str	r2, [r3, #4]
 800168c:	609a      	str	r2, [r3, #8]
 800168e:	60da      	str	r2, [r3, #12]
 8001690:	611a      	str	r2, [r3, #16]

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001692:	4b48      	ldr	r3, [pc, #288]	; (80017b4 <MX_GPIO_Init+0x138>)
 8001694:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001696:	4a47      	ldr	r2, [pc, #284]	; (80017b4 <MX_GPIO_Init+0x138>)
 8001698:	f043 0301 	orr.w	r3, r3, #1
 800169c:	64d3      	str	r3, [r2, #76]	; 0x4c
 800169e:	4b45      	ldr	r3, [pc, #276]	; (80017b4 <MX_GPIO_Init+0x138>)
 80016a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80016a2:	f003 0301 	and.w	r3, r3, #1
 80016a6:	60bb      	str	r3, [r7, #8]
 80016a8:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80016aa:	4b42      	ldr	r3, [pc, #264]	; (80017b4 <MX_GPIO_Init+0x138>)
 80016ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80016ae:	4a41      	ldr	r2, [pc, #260]	; (80017b4 <MX_GPIO_Init+0x138>)
 80016b0:	f043 0302 	orr.w	r3, r3, #2
 80016b4:	64d3      	str	r3, [r2, #76]	; 0x4c
 80016b6:	4b3f      	ldr	r3, [pc, #252]	; (80017b4 <MX_GPIO_Init+0x138>)
 80016b8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80016ba:	f003 0302 	and.w	r3, r3, #2
 80016be:	607b      	str	r3, [r7, #4]
 80016c0:	687b      	ldr	r3, [r7, #4]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOA, DIR_L1_Pin | DIR_L2_Pin | testLED_Pin, GPIO_PIN_RESET);
 80016c2:	2200      	movs	r2, #0
 80016c4:	f44f 6198 	mov.w	r1, #1216	; 0x4c0
 80016c8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80016cc:	f003 fa36 	bl	8004b3c <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOB, DIR_R1_Pin | DIR_R2_Pin, GPIO_PIN_RESET);
 80016d0:	2200      	movs	r2, #0
 80016d2:	21c0      	movs	r1, #192	; 0xc0
 80016d4:	4838      	ldr	r0, [pc, #224]	; (80017b8 <MX_GPIO_Init+0x13c>)
 80016d6:	f003 fa31 	bl	8004b3c <HAL_GPIO_WritePin>

	/*Configure GPIO pins : Motor_Left_clock_Pin orientation_counterclock_Pin */
	GPIO_InitStruct.Pin = Motor_Left_clock_Pin | orientation_counterclock_Pin;
 80016da:	f44f 6302 	mov.w	r3, #2080	; 0x820
 80016de:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80016e0:	4b36      	ldr	r3, [pc, #216]	; (80017bc <MX_GPIO_Init+0x140>)
 80016e2:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80016e4:	2302      	movs	r3, #2
 80016e6:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016e8:	f107 030c 	add.w	r3, r7, #12
 80016ec:	4619      	mov	r1, r3
 80016ee:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80016f2:	f003 f8a1 	bl	8004838 <HAL_GPIO_Init>

	/*Configure GPIO pins : DIR_L1_Pin DIR_L2_Pin testLED_Pin */
	GPIO_InitStruct.Pin = DIR_L1_Pin | DIR_L2_Pin | testLED_Pin;
 80016f6:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
 80016fa:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016fc:	2301      	movs	r3, #1
 80016fe:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001700:	2300      	movs	r3, #0
 8001702:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001704:	2300      	movs	r3, #0
 8001706:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001708:	f107 030c 	add.w	r3, r7, #12
 800170c:	4619      	mov	r1, r3
 800170e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001712:	f003 f891 	bl	8004838 <HAL_GPIO_Init>

	/*Configure GPIO pins : motor_Right_clock_Pin Motor_left_counterclock_Pin orientation_clock_Pin Motor_counterclock_right_Pin */
	GPIO_InitStruct.Pin = motor_Right_clock_Pin | Motor_left_counterclock_Pin | orientation_clock_Pin | Motor_counterclock_right_Pin;
 8001716:	231b      	movs	r3, #27
 8001718:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800171a:	4b28      	ldr	r3, [pc, #160]	; (80017bc <MX_GPIO_Init+0x140>)
 800171c:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800171e:	2302      	movs	r3, #2
 8001720:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001722:	f107 030c 	add.w	r3, r7, #12
 8001726:	4619      	mov	r1, r3
 8001728:	4823      	ldr	r0, [pc, #140]	; (80017b8 <MX_GPIO_Init+0x13c>)
 800172a:	f003 f885 	bl	8004838 <HAL_GPIO_Init>

	/*Configure GPIO pins : DIR_R1_Pin DIR_R2_Pin */
	GPIO_InitStruct.Pin = DIR_R1_Pin | DIR_R2_Pin;
 800172e:	23c0      	movs	r3, #192	; 0xc0
 8001730:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001732:	2301      	movs	r3, #1
 8001734:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001736:	2300      	movs	r3, #0
 8001738:	617b      	str	r3, [r7, #20]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800173a:	2300      	movs	r3, #0
 800173c:	61bb      	str	r3, [r7, #24]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800173e:	f107 030c 	add.w	r3, r7, #12
 8001742:	4619      	mov	r1, r3
 8001744:	481c      	ldr	r0, [pc, #112]	; (80017b8 <MX_GPIO_Init+0x13c>)
 8001746:	f003 f877 	bl	8004838 <HAL_GPIO_Init>

	/* EXTI interrupt init*/
	HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 800174a:	2200      	movs	r2, #0
 800174c:	2100      	movs	r1, #0
 800174e:	2006      	movs	r0, #6
 8001750:	f002 fe43 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001754:	2006      	movs	r0, #6
 8001756:	f002 fe5c 	bl	8004412 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 800175a:	2200      	movs	r2, #0
 800175c:	2100      	movs	r1, #0
 800175e:	2007      	movs	r0, #7
 8001760:	f002 fe3b 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8001764:	2007      	movs	r0, #7
 8001766:	f002 fe54 	bl	8004412 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 800176a:	2200      	movs	r2, #0
 800176c:	2100      	movs	r1, #0
 800176e:	2009      	movs	r0, #9
 8001770:	f002 fe33 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001774:	2009      	movs	r0, #9
 8001776:	f002 fe4c 	bl	8004412 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 800177a:	2200      	movs	r2, #0
 800177c:	2100      	movs	r1, #0
 800177e:	200a      	movs	r0, #10
 8001780:	f002 fe2b 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8001784:	200a      	movs	r0, #10
 8001786:	f002 fe44 	bl	8004412 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800178a:	2200      	movs	r2, #0
 800178c:	2100      	movs	r1, #0
 800178e:	2017      	movs	r0, #23
 8001790:	f002 fe23 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001794:	2017      	movs	r0, #23
 8001796:	f002 fe3c 	bl	8004412 <HAL_NVIC_EnableIRQ>

	HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 800179a:	2200      	movs	r2, #0
 800179c:	2100      	movs	r1, #0
 800179e:	2028      	movs	r0, #40	; 0x28
 80017a0:	f002 fe1b 	bl	80043da <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 80017a4:	2028      	movs	r0, #40	; 0x28
 80017a6:	f002 fe34 	bl	8004412 <HAL_NVIC_EnableIRQ>

}
 80017aa:	bf00      	nop
 80017ac:	3720      	adds	r7, #32
 80017ae:	46bd      	mov	sp, r7
 80017b0:	bd80      	pop	{r7, pc}
 80017b2:	bf00      	nop
 80017b4:	40021000 	.word	0x40021000
 80017b8:	48000400 	.word	0x48000400
 80017bc:	10310000 	.word	0x10310000

080017c0 <motor_init>:

/* USER CODE BEGIN 4 */
void motor_init(Motor *m, char name) {
 80017c0:	b480      	push	{r7}
 80017c2:	b083      	sub	sp, #12
 80017c4:	af00      	add	r7, sp, #0
 80017c6:	6078      	str	r0, [r7, #4]
 80017c8:	460b      	mov	r3, r1
 80017ca:	70fb      	strb	r3, [r7, #3]
	m->name = name;
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	78fa      	ldrb	r2, [r7, #3]
 80017d0:	701a      	strb	r2, [r3, #0]
	m->direction = 0;
 80017d2:	687b      	ldr	r3, [r7, #4]
 80017d4:	2200      	movs	r2, #0
 80017d6:	705a      	strb	r2, [r3, #1]
	m->dutyCycle = 0.0;
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	f04f 0200 	mov.w	r2, #0
 80017de:	605a      	str	r2, [r3, #4]
}
 80017e0:	bf00      	nop
 80017e2:	370c      	adds	r7, #12
 80017e4:	46bd      	mov	sp, r7
 80017e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ea:	4770      	bx	lr

080017ec <motorEncoder_init>:

void motorEncoder_init(MotorEncoder *e) {
 80017ec:	b480      	push	{r7}
 80017ee:	b083      	sub	sp, #12
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	6078      	str	r0, [r7, #4]
	e->fineAdjustment = 0;
 80017f4:	687b      	ldr	r3, [r7, #4]
 80017f6:	2200      	movs	r2, #0
 80017f8:	811a      	strh	r2, [r3, #8]
	e->lastAngle = 0.0;
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	f04f 0200 	mov.w	r2, #0
 8001800:	605a      	str	r2, [r3, #4]
	e->lastTicks = 0;
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	2200      	movs	r2, #0
 8001806:	601a      	str	r2, [r3, #0]
	e->output = 0.0;
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	f04f 0200 	mov.w	r2, #0
 800180e:	611a      	str	r2, [r3, #16]
	e->revolutions = 0;
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	2200      	movs	r2, #0
 8001814:	60da      	str	r2, [r3, #12]
}
 8001816:	bf00      	nop
 8001818:	370c      	adds	r7, #12
 800181a:	46bd      	mov	sp, r7
 800181c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001820:	4770      	bx	lr

08001822 <motorController_init>:

void motorController_init(MotorController *c, Motor *m, MotorEncoder *e) {
 8001822:	b480      	push	{r7}
 8001824:	b085      	sub	sp, #20
 8001826:	af00      	add	r7, sp, #0
 8001828:	60f8      	str	r0, [r7, #12]
 800182a:	60b9      	str	r1, [r7, #8]
 800182c:	607a      	str	r2, [r7, #4]
	c->Encoder = e;
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	687a      	ldr	r2, [r7, #4]
 8001832:	615a      	str	r2, [r3, #20]
	c->lastError = 0.0;
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	f04f 0200 	mov.w	r2, #0
 800183a:	609a      	str	r2, [r3, #8]
	c->motor = m;
 800183c:	68fb      	ldr	r3, [r7, #12]
 800183e:	68ba      	ldr	r2, [r7, #8]
 8001840:	611a      	str	r2, [r3, #16]
	c->reference = 0.0;
 8001842:	68fb      	ldr	r3, [r7, #12]
 8001844:	f04f 0200 	mov.w	r2, #0
 8001848:	601a      	str	r2, [r3, #0]
	c->voltage = 0.0;
 800184a:	68fb      	ldr	r3, [r7, #12]
 800184c:	f04f 0200 	mov.w	r2, #0
 8001850:	60da      	str	r2, [r3, #12]
	c->measAngVel = 0.0;
 8001852:	68fb      	ldr	r3, [r7, #12]
 8001854:	f04f 0200 	mov.w	r2, #0
 8001858:	605a      	str	r2, [r3, #4]
}
 800185a:	bf00      	nop
 800185c:	3714      	adds	r7, #20
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr
	...

08001868 <uart_in_read>:

void uart_in_read(void (*formattingFunc)(char*, uint32_t)) {
 8001868:	b580      	push	{r7, lr}
 800186a:	b092      	sub	sp, #72	; 0x48
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
	// The position at which the DMA writes (can be larger than queue size, if DMA is a lap ahead)
	int dma_ptr = (UART_IN_BUF_SIZE - huart2.hdmarx->Instance->CNDTR) + UART_IN_BUF_SIZE * uart_dma_laps_ahead;
 8001870:	4b5f      	ldr	r3, [pc, #380]	; (80019f0 <uart_in_read+0x188>)
 8001872:	681b      	ldr	r3, [r3, #0]
 8001874:	021b      	lsls	r3, r3, #8
 8001876:	461a      	mov	r2, r3
 8001878:	4b5e      	ldr	r3, [pc, #376]	; (80019f4 <uart_in_read+0x18c>)
 800187a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	685b      	ldr	r3, [r3, #4]
 8001880:	1ad3      	subs	r3, r2, r3
 8001882:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001886:	647b      	str	r3, [r7, #68]	; 0x44


	// dma_ptr - uart_in_read_ptr is the number of unread/uninterpreted bytes in queue
	for (; dma_ptr - uart_in_read_ptr > 0; uart_in_read_ptr++) {
 8001888:	e0a6      	b.n	80019d8 <uart_in_read+0x170>

		// If read pointer crosses "queue border"
		if (uart_in_read_ptr >= UART_IN_BUF_SIZE) {
 800188a:	4b5b      	ldr	r3, [pc, #364]	; (80019f8 <uart_in_read+0x190>)
 800188c:	681b      	ldr	r3, [r3, #0]
 800188e:	2bff      	cmp	r3, #255	; 0xff
 8001890:	dd19      	ble.n	80018c6 <uart_in_read+0x5e>
			uart_in_read_ptr = 0;
 8001892:	4b59      	ldr	r3, [pc, #356]	; (80019f8 <uart_in_read+0x190>)
 8001894:	2200      	movs	r2, #0
 8001896:	601a      	str	r2, [r3, #0]
			uart_in_lastStart -= UART_IN_BUF_SIZE;
 8001898:	4b58      	ldr	r3, [pc, #352]	; (80019fc <uart_in_read+0x194>)
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 80018a0:	4a56      	ldr	r2, [pc, #344]	; (80019fc <uart_in_read+0x194>)
 80018a2:	6013      	str	r3, [r2, #0]
			uart_dma_laps_ahead--;
 80018a4:	4b52      	ldr	r3, [pc, #328]	; (80019f0 <uart_in_read+0x188>)
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	3b01      	subs	r3, #1
 80018aa:	4a51      	ldr	r2, [pc, #324]	; (80019f0 <uart_in_read+0x188>)
 80018ac:	6013      	str	r3, [r2, #0]
			dma_ptr = (UART_IN_BUF_SIZE - huart2.hdmarx->Instance->CNDTR) + UART_IN_BUF_SIZE * uart_dma_laps_ahead;
 80018ae:	4b50      	ldr	r3, [pc, #320]	; (80019f0 <uart_in_read+0x188>)
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	021b      	lsls	r3, r3, #8
 80018b4:	461a      	mov	r2, r3
 80018b6:	4b4f      	ldr	r3, [pc, #316]	; (80019f4 <uart_in_read+0x18c>)
 80018b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	685b      	ldr	r3, [r3, #4]
 80018be:	1ad3      	subs	r3, r2, r3
 80018c0:	f503 7380 	add.w	r3, r3, #256	; 0x100
 80018c4:	647b      	str	r3, [r7, #68]	; 0x44
		}

		// If we find the beginning of a message
		if (uart_in[uart_in_read_ptr] == COMM_DEL_START) {
 80018c6:	4b4c      	ldr	r3, [pc, #304]	; (80019f8 <uart_in_read+0x190>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	4a4d      	ldr	r2, [pc, #308]	; (8001a00 <uart_in_read+0x198>)
 80018cc:	5cd3      	ldrb	r3, [r2, r3]
 80018ce:	2b24      	cmp	r3, #36	; 0x24
 80018d0:	d10a      	bne.n	80018e8 <uart_in_read+0x80>
			validStartDelimiter = true;
 80018d2:	4b4c      	ldr	r3, [pc, #304]	; (8001a04 <uart_in_read+0x19c>)
 80018d4:	2201      	movs	r2, #1
 80018d6:	701a      	strb	r2, [r3, #0]
			uart_in_lastStart = uart_in_read_ptr;
 80018d8:	4b47      	ldr	r3, [pc, #284]	; (80019f8 <uart_in_read+0x190>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	4a47      	ldr	r2, [pc, #284]	; (80019fc <uart_in_read+0x194>)
 80018de:	6013      	str	r3, [r2, #0]
			uart_in_escapes = 0;
 80018e0:	4b49      	ldr	r3, [pc, #292]	; (8001a08 <uart_in_read+0x1a0>)
 80018e2:	2200      	movs	r2, #0
 80018e4:	601a      	str	r2, [r3, #0]
 80018e6:	e072      	b.n	80019ce <uart_in_read+0x166>
		} else if (uart_in[uart_in_read_ptr] == COMM_ESCAPE)
 80018e8:	4b43      	ldr	r3, [pc, #268]	; (80019f8 <uart_in_read+0x190>)
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	4a44      	ldr	r2, [pc, #272]	; (8001a00 <uart_in_read+0x198>)
 80018ee:	5cd3      	ldrb	r3, [r2, r3]
 80018f0:	2b23      	cmp	r3, #35	; 0x23
 80018f2:	d105      	bne.n	8001900 <uart_in_read+0x98>
			uart_in_escapes++;
 80018f4:	4b44      	ldr	r3, [pc, #272]	; (8001a08 <uart_in_read+0x1a0>)
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	3301      	adds	r3, #1
 80018fa:	4a43      	ldr	r2, [pc, #268]	; (8001a08 <uart_in_read+0x1a0>)
 80018fc:	6013      	str	r3, [r2, #0]
 80018fe:	e066      	b.n	80019ce <uart_in_read+0x166>

		// If we find the end of a message
		else if (uart_in[uart_in_read_ptr] == COMM_DEL_STOP) {
 8001900:	4b3d      	ldr	r3, [pc, #244]	; (80019f8 <uart_in_read+0x190>)
 8001902:	681b      	ldr	r3, [r3, #0]
 8001904:	4a3e      	ldr	r2, [pc, #248]	; (8001a00 <uart_in_read+0x198>)
 8001906:	5cd3      	ldrb	r3, [r2, r3]
 8001908:	2b40      	cmp	r3, #64	; 0x40
 800190a:	d160      	bne.n	80019ce <uart_in_read+0x166>

			int frameLength = uart_in_read_ptr - uart_in_lastStart + 1;
 800190c:	4b3a      	ldr	r3, [pc, #232]	; (80019f8 <uart_in_read+0x190>)
 800190e:	681a      	ldr	r2, [r3, #0]
 8001910:	4b3a      	ldr	r3, [pc, #232]	; (80019fc <uart_in_read+0x194>)
 8001912:	681b      	ldr	r3, [r3, #0]
 8001914:	1ad3      	subs	r3, r2, r3
 8001916:	3301      	adds	r3, #1
 8001918:	643b      	str	r3, [r7, #64]	; 0x40

			if (frameLength <= COMM_MAX_FRAME_SIZE) {
 800191a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800191c:	2b16      	cmp	r3, #22
 800191e:	dc56      	bgt.n	80019ce <uart_in_read+0x166>
				char frame[COMM_MAX_FRAME_SIZE] = { 0 };
 8001920:	2300      	movs	r3, #0
 8001922:	62bb      	str	r3, [r7, #40]	; 0x28
 8001924:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001928:	2200      	movs	r2, #0
 800192a:	601a      	str	r2, [r3, #0]
 800192c:	605a      	str	r2, [r3, #4]
 800192e:	609a      	str	r2, [r3, #8]
 8001930:	60da      	str	r2, [r3, #12]
 8001932:	821a      	strh	r2, [r3, #16]

				// If the start and stop delimiter are on opposite sides of the "queue border"
				if (uart_in_lastStart < 0) {
 8001934:	4b31      	ldr	r3, [pc, #196]	; (80019fc <uart_in_read+0x194>)
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	2b00      	cmp	r3, #0
 800193a:	da1c      	bge.n	8001976 <uart_in_read+0x10e>
					memcpy(frame, uart_in + UART_IN_BUF_SIZE + uart_in_lastStart, -uart_in_lastStart);
 800193c:	4b2f      	ldr	r3, [pc, #188]	; (80019fc <uart_in_read+0x194>)
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	f503 7380 	add.w	r3, r3, #256	; 0x100
 8001944:	4a2e      	ldr	r2, [pc, #184]	; (8001a00 <uart_in_read+0x198>)
 8001946:	1899      	adds	r1, r3, r2
 8001948:	4b2c      	ldr	r3, [pc, #176]	; (80019fc <uart_in_read+0x194>)
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	425b      	negs	r3, r3
 800194e:	461a      	mov	r2, r3
 8001950:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001954:	4618      	mov	r0, r3
 8001956:	f006 f9f3 	bl	8007d40 <memcpy>
					memcpy(frame - uart_in_lastStart, uart_in, uart_in_read_ptr + 1);
 800195a:	4b28      	ldr	r3, [pc, #160]	; (80019fc <uart_in_read+0x194>)
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	425b      	negs	r3, r3
 8001960:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001964:	18d0      	adds	r0, r2, r3
 8001966:	4b24      	ldr	r3, [pc, #144]	; (80019f8 <uart_in_read+0x190>)
 8001968:	681b      	ldr	r3, [r3, #0]
 800196a:	3301      	adds	r3, #1
 800196c:	461a      	mov	r2, r3
 800196e:	4924      	ldr	r1, [pc, #144]	; (8001a00 <uart_in_read+0x198>)
 8001970:	f006 f9e6 	bl	8007d40 <memcpy>
 8001974:	e00a      	b.n	800198c <uart_in_read+0x124>
				} else
					memcpy(frame, uart_in + uart_in_lastStart, frameLength);
 8001976:	4b21      	ldr	r3, [pc, #132]	; (80019fc <uart_in_read+0x194>)
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	461a      	mov	r2, r3
 800197c:	4b20      	ldr	r3, [pc, #128]	; (8001a00 <uart_in_read+0x198>)
 800197e:	18d1      	adds	r1, r2, r3
 8001980:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8001982:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001986:	4618      	mov	r0, r3
 8001988:	f006 f9da 	bl	8007d40 <memcpy>
				validStartDelimiter = false;
 800198c:	4b1d      	ldr	r3, [pc, #116]	; (8001a04 <uart_in_read+0x19c>)
 800198e:	2200      	movs	r2, #0
 8001990:	701a      	strb	r2, [r3, #0]

				char data[COMM_MAX_FRAME_SIZE] = { 0 };
 8001992:	2300      	movs	r3, #0
 8001994:	613b      	str	r3, [r7, #16]
 8001996:	f107 0314 	add.w	r3, r7, #20
 800199a:	2200      	movs	r2, #0
 800199c:	601a      	str	r2, [r3, #0]
 800199e:	605a      	str	r2, [r3, #4]
 80019a0:	609a      	str	r2, [r3, #8]
 80019a2:	60da      	str	r2, [r3, #12]
 80019a4:	821a      	strh	r2, [r3, #16]
				uint32_t dataLength = 0;
 80019a6:	2300      	movs	r3, #0
 80019a8:	60fb      	str	r3, [r7, #12]

				if (from_frame(frame, frameLength, data, &dataLength) == 1) {
 80019aa:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80019ac:	f107 030c 	add.w	r3, r7, #12
 80019b0:	f107 0210 	add.w	r2, r7, #16
 80019b4:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80019b8:	f7ff fac7 	bl	8000f4a <from_frame>
 80019bc:	4603      	mov	r3, r0
 80019be:	2b01      	cmp	r3, #1
 80019c0:	d105      	bne.n	80019ce <uart_in_read+0x166>
					(*formattingFunc)(data, dataLength);
 80019c2:	68f9      	ldr	r1, [r7, #12]
 80019c4:	f107 0210 	add.w	r2, r7, #16
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	4610      	mov	r0, r2
 80019cc:	4798      	blx	r3
	for (; dma_ptr - uart_in_read_ptr > 0; uart_in_read_ptr++) {
 80019ce:	4b0a      	ldr	r3, [pc, #40]	; (80019f8 <uart_in_read+0x190>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	3301      	adds	r3, #1
 80019d4:	4a08      	ldr	r2, [pc, #32]	; (80019f8 <uart_in_read+0x190>)
 80019d6:	6013      	str	r3, [r2, #0]
 80019d8:	4b07      	ldr	r3, [pc, #28]	; (80019f8 <uart_in_read+0x190>)
 80019da:	681b      	ldr	r3, [r3, #0]
 80019dc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80019de:	1ad3      	subs	r3, r2, r3
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	f73f af52 	bgt.w	800188a <uart_in_read+0x22>
				}
			}
		}
	}
}
 80019e6:	bf00      	nop
 80019e8:	bf00      	nop
 80019ea:	3748      	adds	r7, #72	; 0x48
 80019ec:	46bd      	mov	sp, r7
 80019ee:	bd80      	pop	{r7, pc}
 80019f0:	2000003c 	.word	0x2000003c
 80019f4:	200003ec 	.word	0x200003ec
 80019f8:	20000038 	.word	0x20000038
 80019fc:	20000000 	.word	0x20000000
 8001a00:	20000040 	.word	0x20000040
 8001a04:	20000034 	.word	0x20000034
 8001a08:	20000140 	.word	0x20000140

08001a0c <referenceFormatting>:

void referenceFormatting(char *uart_msg, uint32_t len) {
 8001a0c:	b480      	push	{r7}
 8001a0e:	b083      	sub	sp, #12
 8001a10:	af00      	add	r7, sp, #0
 8001a12:	6078      	str	r0, [r7, #4]
 8001a14:	6039      	str	r1, [r7, #0]

	// Check length of msg
	if (len != 10)
 8001a16:	683b      	ldr	r3, [r7, #0]
 8001a18:	2b0a      	cmp	r3, #10
 8001a1a:	d115      	bne.n	8001a48 <referenceFormatting+0x3c>
		return;

	// Retrieve reference for right wheel
	if (uart_msg[0] == 'R') {
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	781b      	ldrb	r3, [r3, #0]
 8001a20:	2b52      	cmp	r3, #82	; 0x52
 8001a22:	d113      	bne.n	8001a4c <referenceFormatting+0x40>
		memcpy(&controllerR.reference, uart_msg + 1, 4);
 8001a24:	687b      	ldr	r3, [r7, #4]
 8001a26:	3301      	adds	r3, #1
 8001a28:	681b      	ldr	r3, [r3, #0]
 8001a2a:	461a      	mov	r2, r3
 8001a2c:	4b0b      	ldr	r3, [pc, #44]	; (8001a5c <referenceFormatting+0x50>)
 8001a2e:	601a      	str	r2, [r3, #0]
	} else {
		return;
	}

	// Retrieve reference for left wheel
	if (uart_msg[5] == 'L') {
 8001a30:	687b      	ldr	r3, [r7, #4]
 8001a32:	3305      	adds	r3, #5
 8001a34:	781b      	ldrb	r3, [r3, #0]
 8001a36:	2b4c      	cmp	r3, #76	; 0x4c
 8001a38:	d10a      	bne.n	8001a50 <referenceFormatting+0x44>
		memcpy(&controllerL.reference, uart_msg + 6, 4);
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	3306      	adds	r3, #6
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	461a      	mov	r2, r3
 8001a42:	4b07      	ldr	r3, [pc, #28]	; (8001a60 <referenceFormatting+0x54>)
 8001a44:	601a      	str	r2, [r3, #0]
 8001a46:	e004      	b.n	8001a52 <referenceFormatting+0x46>
		return;
 8001a48:	bf00      	nop
 8001a4a:	e002      	b.n	8001a52 <referenceFormatting+0x46>
		return;
 8001a4c:	bf00      	nop
 8001a4e:	e000      	b.n	8001a52 <referenceFormatting+0x46>
	} else {
		return;
 8001a50:	bf00      	nop
	}
}
 8001a52:	370c      	adds	r7, #12
 8001a54:	46bd      	mov	sp, r7
 8001a56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a5a:	4770      	bx	lr
 8001a5c:	2000033c 	.word	0x2000033c
 8001a60:	20000270 	.word	0x20000270
 8001a64:	00000000 	.word	0x00000000

08001a68 <calcDistance>:

float calcDistance(MotorController *c) {
 8001a68:	b580      	push	{r7, lr}
 8001a6a:	b084      	sub	sp, #16
 8001a6c:	af00      	add	r7, sp, #0
 8001a6e:	6078      	str	r0, [r7, #4]
	float deltaTicks = c->Encoder->output * TOTAL_WHEEL_TICKS - c->Encoder->lastTicks;
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	695b      	ldr	r3, [r3, #20]
 8001a74:	edd3 7a04 	vldr	s15, [r3, #16]
 8001a78:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8001ad8 <calcDistance+0x70>
 8001a7c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	695b      	ldr	r3, [r3, #20]
 8001a84:	681b      	ldr	r3, [r3, #0]
 8001a86:	ee07 3a90 	vmov	s15, r3
 8001a8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001a8e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001a92:	edc7 7a03 	vstr	s15, [r7, #12]
	return M_PI * WHEELDIA * (deltaTicks / TOTAL_WHEEL_TICKS);
 8001a96:	edd7 7a03 	vldr	s15, [r7, #12]
 8001a9a:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8001ad8 <calcDistance+0x70>
 8001a9e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001aa2:	ee16 0a90 	vmov	r0, s13
 8001aa6:	f7fe fcf7 	bl	8000498 <__aeabi_f2d>
 8001aaa:	a309      	add	r3, pc, #36	; (adr r3, 8001ad0 <calcDistance+0x68>)
 8001aac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ab0:	f7fe fd4a 	bl	8000548 <__aeabi_dmul>
 8001ab4:	4602      	mov	r2, r0
 8001ab6:	460b      	mov	r3, r1
 8001ab8:	4610      	mov	r0, r2
 8001aba:	4619      	mov	r1, r3
 8001abc:	f7ff f806 	bl	8000acc <__aeabi_d2f>
 8001ac0:	4603      	mov	r3, r0
 8001ac2:	ee07 3a90 	vmov	s15, r3
}
 8001ac6:	eeb0 0a67 	vmov.f32	s0, s15
 8001aca:	3710      	adds	r7, #16
 8001acc:	46bd      	mov	sp, r7
 8001ace:	bd80      	pop	{r7, pc}
 8001ad0:	9217271a 	.word	0x9217271a
 8001ad4:	3fd015bf 	.word	0x3fd015bf
 8001ad8:	44f00000 	.word	0x44f00000
 8001adc:	00000000 	.word	0x00000000

08001ae0 <calcPositionAndVelocity>:

void calcPositionAndVelocity() {
 8001ae0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001ae4:	b084      	sub	sp, #16
 8001ae6:	af00      	add	r7, sp, #0
	float distR = calcDistance(&controllerR);
 8001ae8:	487b      	ldr	r0, [pc, #492]	; (8001cd8 <calcPositionAndVelocity+0x1f8>)
 8001aea:	f7ff ffbd 	bl	8001a68 <calcDistance>
 8001aee:	ed87 0a03 	vstr	s0, [r7, #12]
	float distL = calcDistance(&controllerL);
 8001af2:	487a      	ldr	r0, [pc, #488]	; (8001cdc <calcPositionAndVelocity+0x1fc>)
 8001af4:	f7ff ffb8 	bl	8001a68 <calcDistance>
 8001af8:	ed87 0a02 	vstr	s0, [r7, #8]
	controllerR.Encoder->lastTicks = controllerR.Encoder->output * TOTAL_WHEEL_TICKS;
 8001afc:	4b76      	ldr	r3, [pc, #472]	; (8001cd8 <calcPositionAndVelocity+0x1f8>)
 8001afe:	695b      	ldr	r3, [r3, #20]
 8001b00:	edd3 7a04 	vldr	s15, [r3, #16]
 8001b04:	ed9f 7a76 	vldr	s14, [pc, #472]	; 8001ce0 <calcPositionAndVelocity+0x200>
 8001b08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b0c:	4b72      	ldr	r3, [pc, #456]	; (8001cd8 <calcPositionAndVelocity+0x1f8>)
 8001b0e:	695b      	ldr	r3, [r3, #20]
 8001b10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b14:	ee17 2a90 	vmov	r2, s15
 8001b18:	601a      	str	r2, [r3, #0]
	controllerL.Encoder->lastTicks = controllerL.Encoder->output * TOTAL_WHEEL_TICKS;
 8001b1a:	4b70      	ldr	r3, [pc, #448]	; (8001cdc <calcPositionAndVelocity+0x1fc>)
 8001b1c:	695b      	ldr	r3, [r3, #20]
 8001b1e:	edd3 7a04 	vldr	s15, [r3, #16]
 8001b22:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8001ce0 <calcPositionAndVelocity+0x200>
 8001b26:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b2a:	4b6c      	ldr	r3, [pc, #432]	; (8001cdc <calcPositionAndVelocity+0x1fc>)
 8001b2c:	695b      	ldr	r3, [r3, #20]
 8001b2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001b32:	ee17 2a90 	vmov	r2, s15
 8001b36:	601a      	str	r2, [r3, #0]
	float dist = (distL + distR) / 2;
 8001b38:	ed97 7a02 	vldr	s14, [r7, #8]
 8001b3c:	edd7 7a03 	vldr	s15, [r7, #12]
 8001b40:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001b44:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8001b48:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001b4c:	edc7 7a01 	vstr	s15, [r7, #4]
	posX = posX + dist * cos(posPhi);
 8001b50:	4b64      	ldr	r3, [pc, #400]	; (8001ce4 <calcPositionAndVelocity+0x204>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	4618      	mov	r0, r3
 8001b56:	f7fe fc9f 	bl	8000498 <__aeabi_f2d>
 8001b5a:	4604      	mov	r4, r0
 8001b5c:	460d      	mov	r5, r1
 8001b5e:	6878      	ldr	r0, [r7, #4]
 8001b60:	f7fe fc9a 	bl	8000498 <__aeabi_f2d>
 8001b64:	4680      	mov	r8, r0
 8001b66:	4689      	mov	r9, r1
 8001b68:	4b5f      	ldr	r3, [pc, #380]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001b6a:	681b      	ldr	r3, [r3, #0]
 8001b6c:	4618      	mov	r0, r3
 8001b6e:	f7fe fc93 	bl	8000498 <__aeabi_f2d>
 8001b72:	4602      	mov	r2, r0
 8001b74:	460b      	mov	r3, r1
 8001b76:	ec43 2b10 	vmov	d0, r2, r3
 8001b7a:	f006 f8f9 	bl	8007d70 <cos>
 8001b7e:	ec53 2b10 	vmov	r2, r3, d0
 8001b82:	4640      	mov	r0, r8
 8001b84:	4649      	mov	r1, r9
 8001b86:	f7fe fcdf 	bl	8000548 <__aeabi_dmul>
 8001b8a:	4602      	mov	r2, r0
 8001b8c:	460b      	mov	r3, r1
 8001b8e:	4620      	mov	r0, r4
 8001b90:	4629      	mov	r1, r5
 8001b92:	f7fe fb23 	bl	80001dc <__adddf3>
 8001b96:	4602      	mov	r2, r0
 8001b98:	460b      	mov	r3, r1
 8001b9a:	4610      	mov	r0, r2
 8001b9c:	4619      	mov	r1, r3
 8001b9e:	f7fe ff95 	bl	8000acc <__aeabi_d2f>
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	4a4f      	ldr	r2, [pc, #316]	; (8001ce4 <calcPositionAndVelocity+0x204>)
 8001ba6:	6013      	str	r3, [r2, #0]
	posY = posY + dist * sin(posPhi);
 8001ba8:	4b50      	ldr	r3, [pc, #320]	; (8001cec <calcPositionAndVelocity+0x20c>)
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4618      	mov	r0, r3
 8001bae:	f7fe fc73 	bl	8000498 <__aeabi_f2d>
 8001bb2:	4604      	mov	r4, r0
 8001bb4:	460d      	mov	r5, r1
 8001bb6:	6878      	ldr	r0, [r7, #4]
 8001bb8:	f7fe fc6e 	bl	8000498 <__aeabi_f2d>
 8001bbc:	4680      	mov	r8, r0
 8001bbe:	4689      	mov	r9, r1
 8001bc0:	4b49      	ldr	r3, [pc, #292]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	4618      	mov	r0, r3
 8001bc6:	f7fe fc67 	bl	8000498 <__aeabi_f2d>
 8001bca:	4602      	mov	r2, r0
 8001bcc:	460b      	mov	r3, r1
 8001bce:	ec43 2b10 	vmov	d0, r2, r3
 8001bd2:	f006 f91d 	bl	8007e10 <sin>
 8001bd6:	ec53 2b10 	vmov	r2, r3, d0
 8001bda:	4640      	mov	r0, r8
 8001bdc:	4649      	mov	r1, r9
 8001bde:	f7fe fcb3 	bl	8000548 <__aeabi_dmul>
 8001be2:	4602      	mov	r2, r0
 8001be4:	460b      	mov	r3, r1
 8001be6:	4620      	mov	r0, r4
 8001be8:	4629      	mov	r1, r5
 8001bea:	f7fe faf7 	bl	80001dc <__adddf3>
 8001bee:	4602      	mov	r2, r0
 8001bf0:	460b      	mov	r3, r1
 8001bf2:	4610      	mov	r0, r2
 8001bf4:	4619      	mov	r1, r3
 8001bf6:	f7fe ff69 	bl	8000acc <__aeabi_d2f>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	4a3b      	ldr	r2, [pc, #236]	; (8001cec <calcPositionAndVelocity+0x20c>)
 8001bfe:	6013      	str	r3, [r2, #0]
	posPhi = posPhi + (distR - distL) / DISBETWHEEL;
 8001c00:	4b39      	ldr	r3, [pc, #228]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	4618      	mov	r0, r3
 8001c06:	f7fe fc47 	bl	8000498 <__aeabi_f2d>
 8001c0a:	4604      	mov	r4, r0
 8001c0c:	460d      	mov	r5, r1
 8001c0e:	ed97 7a03 	vldr	s14, [r7, #12]
 8001c12:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c16:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c1a:	ee17 0a90 	vmov	r0, s15
 8001c1e:	f7fe fc3b 	bl	8000498 <__aeabi_f2d>
 8001c22:	a32b      	add	r3, pc, #172	; (adr r3, 8001cd0 <calcPositionAndVelocity+0x1f0>)
 8001c24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c28:	f7fe fdb8 	bl	800079c <__aeabi_ddiv>
 8001c2c:	4602      	mov	r2, r0
 8001c2e:	460b      	mov	r3, r1
 8001c30:	4620      	mov	r0, r4
 8001c32:	4629      	mov	r1, r5
 8001c34:	f7fe fad2 	bl	80001dc <__adddf3>
 8001c38:	4602      	mov	r2, r0
 8001c3a:	460b      	mov	r3, r1
 8001c3c:	4610      	mov	r0, r2
 8001c3e:	4619      	mov	r1, r3
 8001c40:	f7fe ff44 	bl	8000acc <__aeabi_d2f>
 8001c44:	4603      	mov	r3, r0
 8001c46:	4a28      	ldr	r2, [pc, #160]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001c48:	6013      	str	r3, [r2, #0]

	velPhi = ((posPhi - posPhiPrev)) / positionCalculationPeriod;
 8001c4a:	4b27      	ldr	r3, [pc, #156]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001c4c:	ed93 7a00 	vldr	s14, [r3]
 8001c50:	4b27      	ldr	r3, [pc, #156]	; (8001cf0 <calcPositionAndVelocity+0x210>)
 8001c52:	edd3 7a00 	vldr	s15, [r3]
 8001c56:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001c5a:	4b26      	ldr	r3, [pc, #152]	; (8001cf4 <calcPositionAndVelocity+0x214>)
 8001c5c:	ed93 7a00 	vldr	s14, [r3]
 8001c60:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001c64:	4b24      	ldr	r3, [pc, #144]	; (8001cf8 <calcPositionAndVelocity+0x218>)
 8001c66:	edc3 7a00 	vstr	s15, [r3]
	velX = (posX - posXPrev) / positionCalculationPeriod;
 8001c6a:	4b1e      	ldr	r3, [pc, #120]	; (8001ce4 <calcPositionAndVelocity+0x204>)
 8001c6c:	ed93 7a00 	vldr	s14, [r3]
 8001c70:	4b22      	ldr	r3, [pc, #136]	; (8001cfc <calcPositionAndVelocity+0x21c>)
 8001c72:	edd3 7a00 	vldr	s15, [r3]
 8001c76:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001c7a:	4b1e      	ldr	r3, [pc, #120]	; (8001cf4 <calcPositionAndVelocity+0x214>)
 8001c7c:	ed93 7a00 	vldr	s14, [r3]
 8001c80:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001c84:	4b1e      	ldr	r3, [pc, #120]	; (8001d00 <calcPositionAndVelocity+0x220>)
 8001c86:	edc3 7a00 	vstr	s15, [r3]
	velY = (posY - posYPrev) / positionCalculationPeriod;
 8001c8a:	4b18      	ldr	r3, [pc, #96]	; (8001cec <calcPositionAndVelocity+0x20c>)
 8001c8c:	ed93 7a00 	vldr	s14, [r3]
 8001c90:	4b1c      	ldr	r3, [pc, #112]	; (8001d04 <calcPositionAndVelocity+0x224>)
 8001c92:	edd3 7a00 	vldr	s15, [r3]
 8001c96:	ee77 6a67 	vsub.f32	s13, s14, s15
 8001c9a:	4b16      	ldr	r3, [pc, #88]	; (8001cf4 <calcPositionAndVelocity+0x214>)
 8001c9c:	ed93 7a00 	vldr	s14, [r3]
 8001ca0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001ca4:	4b18      	ldr	r3, [pc, #96]	; (8001d08 <calcPositionAndVelocity+0x228>)
 8001ca6:	edc3 7a00 	vstr	s15, [r3]

	posPhiPrev = posPhi;
 8001caa:	4b0f      	ldr	r3, [pc, #60]	; (8001ce8 <calcPositionAndVelocity+0x208>)
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	4a10      	ldr	r2, [pc, #64]	; (8001cf0 <calcPositionAndVelocity+0x210>)
 8001cb0:	6013      	str	r3, [r2, #0]
	posXPrev = posX;
 8001cb2:	4b0c      	ldr	r3, [pc, #48]	; (8001ce4 <calcPositionAndVelocity+0x204>)
 8001cb4:	681b      	ldr	r3, [r3, #0]
 8001cb6:	4a11      	ldr	r2, [pc, #68]	; (8001cfc <calcPositionAndVelocity+0x21c>)
 8001cb8:	6013      	str	r3, [r2, #0]
	posYPrev = posY;
 8001cba:	4b0c      	ldr	r3, [pc, #48]	; (8001cec <calcPositionAndVelocity+0x20c>)
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	4a11      	ldr	r2, [pc, #68]	; (8001d04 <calcPositionAndVelocity+0x224>)
 8001cc0:	6013      	str	r3, [r2, #0]
}
 8001cc2:	bf00      	nop
 8001cc4:	3710      	adds	r7, #16
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001ccc:	f3af 8000 	nop.w
 8001cd0:	851eb852 	.word	0x851eb852
 8001cd4:	3fd851eb 	.word	0x3fd851eb
 8001cd8:	2000033c 	.word	0x2000033c
 8001cdc:	20000270 	.word	0x20000270
 8001ce0:	44f00000 	.word	0x44f00000
 8001ce4:	20000188 	.word	0x20000188
 8001ce8:	20000198 	.word	0x20000198
 8001cec:	20000190 	.word	0x20000190
 8001cf0:	2000019c 	.word	0x2000019c
 8001cf4:	2000026c 	.word	0x2000026c
 8001cf8:	200001a8 	.word	0x200001a8
 8001cfc:	2000018c 	.word	0x2000018c
 8001d00:	200001a0 	.word	0x200001a0
 8001d04:	20000194 	.word	0x20000194
 8001d08:	200001a4 	.word	0x200001a4

08001d0c <updatePositionsAndVelocities>:

void updatePositionsAndVelocities() {
 8001d0c:	b580      	push	{r7, lr}
 8001d0e:	af00      	add	r7, sp, #0

	// Position and velocity data from wheel encoders
	calcPositionAndVelocity();
 8001d10:	f7ff fee6 	bl	8001ae0 <calcPositionAndVelocity>
	sendPositionAndVelocity();
 8001d14:	f000 f89c 	bl	8001e50 <sendPositionAndVelocity>

	// Encoder data from top plate
	calcOrientOutput();
 8001d18:	f000 fcf6 	bl	8002708 <calcOrientOutput>
	sendOrientData();
 8001d1c:	f000 fd9e 	bl	800285c <sendOrientData>
}
 8001d20:	bf00      	nop
 8001d22:	bd80      	pop	{r7, pc}

08001d24 <packThe6Floats>:

void packThe6Floats() {
 8001d24:	b480      	push	{r7}
 8001d26:	b089      	sub	sp, #36	; 0x24
 8001d28:	af00      	add	r7, sp, #0
	uint8_t *pointer = &posX;
 8001d2a:	4b42      	ldr	r3, [pc, #264]	; (8001e34 <packThe6Floats+0x110>)
 8001d2c:	607b      	str	r3, [r7, #4]
	for (int i = 0; i < 4; i++) {
 8001d2e:	2300      	movs	r3, #0
 8001d30:	61fb      	str	r3, [r7, #28]
 8001d32:	e00b      	b.n	8001d4c <packThe6Floats+0x28>
		position[i] = *(pointer + i);
 8001d34:	69fb      	ldr	r3, [r7, #28]
 8001d36:	687a      	ldr	r2, [r7, #4]
 8001d38:	4413      	add	r3, r2
 8001d3a:	7819      	ldrb	r1, [r3, #0]
 8001d3c:	4a3e      	ldr	r2, [pc, #248]	; (8001e38 <packThe6Floats+0x114>)
 8001d3e:	69fb      	ldr	r3, [r7, #28]
 8001d40:	4413      	add	r3, r2
 8001d42:	460a      	mov	r2, r1
 8001d44:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 4; i++) {
 8001d46:	69fb      	ldr	r3, [r7, #28]
 8001d48:	3301      	adds	r3, #1
 8001d4a:	61fb      	str	r3, [r7, #28]
 8001d4c:	69fb      	ldr	r3, [r7, #28]
 8001d4e:	2b03      	cmp	r3, #3
 8001d50:	ddf0      	ble.n	8001d34 <packThe6Floats+0x10>
	}

	pointer = &posY;
 8001d52:	4b3a      	ldr	r3, [pc, #232]	; (8001e3c <packThe6Floats+0x118>)
 8001d54:	607b      	str	r3, [r7, #4]
	for (int k = 4; k < 8; k++) {
 8001d56:	2304      	movs	r3, #4
 8001d58:	61bb      	str	r3, [r7, #24]
 8001d5a:	e00c      	b.n	8001d76 <packThe6Floats+0x52>
		position[k] = *(pointer + k - 4);
 8001d5c:	69bb      	ldr	r3, [r7, #24]
 8001d5e:	3b04      	subs	r3, #4
 8001d60:	687a      	ldr	r2, [r7, #4]
 8001d62:	4413      	add	r3, r2
 8001d64:	7819      	ldrb	r1, [r3, #0]
 8001d66:	4a34      	ldr	r2, [pc, #208]	; (8001e38 <packThe6Floats+0x114>)
 8001d68:	69bb      	ldr	r3, [r7, #24]
 8001d6a:	4413      	add	r3, r2
 8001d6c:	460a      	mov	r2, r1
 8001d6e:	701a      	strb	r2, [r3, #0]
	for (int k = 4; k < 8; k++) {
 8001d70:	69bb      	ldr	r3, [r7, #24]
 8001d72:	3301      	adds	r3, #1
 8001d74:	61bb      	str	r3, [r7, #24]
 8001d76:	69bb      	ldr	r3, [r7, #24]
 8001d78:	2b07      	cmp	r3, #7
 8001d7a:	ddef      	ble.n	8001d5c <packThe6Floats+0x38>
	}
	pointer = &posPhi;
 8001d7c:	4b30      	ldr	r3, [pc, #192]	; (8001e40 <packThe6Floats+0x11c>)
 8001d7e:	607b      	str	r3, [r7, #4]
	for (int j = 8; j < 12; j++) {
 8001d80:	2308      	movs	r3, #8
 8001d82:	617b      	str	r3, [r7, #20]
 8001d84:	e00c      	b.n	8001da0 <packThe6Floats+0x7c>
		position[j] = *(pointer + j - 8);
 8001d86:	697b      	ldr	r3, [r7, #20]
 8001d88:	3b08      	subs	r3, #8
 8001d8a:	687a      	ldr	r2, [r7, #4]
 8001d8c:	4413      	add	r3, r2
 8001d8e:	7819      	ldrb	r1, [r3, #0]
 8001d90:	4a29      	ldr	r2, [pc, #164]	; (8001e38 <packThe6Floats+0x114>)
 8001d92:	697b      	ldr	r3, [r7, #20]
 8001d94:	4413      	add	r3, r2
 8001d96:	460a      	mov	r2, r1
 8001d98:	701a      	strb	r2, [r3, #0]
	for (int j = 8; j < 12; j++) {
 8001d9a:	697b      	ldr	r3, [r7, #20]
 8001d9c:	3301      	adds	r3, #1
 8001d9e:	617b      	str	r3, [r7, #20]
 8001da0:	697b      	ldr	r3, [r7, #20]
 8001da2:	2b0b      	cmp	r3, #11
 8001da4:	ddef      	ble.n	8001d86 <packThe6Floats+0x62>
	}
	pointer = &velX;
 8001da6:	4b27      	ldr	r3, [pc, #156]	; (8001e44 <packThe6Floats+0x120>)
 8001da8:	607b      	str	r3, [r7, #4]
	for (int m = 12; m < 16; m++) {
 8001daa:	230c      	movs	r3, #12
 8001dac:	613b      	str	r3, [r7, #16]
 8001dae:	e00c      	b.n	8001dca <packThe6Floats+0xa6>
		position[m] = *(pointer + m - 12);
 8001db0:	693b      	ldr	r3, [r7, #16]
 8001db2:	3b0c      	subs	r3, #12
 8001db4:	687a      	ldr	r2, [r7, #4]
 8001db6:	4413      	add	r3, r2
 8001db8:	7819      	ldrb	r1, [r3, #0]
 8001dba:	4a1f      	ldr	r2, [pc, #124]	; (8001e38 <packThe6Floats+0x114>)
 8001dbc:	693b      	ldr	r3, [r7, #16]
 8001dbe:	4413      	add	r3, r2
 8001dc0:	460a      	mov	r2, r1
 8001dc2:	701a      	strb	r2, [r3, #0]
	for (int m = 12; m < 16; m++) {
 8001dc4:	693b      	ldr	r3, [r7, #16]
 8001dc6:	3301      	adds	r3, #1
 8001dc8:	613b      	str	r3, [r7, #16]
 8001dca:	693b      	ldr	r3, [r7, #16]
 8001dcc:	2b0f      	cmp	r3, #15
 8001dce:	ddef      	ble.n	8001db0 <packThe6Floats+0x8c>
	}
	pointer = &velY;
 8001dd0:	4b1d      	ldr	r3, [pc, #116]	; (8001e48 <packThe6Floats+0x124>)
 8001dd2:	607b      	str	r3, [r7, #4]
	for (int n = 16; n < 20; n++) {
 8001dd4:	2310      	movs	r3, #16
 8001dd6:	60fb      	str	r3, [r7, #12]
 8001dd8:	e00c      	b.n	8001df4 <packThe6Floats+0xd0>
		position[n] = *(pointer + n - 16);
 8001dda:	68fb      	ldr	r3, [r7, #12]
 8001ddc:	3b10      	subs	r3, #16
 8001dde:	687a      	ldr	r2, [r7, #4]
 8001de0:	4413      	add	r3, r2
 8001de2:	7819      	ldrb	r1, [r3, #0]
 8001de4:	4a14      	ldr	r2, [pc, #80]	; (8001e38 <packThe6Floats+0x114>)
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	4413      	add	r3, r2
 8001dea:	460a      	mov	r2, r1
 8001dec:	701a      	strb	r2, [r3, #0]
	for (int n = 16; n < 20; n++) {
 8001dee:	68fb      	ldr	r3, [r7, #12]
 8001df0:	3301      	adds	r3, #1
 8001df2:	60fb      	str	r3, [r7, #12]
 8001df4:	68fb      	ldr	r3, [r7, #12]
 8001df6:	2b13      	cmp	r3, #19
 8001df8:	ddef      	ble.n	8001dda <packThe6Floats+0xb6>
	}
	pointer = &velPhi;
 8001dfa:	4b14      	ldr	r3, [pc, #80]	; (8001e4c <packThe6Floats+0x128>)
 8001dfc:	607b      	str	r3, [r7, #4]
	for (int o = 20; o < 24; o++) {
 8001dfe:	2314      	movs	r3, #20
 8001e00:	60bb      	str	r3, [r7, #8]
 8001e02:	e00c      	b.n	8001e1e <packThe6Floats+0xfa>
		position[o] = *(pointer + o - 20);
 8001e04:	68bb      	ldr	r3, [r7, #8]
 8001e06:	3b14      	subs	r3, #20
 8001e08:	687a      	ldr	r2, [r7, #4]
 8001e0a:	4413      	add	r3, r2
 8001e0c:	7819      	ldrb	r1, [r3, #0]
 8001e0e:	4a0a      	ldr	r2, [pc, #40]	; (8001e38 <packThe6Floats+0x114>)
 8001e10:	68bb      	ldr	r3, [r7, #8]
 8001e12:	4413      	add	r3, r2
 8001e14:	460a      	mov	r2, r1
 8001e16:	701a      	strb	r2, [r3, #0]
	for (int o = 20; o < 24; o++) {
 8001e18:	68bb      	ldr	r3, [r7, #8]
 8001e1a:	3301      	adds	r3, #1
 8001e1c:	60bb      	str	r3, [r7, #8]
 8001e1e:	68bb      	ldr	r3, [r7, #8]
 8001e20:	2b17      	cmp	r3, #23
 8001e22:	ddef      	ble.n	8001e04 <packThe6Floats+0xe0>
	}
}
 8001e24:	bf00      	nop
 8001e26:	bf00      	nop
 8001e28:	3724      	adds	r7, #36	; 0x24
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e30:	4770      	bx	lr
 8001e32:	bf00      	nop
 8001e34:	20000188 	.word	0x20000188
 8001e38:	200001ac 	.word	0x200001ac
 8001e3c:	20000190 	.word	0x20000190
 8001e40:	20000198 	.word	0x20000198
 8001e44:	200001a0 	.word	0x200001a0
 8001e48:	200001a4 	.word	0x200001a4
 8001e4c:	200001a8 	.word	0x200001a8

08001e50 <sendPositionAndVelocity>:

void sendPositionAndVelocity() {
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
	if (spamCheckX != posX || spamCheckY != posY || spamCheckPhi != posPhi) {
 8001e54:	4b20      	ldr	r3, [pc, #128]	; (8001ed8 <sendPositionAndVelocity+0x88>)
 8001e56:	ed93 7a00 	vldr	s14, [r3]
 8001e5a:	4b20      	ldr	r3, [pc, #128]	; (8001edc <sendPositionAndVelocity+0x8c>)
 8001e5c:	edd3 7a00 	vldr	s15, [r3]
 8001e60:	eeb4 7a67 	vcmp.f32	s14, s15
 8001e64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e68:	d115      	bne.n	8001e96 <sendPositionAndVelocity+0x46>
 8001e6a:	4b1d      	ldr	r3, [pc, #116]	; (8001ee0 <sendPositionAndVelocity+0x90>)
 8001e6c:	ed93 7a00 	vldr	s14, [r3]
 8001e70:	4b1c      	ldr	r3, [pc, #112]	; (8001ee4 <sendPositionAndVelocity+0x94>)
 8001e72:	edd3 7a00 	vldr	s15, [r3]
 8001e76:	eeb4 7a67 	vcmp.f32	s14, s15
 8001e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e7e:	d10a      	bne.n	8001e96 <sendPositionAndVelocity+0x46>
 8001e80:	4b19      	ldr	r3, [pc, #100]	; (8001ee8 <sendPositionAndVelocity+0x98>)
 8001e82:	ed93 7a00 	vldr	s14, [r3]
 8001e86:	4b19      	ldr	r3, [pc, #100]	; (8001eec <sendPositionAndVelocity+0x9c>)
 8001e88:	edd3 7a00 	vldr	s15, [r3]
 8001e8c:	eeb4 7a67 	vcmp.f32	s14, s15
 8001e90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e94:	d01e      	beq.n	8001ed4 <sendPositionAndVelocity+0x84>
		spamCheckX = posX;
 8001e96:	4b11      	ldr	r3, [pc, #68]	; (8001edc <sendPositionAndVelocity+0x8c>)
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	4a0f      	ldr	r2, [pc, #60]	; (8001ed8 <sendPositionAndVelocity+0x88>)
 8001e9c:	6013      	str	r3, [r2, #0]
		spamCheckY = posY;
 8001e9e:	4b11      	ldr	r3, [pc, #68]	; (8001ee4 <sendPositionAndVelocity+0x94>)
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	4a0f      	ldr	r2, [pc, #60]	; (8001ee0 <sendPositionAndVelocity+0x90>)
 8001ea4:	6013      	str	r3, [r2, #0]
		spamCheckPhi = posPhi;
 8001ea6:	4b11      	ldr	r3, [pc, #68]	; (8001eec <sendPositionAndVelocity+0x9c>)
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	4a0f      	ldr	r2, [pc, #60]	; (8001ee8 <sendPositionAndVelocity+0x98>)
 8001eac:	6013      	str	r3, [r2, #0]
		packThe6Floats();
 8001eae:	f7ff ff39 	bl	8001d24 <packThe6Floats>
		memset(packedMotorData, 0, sizeof(packedMotorData));
 8001eb2:	2232      	movs	r2, #50	; 0x32
 8001eb4:	2100      	movs	r1, #0
 8001eb6:	480e      	ldr	r0, [pc, #56]	; (8001ef0 <sendPositionAndVelocity+0xa0>)
 8001eb8:	f005 ff50 	bl	8007d5c <memset>

		to_frame(packedMotorData, position, 3);
 8001ebc:	2203      	movs	r2, #3
 8001ebe:	490d      	ldr	r1, [pc, #52]	; (8001ef4 <sendPositionAndVelocity+0xa4>)
 8001ec0:	480b      	ldr	r0, [pc, #44]	; (8001ef0 <sendPositionAndVelocity+0xa0>)
 8001ec2:	f7fe ffcf 	bl	8000e64 <to_frame>
		HAL_UART_Transmit(&huart2, packedMotorData, sizeof(packedMotorData),
 8001ec6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8001eca:	2232      	movs	r2, #50	; 0x32
 8001ecc:	4908      	ldr	r1, [pc, #32]	; (8001ef0 <sendPositionAndVelocity+0xa0>)
 8001ece:	480a      	ldr	r0, [pc, #40]	; (8001ef8 <sendPositionAndVelocity+0xa8>)
 8001ed0:	f005 f942 	bl	8007158 <HAL_UART_Transmit>
		HAL_MAX_DELAY);
	}
}
 8001ed4:	bf00      	nop
 8001ed6:	bd80      	pop	{r7, pc}
 8001ed8:	2000014c 	.word	0x2000014c
 8001edc:	20000188 	.word	0x20000188
 8001ee0:	20000148 	.word	0x20000148
 8001ee4:	20000190 	.word	0x20000190
 8001ee8:	20000150 	.word	0x20000150
 8001eec:	20000198 	.word	0x20000198
 8001ef0:	20000154 	.word	0x20000154
 8001ef4:	200001ac 	.word	0x200001ac
 8001ef8:	200003ec 	.word	0x200003ec

08001efc <clockcheckRight>:
	c->Encoder->output = 0.0;
	c->Encoder->fineAdjustment = 0;
	c->Encoder->revolutions = 0;
}

void clockcheckRight() {
 8001efc:	b598      	push	{r3, r4, r7, lr}
 8001efe:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(motor_Right_clock_GPIO_Port, motor_Right_clock_Pin) == HAL_GPIO_ReadPin(Motor_counterclock_right_GPIO_Port,
 8001f00:	2101      	movs	r1, #1
 8001f02:	482a      	ldr	r0, [pc, #168]	; (8001fac <clockcheckRight+0xb0>)
 8001f04:	f002 fe02 	bl	8004b0c <HAL_GPIO_ReadPin>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	461c      	mov	r4, r3
 8001f0c:	2110      	movs	r1, #16
 8001f0e:	4827      	ldr	r0, [pc, #156]	; (8001fac <clockcheckRight+0xb0>)
 8001f10:	f002 fdfc 	bl	8004b0c <HAL_GPIO_ReadPin>
 8001f14:	4603      	mov	r3, r0
 8001f16:	429c      	cmp	r4, r3
 8001f18:	d122      	bne.n	8001f60 <clockcheckRight+0x64>
	Motor_counterclock_right_Pin)) {
		controllerR.motor->direction = -1;
 8001f1a:	4b25      	ldr	r3, [pc, #148]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f1c:	691b      	ldr	r3, [r3, #16]
 8001f1e:	22ff      	movs	r2, #255	; 0xff
 8001f20:	705a      	strb	r2, [r3, #1]
		controllerR.Encoder->fineAdjustment = abs((controllerR.Encoder->fineAdjustment + controllerR.motor->direction) % TOTAL_WHEEL_TICKS);
 8001f22:	4b23      	ldr	r3, [pc, #140]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f24:	695b      	ldr	r3, [r3, #20]
 8001f26:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001f2a:	461a      	mov	r2, r3
 8001f2c:	4b20      	ldr	r3, [pc, #128]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f2e:	691b      	ldr	r3, [r3, #16]
 8001f30:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8001f34:	441a      	add	r2, r3
 8001f36:	4b1f      	ldr	r3, [pc, #124]	; (8001fb4 <clockcheckRight+0xb8>)
 8001f38:	fb83 1302 	smull	r1, r3, r3, r2
 8001f3c:	4413      	add	r3, r2
 8001f3e:	1299      	asrs	r1, r3, #10
 8001f40:	17d3      	asrs	r3, r2, #31
 8001f42:	1ac9      	subs	r1, r1, r3
 8001f44:	460b      	mov	r3, r1
 8001f46:	011b      	lsls	r3, r3, #4
 8001f48:	1a5b      	subs	r3, r3, r1
 8001f4a:	01db      	lsls	r3, r3, #7
 8001f4c:	1ad1      	subs	r1, r2, r3
 8001f4e:	ea81 72e1 	eor.w	r2, r1, r1, asr #31
 8001f52:	eba2 72e1 	sub.w	r2, r2, r1, asr #31
 8001f56:	4b16      	ldr	r3, [pc, #88]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f58:	695b      	ldr	r3, [r3, #20]
 8001f5a:	b212      	sxth	r2, r2
 8001f5c:	811a      	strh	r2, [r3, #8]
 8001f5e:	e020      	b.n	8001fa2 <clockcheckRight+0xa6>
	} else {
		controllerR.motor->direction = 1;
 8001f60:	4b13      	ldr	r3, [pc, #76]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f62:	691b      	ldr	r3, [r3, #16]
 8001f64:	2201      	movs	r2, #1
 8001f66:	705a      	strb	r2, [r3, #1]
		controllerR.Encoder->fineAdjustment = abs((controllerR.Encoder->fineAdjustment + controllerR.motor->direction) % (TOTAL_WHEEL_TICKS + 1));
 8001f68:	4b11      	ldr	r3, [pc, #68]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f6a:	695b      	ldr	r3, [r3, #20]
 8001f6c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001f70:	461a      	mov	r2, r3
 8001f72:	4b0f      	ldr	r3, [pc, #60]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f74:	691b      	ldr	r3, [r3, #16]
 8001f76:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8001f7a:	18d1      	adds	r1, r2, r3
 8001f7c:	4b0e      	ldr	r3, [pc, #56]	; (8001fb8 <clockcheckRight+0xbc>)
 8001f7e:	fb83 2301 	smull	r2, r3, r3, r1
 8001f82:	115a      	asrs	r2, r3, #5
 8001f84:	17cb      	asrs	r3, r1, #31
 8001f86:	1ad2      	subs	r2, r2, r3
 8001f88:	4613      	mov	r3, r2
 8001f8a:	011b      	lsls	r3, r3, #4
 8001f8c:	1a9b      	subs	r3, r3, r2
 8001f8e:	01db      	lsls	r3, r3, #7
 8001f90:	4413      	add	r3, r2
 8001f92:	1aca      	subs	r2, r1, r3
 8001f94:	2a00      	cmp	r2, #0
 8001f96:	bfb8      	it	lt
 8001f98:	4252      	neglt	r2, r2
 8001f9a:	4b05      	ldr	r3, [pc, #20]	; (8001fb0 <clockcheckRight+0xb4>)
 8001f9c:	695b      	ldr	r3, [r3, #20]
 8001f9e:	b212      	sxth	r2, r2
 8001fa0:	811a      	strh	r2, [r3, #8]
	}

	checkRevolutions(&controllerR);
 8001fa2:	4803      	ldr	r0, [pc, #12]	; (8001fb0 <clockcheckRight+0xb4>)
 8001fa4:	f000 f92e 	bl	8002204 <checkRevolutions>
}
 8001fa8:	bf00      	nop
 8001faa:	bd98      	pop	{r3, r4, r7, pc}
 8001fac:	48000400 	.word	0x48000400
 8001fb0:	2000033c 	.word	0x2000033c
 8001fb4:	88888889 	.word	0x88888889
 8001fb8:	0443b2b5 	.word	0x0443b2b5

08001fbc <counterclockcheckRight>:

void counterclockcheckRight() {
 8001fbc:	b598      	push	{r3, r4, r7, lr}
 8001fbe:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(motor_Right_clock_GPIO_Port, motor_Right_clock_Pin) == HAL_GPIO_ReadPin(Motor_counterclock_right_GPIO_Port,
 8001fc0:	2101      	movs	r1, #1
 8001fc2:	482a      	ldr	r0, [pc, #168]	; (800206c <counterclockcheckRight+0xb0>)
 8001fc4:	f002 fda2 	bl	8004b0c <HAL_GPIO_ReadPin>
 8001fc8:	4603      	mov	r3, r0
 8001fca:	461c      	mov	r4, r3
 8001fcc:	2110      	movs	r1, #16
 8001fce:	4827      	ldr	r0, [pc, #156]	; (800206c <counterclockcheckRight+0xb0>)
 8001fd0:	f002 fd9c 	bl	8004b0c <HAL_GPIO_ReadPin>
 8001fd4:	4603      	mov	r3, r0
 8001fd6:	429c      	cmp	r4, r3
 8001fd8:	d121      	bne.n	800201e <counterclockcheckRight+0x62>
	Motor_counterclock_right_Pin)) {
		controllerR.motor->direction = 1;
 8001fda:	4b25      	ldr	r3, [pc, #148]	; (8002070 <counterclockcheckRight+0xb4>)
 8001fdc:	691b      	ldr	r3, [r3, #16]
 8001fde:	2201      	movs	r2, #1
 8001fe0:	705a      	strb	r2, [r3, #1]
		controllerR.Encoder->fineAdjustment = abs((controllerR.Encoder->fineAdjustment + controllerR.motor->direction) % (TOTAL_WHEEL_TICKS + 1));
 8001fe2:	4b23      	ldr	r3, [pc, #140]	; (8002070 <counterclockcheckRight+0xb4>)
 8001fe4:	695b      	ldr	r3, [r3, #20]
 8001fe6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8001fea:	461a      	mov	r2, r3
 8001fec:	4b20      	ldr	r3, [pc, #128]	; (8002070 <counterclockcheckRight+0xb4>)
 8001fee:	691b      	ldr	r3, [r3, #16]
 8001ff0:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8001ff4:	18d1      	adds	r1, r2, r3
 8001ff6:	4b1f      	ldr	r3, [pc, #124]	; (8002074 <counterclockcheckRight+0xb8>)
 8001ff8:	fb83 2301 	smull	r2, r3, r3, r1
 8001ffc:	115a      	asrs	r2, r3, #5
 8001ffe:	17cb      	asrs	r3, r1, #31
 8002000:	1ad2      	subs	r2, r2, r3
 8002002:	4613      	mov	r3, r2
 8002004:	011b      	lsls	r3, r3, #4
 8002006:	1a9b      	subs	r3, r3, r2
 8002008:	01db      	lsls	r3, r3, #7
 800200a:	4413      	add	r3, r2
 800200c:	1aca      	subs	r2, r1, r3
 800200e:	2a00      	cmp	r2, #0
 8002010:	bfb8      	it	lt
 8002012:	4252      	neglt	r2, r2
 8002014:	4b16      	ldr	r3, [pc, #88]	; (8002070 <counterclockcheckRight+0xb4>)
 8002016:	695b      	ldr	r3, [r3, #20]
 8002018:	b212      	sxth	r2, r2
 800201a:	811a      	strh	r2, [r3, #8]
 800201c:	e021      	b.n	8002062 <counterclockcheckRight+0xa6>
	} else {
		controllerR.motor->direction = -1;
 800201e:	4b14      	ldr	r3, [pc, #80]	; (8002070 <counterclockcheckRight+0xb4>)
 8002020:	691b      	ldr	r3, [r3, #16]
 8002022:	22ff      	movs	r2, #255	; 0xff
 8002024:	705a      	strb	r2, [r3, #1]
		controllerR.Encoder->fineAdjustment = abs((controllerR.Encoder->fineAdjustment + controllerR.motor->direction) % TOTAL_WHEEL_TICKS);
 8002026:	4b12      	ldr	r3, [pc, #72]	; (8002070 <counterclockcheckRight+0xb4>)
 8002028:	695b      	ldr	r3, [r3, #20]
 800202a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800202e:	461a      	mov	r2, r3
 8002030:	4b0f      	ldr	r3, [pc, #60]	; (8002070 <counterclockcheckRight+0xb4>)
 8002032:	691b      	ldr	r3, [r3, #16]
 8002034:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8002038:	441a      	add	r2, r3
 800203a:	4b0f      	ldr	r3, [pc, #60]	; (8002078 <counterclockcheckRight+0xbc>)
 800203c:	fb83 1302 	smull	r1, r3, r3, r2
 8002040:	4413      	add	r3, r2
 8002042:	1299      	asrs	r1, r3, #10
 8002044:	17d3      	asrs	r3, r2, #31
 8002046:	1ac9      	subs	r1, r1, r3
 8002048:	460b      	mov	r3, r1
 800204a:	011b      	lsls	r3, r3, #4
 800204c:	1a5b      	subs	r3, r3, r1
 800204e:	01db      	lsls	r3, r3, #7
 8002050:	1ad1      	subs	r1, r2, r3
 8002052:	ea81 72e1 	eor.w	r2, r1, r1, asr #31
 8002056:	eba2 72e1 	sub.w	r2, r2, r1, asr #31
 800205a:	4b05      	ldr	r3, [pc, #20]	; (8002070 <counterclockcheckRight+0xb4>)
 800205c:	695b      	ldr	r3, [r3, #20]
 800205e:	b212      	sxth	r2, r2
 8002060:	811a      	strh	r2, [r3, #8]
	}

	checkRevolutions(&controllerR);
 8002062:	4803      	ldr	r0, [pc, #12]	; (8002070 <counterclockcheckRight+0xb4>)
 8002064:	f000 f8ce 	bl	8002204 <checkRevolutions>
}
 8002068:	bf00      	nop
 800206a:	bd98      	pop	{r3, r4, r7, pc}
 800206c:	48000400 	.word	0x48000400
 8002070:	2000033c 	.word	0x2000033c
 8002074:	0443b2b5 	.word	0x0443b2b5
 8002078:	88888889 	.word	0x88888889

0800207c <clockcheckLeft>:

void clockcheckLeft() {
 800207c:	b598      	push	{r3, r4, r7, lr}
 800207e:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(Motor_Left_clock_GPIO_Port, Motor_Left_clock_Pin) == HAL_GPIO_ReadPin(Motor_left_counterclock_GPIO_Port,
 8002080:	2120      	movs	r1, #32
 8002082:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002086:	f002 fd41 	bl	8004b0c <HAL_GPIO_ReadPin>
 800208a:	4603      	mov	r3, r0
 800208c:	461c      	mov	r4, r3
 800208e:	2102      	movs	r1, #2
 8002090:	4827      	ldr	r0, [pc, #156]	; (8002130 <clockcheckLeft+0xb4>)
 8002092:	f002 fd3b 	bl	8004b0c <HAL_GPIO_ReadPin>
 8002096:	4603      	mov	r3, r0
 8002098:	429c      	cmp	r4, r3
 800209a:	d122      	bne.n	80020e2 <clockcheckLeft+0x66>
	Motor_left_counterclock_Pin)) {
		controllerL.motor->direction = -1;
 800209c:	4b25      	ldr	r3, [pc, #148]	; (8002134 <clockcheckLeft+0xb8>)
 800209e:	691b      	ldr	r3, [r3, #16]
 80020a0:	22ff      	movs	r2, #255	; 0xff
 80020a2:	705a      	strb	r2, [r3, #1]
		controllerL.Encoder->fineAdjustment = abs((controllerL.Encoder->fineAdjustment + controllerL.motor->direction) % TOTAL_WHEEL_TICKS);
 80020a4:	4b23      	ldr	r3, [pc, #140]	; (8002134 <clockcheckLeft+0xb8>)
 80020a6:	695b      	ldr	r3, [r3, #20]
 80020a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80020ac:	461a      	mov	r2, r3
 80020ae:	4b21      	ldr	r3, [pc, #132]	; (8002134 <clockcheckLeft+0xb8>)
 80020b0:	691b      	ldr	r3, [r3, #16]
 80020b2:	f993 3001 	ldrsb.w	r3, [r3, #1]
 80020b6:	441a      	add	r2, r3
 80020b8:	4b1f      	ldr	r3, [pc, #124]	; (8002138 <clockcheckLeft+0xbc>)
 80020ba:	fb83 1302 	smull	r1, r3, r3, r2
 80020be:	4413      	add	r3, r2
 80020c0:	1299      	asrs	r1, r3, #10
 80020c2:	17d3      	asrs	r3, r2, #31
 80020c4:	1ac9      	subs	r1, r1, r3
 80020c6:	460b      	mov	r3, r1
 80020c8:	011b      	lsls	r3, r3, #4
 80020ca:	1a5b      	subs	r3, r3, r1
 80020cc:	01db      	lsls	r3, r3, #7
 80020ce:	1ad1      	subs	r1, r2, r3
 80020d0:	ea81 72e1 	eor.w	r2, r1, r1, asr #31
 80020d4:	eba2 72e1 	sub.w	r2, r2, r1, asr #31
 80020d8:	4b16      	ldr	r3, [pc, #88]	; (8002134 <clockcheckLeft+0xb8>)
 80020da:	695b      	ldr	r3, [r3, #20]
 80020dc:	b212      	sxth	r2, r2
 80020de:	811a      	strh	r2, [r3, #8]
 80020e0:	e020      	b.n	8002124 <clockcheckLeft+0xa8>
	} else {
		controllerL.motor->direction = 1;
 80020e2:	4b14      	ldr	r3, [pc, #80]	; (8002134 <clockcheckLeft+0xb8>)
 80020e4:	691b      	ldr	r3, [r3, #16]
 80020e6:	2201      	movs	r2, #1
 80020e8:	705a      	strb	r2, [r3, #1]
		controllerL.Encoder->fineAdjustment = abs((controllerL.Encoder->fineAdjustment + controllerL.motor->direction) % (TOTAL_WHEEL_TICKS + 1));
 80020ea:	4b12      	ldr	r3, [pc, #72]	; (8002134 <clockcheckLeft+0xb8>)
 80020ec:	695b      	ldr	r3, [r3, #20]
 80020ee:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80020f2:	461a      	mov	r2, r3
 80020f4:	4b0f      	ldr	r3, [pc, #60]	; (8002134 <clockcheckLeft+0xb8>)
 80020f6:	691b      	ldr	r3, [r3, #16]
 80020f8:	f993 3001 	ldrsb.w	r3, [r3, #1]
 80020fc:	18d1      	adds	r1, r2, r3
 80020fe:	4b0f      	ldr	r3, [pc, #60]	; (800213c <clockcheckLeft+0xc0>)
 8002100:	fb83 2301 	smull	r2, r3, r3, r1
 8002104:	115a      	asrs	r2, r3, #5
 8002106:	17cb      	asrs	r3, r1, #31
 8002108:	1ad2      	subs	r2, r2, r3
 800210a:	4613      	mov	r3, r2
 800210c:	011b      	lsls	r3, r3, #4
 800210e:	1a9b      	subs	r3, r3, r2
 8002110:	01db      	lsls	r3, r3, #7
 8002112:	4413      	add	r3, r2
 8002114:	1aca      	subs	r2, r1, r3
 8002116:	2a00      	cmp	r2, #0
 8002118:	bfb8      	it	lt
 800211a:	4252      	neglt	r2, r2
 800211c:	4b05      	ldr	r3, [pc, #20]	; (8002134 <clockcheckLeft+0xb8>)
 800211e:	695b      	ldr	r3, [r3, #20]
 8002120:	b212      	sxth	r2, r2
 8002122:	811a      	strh	r2, [r3, #8]
	}

	checkRevolutions(&controllerL);
 8002124:	4803      	ldr	r0, [pc, #12]	; (8002134 <clockcheckLeft+0xb8>)
 8002126:	f000 f86d 	bl	8002204 <checkRevolutions>
}
 800212a:	bf00      	nop
 800212c:	bd98      	pop	{r3, r4, r7, pc}
 800212e:	bf00      	nop
 8002130:	48000400 	.word	0x48000400
 8002134:	20000270 	.word	0x20000270
 8002138:	88888889 	.word	0x88888889
 800213c:	0443b2b5 	.word	0x0443b2b5

08002140 <counterclockcheckLeft>:

void counterclockcheckLeft() {
 8002140:	b598      	push	{r3, r4, r7, lr}
 8002142:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(Motor_Left_clock_GPIO_Port, Motor_Left_clock_Pin) == HAL_GPIO_ReadPin(Motor_left_counterclock_GPIO_Port,
 8002144:	2120      	movs	r1, #32
 8002146:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800214a:	f002 fcdf 	bl	8004b0c <HAL_GPIO_ReadPin>
 800214e:	4603      	mov	r3, r0
 8002150:	461c      	mov	r4, r3
 8002152:	2102      	movs	r1, #2
 8002154:	4827      	ldr	r0, [pc, #156]	; (80021f4 <counterclockcheckLeft+0xb4>)
 8002156:	f002 fcd9 	bl	8004b0c <HAL_GPIO_ReadPin>
 800215a:	4603      	mov	r3, r0
 800215c:	429c      	cmp	r4, r3
 800215e:	d121      	bne.n	80021a4 <counterclockcheckLeft+0x64>
	Motor_left_counterclock_Pin)) {
		controllerL.motor->direction = 1;
 8002160:	4b25      	ldr	r3, [pc, #148]	; (80021f8 <counterclockcheckLeft+0xb8>)
 8002162:	691b      	ldr	r3, [r3, #16]
 8002164:	2201      	movs	r2, #1
 8002166:	705a      	strb	r2, [r3, #1]
		controllerL.Encoder->fineAdjustment = abs((controllerL.Encoder->fineAdjustment + controllerL.motor->direction) % (TOTAL_WHEEL_TICKS + 1));
 8002168:	4b23      	ldr	r3, [pc, #140]	; (80021f8 <counterclockcheckLeft+0xb8>)
 800216a:	695b      	ldr	r3, [r3, #20]
 800216c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002170:	461a      	mov	r2, r3
 8002172:	4b21      	ldr	r3, [pc, #132]	; (80021f8 <counterclockcheckLeft+0xb8>)
 8002174:	691b      	ldr	r3, [r3, #16]
 8002176:	f993 3001 	ldrsb.w	r3, [r3, #1]
 800217a:	18d1      	adds	r1, r2, r3
 800217c:	4b1f      	ldr	r3, [pc, #124]	; (80021fc <counterclockcheckLeft+0xbc>)
 800217e:	fb83 2301 	smull	r2, r3, r3, r1
 8002182:	115a      	asrs	r2, r3, #5
 8002184:	17cb      	asrs	r3, r1, #31
 8002186:	1ad2      	subs	r2, r2, r3
 8002188:	4613      	mov	r3, r2
 800218a:	011b      	lsls	r3, r3, #4
 800218c:	1a9b      	subs	r3, r3, r2
 800218e:	01db      	lsls	r3, r3, #7
 8002190:	4413      	add	r3, r2
 8002192:	1aca      	subs	r2, r1, r3
 8002194:	2a00      	cmp	r2, #0
 8002196:	bfb8      	it	lt
 8002198:	4252      	neglt	r2, r2
 800219a:	4b17      	ldr	r3, [pc, #92]	; (80021f8 <counterclockcheckLeft+0xb8>)
 800219c:	695b      	ldr	r3, [r3, #20]
 800219e:	b212      	sxth	r2, r2
 80021a0:	811a      	strh	r2, [r3, #8]
 80021a2:	e021      	b.n	80021e8 <counterclockcheckLeft+0xa8>
	} else {
		controllerL.motor->direction = -1;
 80021a4:	4b14      	ldr	r3, [pc, #80]	; (80021f8 <counterclockcheckLeft+0xb8>)
 80021a6:	691b      	ldr	r3, [r3, #16]
 80021a8:	22ff      	movs	r2, #255	; 0xff
 80021aa:	705a      	strb	r2, [r3, #1]
		controllerL.Encoder->fineAdjustment = abs((controllerL.Encoder->fineAdjustment + controllerL.motor->direction) % TOTAL_WHEEL_TICKS);
 80021ac:	4b12      	ldr	r3, [pc, #72]	; (80021f8 <counterclockcheckLeft+0xb8>)
 80021ae:	695b      	ldr	r3, [r3, #20]
 80021b0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80021b4:	461a      	mov	r2, r3
 80021b6:	4b10      	ldr	r3, [pc, #64]	; (80021f8 <counterclockcheckLeft+0xb8>)
 80021b8:	691b      	ldr	r3, [r3, #16]
 80021ba:	f993 3001 	ldrsb.w	r3, [r3, #1]
 80021be:	441a      	add	r2, r3
 80021c0:	4b0f      	ldr	r3, [pc, #60]	; (8002200 <counterclockcheckLeft+0xc0>)
 80021c2:	fb83 1302 	smull	r1, r3, r3, r2
 80021c6:	4413      	add	r3, r2
 80021c8:	1299      	asrs	r1, r3, #10
 80021ca:	17d3      	asrs	r3, r2, #31
 80021cc:	1ac9      	subs	r1, r1, r3
 80021ce:	460b      	mov	r3, r1
 80021d0:	011b      	lsls	r3, r3, #4
 80021d2:	1a5b      	subs	r3, r3, r1
 80021d4:	01db      	lsls	r3, r3, #7
 80021d6:	1ad1      	subs	r1, r2, r3
 80021d8:	ea81 72e1 	eor.w	r2, r1, r1, asr #31
 80021dc:	eba2 72e1 	sub.w	r2, r2, r1, asr #31
 80021e0:	4b05      	ldr	r3, [pc, #20]	; (80021f8 <counterclockcheckLeft+0xb8>)
 80021e2:	695b      	ldr	r3, [r3, #20]
 80021e4:	b212      	sxth	r2, r2
 80021e6:	811a      	strh	r2, [r3, #8]
	}

	checkRevolutions(&controllerL);
 80021e8:	4803      	ldr	r0, [pc, #12]	; (80021f8 <counterclockcheckLeft+0xb8>)
 80021ea:	f000 f80b 	bl	8002204 <checkRevolutions>
}
 80021ee:	bf00      	nop
 80021f0:	bd98      	pop	{r3, r4, r7, pc}
 80021f2:	bf00      	nop
 80021f4:	48000400 	.word	0x48000400
 80021f8:	20000270 	.word	0x20000270
 80021fc:	0443b2b5 	.word	0x0443b2b5
 8002200:	88888889 	.word	0x88888889

08002204 <checkRevolutions>:

void checkRevolutions(MotorController *c) {
 8002204:	b480      	push	{r7}
 8002206:	b083      	sub	sp, #12
 8002208:	af00      	add	r7, sp, #0
 800220a:	6078      	str	r0, [r7, #4]
	if (c->Encoder->fineAdjustment == 0 && c->motor->direction == 1) {
 800220c:	687b      	ldr	r3, [r7, #4]
 800220e:	695b      	ldr	r3, [r3, #20]
 8002210:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8002214:	2b00      	cmp	r3, #0
 8002216:	d116      	bne.n	8002246 <checkRevolutions+0x42>
 8002218:	687b      	ldr	r3, [r7, #4]
 800221a:	691b      	ldr	r3, [r3, #16]
 800221c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8002220:	2b01      	cmp	r3, #1
 8002222:	d110      	bne.n	8002246 <checkRevolutions+0x42>
		c->Encoder->revolutions = c->Encoder->revolutions + c->motor->direction;
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	695b      	ldr	r3, [r3, #20]
 8002228:	68da      	ldr	r2, [r3, #12]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	691b      	ldr	r3, [r3, #16]
 800222e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8002232:	4619      	mov	r1, r3
 8002234:	687b      	ldr	r3, [r7, #4]
 8002236:	695b      	ldr	r3, [r3, #20]
 8002238:	440a      	add	r2, r1
 800223a:	60da      	str	r2, [r3, #12]
		c->Encoder->fineAdjustment = 1;
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	695b      	ldr	r3, [r3, #20]
 8002240:	2201      	movs	r2, #1
 8002242:	811a      	strh	r2, [r3, #8]
	 fineadjustmentRight = 1;
	 } else if (fineadjustmentRight == 0 && directionRight == -1) {
	 revolutionRight = revolutionRight + directionRight;
	 fineadjustmentRight = TOTAL_WHEEL_TICKS;
	 }*/
}
 8002244:	e01d      	b.n	8002282 <checkRevolutions+0x7e>
	} else if (c->Encoder->fineAdjustment == 0 && c->motor->direction == -1) {
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	695b      	ldr	r3, [r3, #20]
 800224a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800224e:	2b00      	cmp	r3, #0
 8002250:	d117      	bne.n	8002282 <checkRevolutions+0x7e>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	691b      	ldr	r3, [r3, #16]
 8002256:	f993 3001 	ldrsb.w	r3, [r3, #1]
 800225a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 800225e:	d110      	bne.n	8002282 <checkRevolutions+0x7e>
		c->Encoder->revolutions = c->Encoder->revolutions + c->motor->direction;
 8002260:	687b      	ldr	r3, [r7, #4]
 8002262:	695b      	ldr	r3, [r3, #20]
 8002264:	68da      	ldr	r2, [r3, #12]
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	691b      	ldr	r3, [r3, #16]
 800226a:	f993 3001 	ldrsb.w	r3, [r3, #1]
 800226e:	4619      	mov	r1, r3
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	695b      	ldr	r3, [r3, #20]
 8002274:	440a      	add	r2, r1
 8002276:	60da      	str	r2, [r3, #12]
		c->Encoder->fineAdjustment = TOTAL_WHEEL_TICKS;
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	695b      	ldr	r3, [r3, #20]
 800227c:	f44f 62f0 	mov.w	r2, #1920	; 0x780
 8002280:	811a      	strh	r2, [r3, #8]
}
 8002282:	bf00      	nop
 8002284:	370c      	adds	r7, #12
 8002286:	46bd      	mov	sp, r7
 8002288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800228c:	4770      	bx	lr
	...

08002290 <calcOutput>:

void calcOutput(MotorEncoder *e) {
 8002290:	b480      	push	{r7}
 8002292:	b083      	sub	sp, #12
 8002294:	af00      	add	r7, sp, #0
 8002296:	6078      	str	r0, [r7, #4]
	e->output = e->revolutions + ((float) e->fineAdjustment / TOTAL_WHEEL_TICKS);
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	68db      	ldr	r3, [r3, #12]
 800229c:	ee07 3a90 	vmov	s15, r3
 80022a0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80022aa:	ee07 3a90 	vmov	s15, r3
 80022ae:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80022b2:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80022d0 <calcOutput+0x40>
 80022b6:	eec6 7a86 	vdiv.f32	s15, s13, s12
 80022ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	edc3 7a04 	vstr	s15, [r3, #16]
}
 80022c4:	bf00      	nop
 80022c6:	370c      	adds	r7, #12
 80022c8:	46bd      	mov	sp, r7
 80022ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ce:	4770      	bx	lr
 80022d0:	44f00000 	.word	0x44f00000

080022d4 <calculateError>:

void calculateError(MotorController *c) {
 80022d4:	b480      	push	{r7}
 80022d6:	b083      	sub	sp, #12
 80022d8:	af00      	add	r7, sp, #0
 80022da:	6078      	str	r0, [r7, #4]
	c->lastError = c->reference - c->measAngVel;
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	ed93 7a00 	vldr	s14, [r3]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	edd3 7a01 	vldr	s15, [r3, #4]
 80022e8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	edc3 7a02 	vstr	s15, [r3, #8]
}
 80022f2:	bf00      	nop
 80022f4:	370c      	adds	r7, #12
 80022f6:	46bd      	mov	sp, r7
 80022f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022fc:	4770      	bx	lr
	...

08002300 <nextVoltage>:

void nextVoltage(MotorController *c) {
 8002300:	b5b0      	push	{r4, r5, r7, lr}
 8002302:	b082      	sub	sp, #8
 8002304:	af00      	add	r7, sp, #0
 8002306:	6078      	str	r0, [r7, #4]
//	if (c->reference = 0.0 && c->voltage < MOTOR_VOLTAGE_STALL) {
//		c->voltage = 0.0;
//		return;
//	}

	c->voltage = c->lastError * 2.82 * controllerPeriod + c->voltage;
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	689b      	ldr	r3, [r3, #8]
 800230c:	4618      	mov	r0, r3
 800230e:	f7fe f8c3 	bl	8000498 <__aeabi_f2d>
 8002312:	a32a      	add	r3, pc, #168	; (adr r3, 80023bc <nextVoltage+0xbc>)
 8002314:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002318:	f7fe f916 	bl	8000548 <__aeabi_dmul>
 800231c:	4602      	mov	r2, r0
 800231e:	460b      	mov	r3, r1
 8002320:	4614      	mov	r4, r2
 8002322:	461d      	mov	r5, r3
 8002324:	4b22      	ldr	r3, [pc, #136]	; (80023b0 <nextVoltage+0xb0>)
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	4618      	mov	r0, r3
 800232a:	f7fe f8b5 	bl	8000498 <__aeabi_f2d>
 800232e:	4602      	mov	r2, r0
 8002330:	460b      	mov	r3, r1
 8002332:	4620      	mov	r0, r4
 8002334:	4629      	mov	r1, r5
 8002336:	f7fe f907 	bl	8000548 <__aeabi_dmul>
 800233a:	4602      	mov	r2, r0
 800233c:	460b      	mov	r3, r1
 800233e:	4614      	mov	r4, r2
 8002340:	461d      	mov	r5, r3
 8002342:	687b      	ldr	r3, [r7, #4]
 8002344:	68db      	ldr	r3, [r3, #12]
 8002346:	4618      	mov	r0, r3
 8002348:	f7fe f8a6 	bl	8000498 <__aeabi_f2d>
 800234c:	4602      	mov	r2, r0
 800234e:	460b      	mov	r3, r1
 8002350:	4620      	mov	r0, r4
 8002352:	4629      	mov	r1, r5
 8002354:	f7fd ff42 	bl	80001dc <__adddf3>
 8002358:	4602      	mov	r2, r0
 800235a:	460b      	mov	r3, r1
 800235c:	4610      	mov	r0, r2
 800235e:	4619      	mov	r1, r3
 8002360:	f7fe fbb4 	bl	8000acc <__aeabi_d2f>
 8002364:	4602      	mov	r2, r0
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	60da      	str	r2, [r3, #12]
	if (c->voltage > MOTOR_VOLTAGE_MAX) {
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	edd3 7a03 	vldr	s15, [r3, #12]
 8002370:	eeb2 7a0a 	vmov.f32	s14, #42	; 0x41500000  13.0
 8002374:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800237c:	dd03      	ble.n	8002386 <nextVoltage+0x86>
		c->voltage = MOTOR_VOLTAGE_MAX;
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	4a0c      	ldr	r2, [pc, #48]	; (80023b4 <nextVoltage+0xb4>)
 8002382:	60da      	str	r2, [r3, #12]
	} else if (c->voltage < -MOTOR_VOLTAGE_MAX) {
		c->voltage = -MOTOR_VOLTAGE_MAX;
	}
}
 8002384:	e00d      	b.n	80023a2 <nextVoltage+0xa2>
	} else if (c->voltage < -MOTOR_VOLTAGE_MAX) {
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	edd3 7a03 	vldr	s15, [r3, #12]
 800238c:	eeba 7a0a 	vmov.f32	s14, #170	; 0xc1500000 -13.0
 8002390:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002398:	d400      	bmi.n	800239c <nextVoltage+0x9c>
}
 800239a:	e002      	b.n	80023a2 <nextVoltage+0xa2>
		c->voltage = -MOTOR_VOLTAGE_MAX;
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	4a06      	ldr	r2, [pc, #24]	; (80023b8 <nextVoltage+0xb8>)
 80023a0:	60da      	str	r2, [r3, #12]
}
 80023a2:	bf00      	nop
 80023a4:	3708      	adds	r7, #8
 80023a6:	46bd      	mov	sp, r7
 80023a8:	bdb0      	pop	{r4, r5, r7, pc}
 80023aa:	bf00      	nop
 80023ac:	f3af 8000 	nop.w
 80023b0:	200002ec 	.word	0x200002ec
 80023b4:	41500000 	.word	0x41500000
 80023b8:	c1500000 	.word	0xc1500000
 80023bc:	28f5c28f 	.word	0x28f5c28f
 80023c0:	40068f5c 	.word	0x40068f5c
 80023c4:	00000000 	.word	0x00000000

080023c8 <updateAngularVelocity>:

void updateAngularVelocity(MotorController *c) {
 80023c8:	b5b0      	push	{r4, r5, r7, lr}
 80023ca:	b084      	sub	sp, #16
 80023cc:	af00      	add	r7, sp, #0
 80023ce:	6078      	str	r0, [r7, #4]
	float deltaAngle = c->Encoder->output * 2 * M_PI - c->Encoder->lastAngle;
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	695b      	ldr	r3, [r3, #20]
 80023d4:	edd3 7a04 	vldr	s15, [r3, #16]
 80023d8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80023dc:	ee17 0a90 	vmov	r0, s15
 80023e0:	f7fe f85a 	bl	8000498 <__aeabi_f2d>
 80023e4:	a32b      	add	r3, pc, #172	; (adr r3, 8002494 <updateAngularVelocity+0xcc>)
 80023e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023ea:	f7fe f8ad 	bl	8000548 <__aeabi_dmul>
 80023ee:	4602      	mov	r2, r0
 80023f0:	460b      	mov	r3, r1
 80023f2:	4614      	mov	r4, r2
 80023f4:	461d      	mov	r5, r3
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	695b      	ldr	r3, [r3, #20]
 80023fa:	685b      	ldr	r3, [r3, #4]
 80023fc:	4618      	mov	r0, r3
 80023fe:	f7fe f84b 	bl	8000498 <__aeabi_f2d>
 8002402:	4602      	mov	r2, r0
 8002404:	460b      	mov	r3, r1
 8002406:	4620      	mov	r0, r4
 8002408:	4629      	mov	r1, r5
 800240a:	f7fd fee5 	bl	80001d8 <__aeabi_dsub>
 800240e:	4602      	mov	r2, r0
 8002410:	460b      	mov	r3, r1
 8002412:	4610      	mov	r0, r2
 8002414:	4619      	mov	r1, r3
 8002416:	f7fe fb59 	bl	8000acc <__aeabi_d2f>
 800241a:	4603      	mov	r3, r0
 800241c:	60fb      	str	r3, [r7, #12]
	c->Encoder->lastAngle = c->Encoder->output * 2 * M_PI;
 800241e:	687b      	ldr	r3, [r7, #4]
 8002420:	695b      	ldr	r3, [r3, #20]
 8002422:	edd3 7a04 	vldr	s15, [r3, #16]
 8002426:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800242a:	ee17 0a90 	vmov	r0, s15
 800242e:	f7fe f833 	bl	8000498 <__aeabi_f2d>
 8002432:	a318      	add	r3, pc, #96	; (adr r3, 8002494 <updateAngularVelocity+0xcc>)
 8002434:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002438:	f7fe f886 	bl	8000548 <__aeabi_dmul>
 800243c:	4602      	mov	r2, r0
 800243e:	460b      	mov	r3, r1
 8002440:	4610      	mov	r0, r2
 8002442:	4619      	mov	r1, r3
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	695c      	ldr	r4, [r3, #20]
 8002448:	f7fe fb40 	bl	8000acc <__aeabi_d2f>
 800244c:	4603      	mov	r3, r0
 800244e:	6063      	str	r3, [r4, #4]
	c->measAngVel = deltaAngle / controllerPeriod;
 8002450:	4b0f      	ldr	r3, [pc, #60]	; (8002490 <updateAngularVelocity+0xc8>)
 8002452:	ed93 7a00 	vldr	s14, [r3]
 8002456:	edd7 6a03 	vldr	s13, [r7, #12]
 800245a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	edc3 7a01 	vstr	s15, [r3, #4]

	if (abs(c->measAngVel) < MOTOR_ANGULAR_VELOCITY_MIN) {
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	685b      	ldr	r3, [r3, #4]
 8002468:	4618      	mov	r0, r3
 800246a:	f7fe f815 	bl	8000498 <__aeabi_f2d>
 800246e:	4602      	mov	r2, r0
 8002470:	460b      	mov	r3, r1
 8002472:	ec43 2b10 	vmov	d0, r2, r3
 8002476:	f005 fc3b 	bl	8007cf0 <abs>
 800247a:	4603      	mov	r3, r0
 800247c:	2b00      	cmp	r3, #0
 800247e:	dc03      	bgt.n	8002488 <updateAngularVelocity+0xc0>
		c->measAngVel = 0;
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	f04f 0200 	mov.w	r2, #0
 8002486:	605a      	str	r2, [r3, #4]
	}
}
 8002488:	bf00      	nop
 800248a:	3710      	adds	r7, #16
 800248c:	46bd      	mov	sp, r7
 800248e:	bdb0      	pop	{r4, r5, r7, pc}
 8002490:	200002ec 	.word	0x200002ec
 8002494:	54442d18 	.word	0x54442d18
 8002498:	400921fb 	.word	0x400921fb

0800249c <updateDutyCycle>:

void updateDutyCycle(MotorController *c) {
 800249c:	b480      	push	{r7}
 800249e:	b085      	sub	sp, #20
 80024a0:	af00      	add	r7, sp, #0
 80024a2:	6078      	str	r0, [r7, #4]
	if (c->voltage > 0) {
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	edd3 7a03 	vldr	s15, [r3, #12]
 80024aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80024ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024b2:	dd04      	ble.n	80024be <updateDutyCycle+0x22>
		c->motor->direction = 1;
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	691b      	ldr	r3, [r3, #16]
 80024b8:	2201      	movs	r2, #1
 80024ba:	705a      	strb	r2, [r3, #1]
 80024bc:	e012      	b.n	80024e4 <updateDutyCycle+0x48>
	} else if (c->voltage < 0) {
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	edd3 7a03 	vldr	s15, [r3, #12]
 80024c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80024c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80024cc:	d504      	bpl.n	80024d8 <updateDutyCycle+0x3c>
		c->motor->direction = -1;
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	691b      	ldr	r3, [r3, #16]
 80024d2:	22ff      	movs	r2, #255	; 0xff
 80024d4:	705a      	strb	r2, [r3, #1]
 80024d6:	e005      	b.n	80024e4 <updateDutyCycle+0x48>
	} else {
		c->motor->dutyCycle = 0;
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	691b      	ldr	r3, [r3, #16]
 80024dc:	f04f 0200 	mov.w	r2, #0
 80024e0:	605a      	str	r2, [r3, #4]
		return;
 80024e2:	e026      	b.n	8002532 <updateDutyCycle+0x96>
	}

	float pwm = c->voltage / batteryVoltage;
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	edd3 6a03 	vldr	s13, [r3, #12]
 80024ea:	4b14      	ldr	r3, [pc, #80]	; (800253c <updateDutyCycle+0xa0>)
 80024ec:	ed93 7a00 	vldr	s14, [r3]
 80024f0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80024f4:	edc7 7a03 	vstr	s15, [r7, #12]

	if (pwm < 0)
 80024f8:	edd7 7a03 	vldr	s15, [r7, #12]
 80024fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002500:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002504:	d505      	bpl.n	8002512 <updateDutyCycle+0x76>
		pwm = -pwm;
 8002506:	edd7 7a03 	vldr	s15, [r7, #12]
 800250a:	eef1 7a67 	vneg.f32	s15, s15
 800250e:	edc7 7a03 	vstr	s15, [r7, #12]
	if (pwm > 1.0)
 8002512:	edd7 7a03 	vldr	s15, [r7, #12]
 8002516:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800251a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800251e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002522:	dd02      	ble.n	800252a <updateDutyCycle+0x8e>
		pwm = 1.0;
 8002524:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8002528:	60fb      	str	r3, [r7, #12]
	c->motor->dutyCycle = pwm;
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	691b      	ldr	r3, [r3, #16]
 800252e:	68fa      	ldr	r2, [r7, #12]
 8002530:	605a      	str	r2, [r3, #4]
}
 8002532:	3714      	adds	r7, #20
 8002534:	46bd      	mov	sp, r7
 8002536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800253a:	4770      	bx	lr
 800253c:	20000144 	.word	0x20000144

08002540 <setDutyCycle>:

void setDutyCycle(MotorController *c) {
 8002540:	b580      	push	{r7, lr}
 8002542:	b082      	sub	sp, #8
 8002544:	af00      	add	r7, sp, #0
 8002546:	6078      	str	r0, [r7, #4]
	if (c->motor->name == 'R') {
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	691b      	ldr	r3, [r3, #16]
 800254c:	781b      	ldrb	r3, [r3, #0]
 800254e:	2b52      	cmp	r3, #82	; 0x52
 8002550:	d136      	bne.n	80025c0 <setDutyCycle+0x80>
		htim1.Instance->CCR1 = (uint32_t) ((htim1.Instance->ARR) * c->motor->dutyCycle);
 8002552:	4b3d      	ldr	r3, [pc, #244]	; (8002648 <setDutyCycle+0x108>)
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002558:	ee07 3a90 	vmov	s15, r3
 800255c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002560:	687b      	ldr	r3, [r7, #4]
 8002562:	691b      	ldr	r3, [r3, #16]
 8002564:	edd3 7a01 	vldr	s15, [r3, #4]
 8002568:	ee67 7a27 	vmul.f32	s15, s14, s15
 800256c:	4b36      	ldr	r3, [pc, #216]	; (8002648 <setDutyCycle+0x108>)
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002574:	ee17 2a90 	vmov	r2, s15
 8002578:	635a      	str	r2, [r3, #52]	; 0x34

		if (c->motor->direction == 1) {
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	691b      	ldr	r3, [r3, #16]
 800257e:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8002582:	2b01      	cmp	r3, #1
 8002584:	d10a      	bne.n	800259c <setDutyCycle+0x5c>
			HAL_GPIO_WritePin(DIR_R1_GPIO_Port, DIR_R1_Pin, 1);
 8002586:	2201      	movs	r2, #1
 8002588:	2140      	movs	r1, #64	; 0x40
 800258a:	4830      	ldr	r0, [pc, #192]	; (800264c <setDutyCycle+0x10c>)
 800258c:	f002 fad6 	bl	8004b3c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_R2_GPIO_Port, DIR_R2_Pin, 0);
 8002590:	2200      	movs	r2, #0
 8002592:	2180      	movs	r1, #128	; 0x80
 8002594:	482d      	ldr	r0, [pc, #180]	; (800264c <setDutyCycle+0x10c>)
 8002596:	f002 fad1 	bl	8004b3c <HAL_GPIO_WritePin>
 800259a:	e052      	b.n	8002642 <setDutyCycle+0x102>
		} else if (c->motor->direction == -1) {
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	691b      	ldr	r3, [r3, #16]
 80025a0:	f993 3001 	ldrsb.w	r3, [r3, #1]
 80025a4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80025a8:	d14b      	bne.n	8002642 <setDutyCycle+0x102>
			HAL_GPIO_WritePin(DIR_R1_GPIO_Port, DIR_R1_Pin, 0);
 80025aa:	2200      	movs	r2, #0
 80025ac:	2140      	movs	r1, #64	; 0x40
 80025ae:	4827      	ldr	r0, [pc, #156]	; (800264c <setDutyCycle+0x10c>)
 80025b0:	f002 fac4 	bl	8004b3c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_R2_GPIO_Port, DIR_R2_Pin, 1);
 80025b4:	2201      	movs	r2, #1
 80025b6:	2180      	movs	r1, #128	; 0x80
 80025b8:	4824      	ldr	r0, [pc, #144]	; (800264c <setDutyCycle+0x10c>)
 80025ba:	f002 fabf 	bl	8004b3c <HAL_GPIO_WritePin>
 80025be:	e040      	b.n	8002642 <setDutyCycle+0x102>
		} else {
			// MOTOR STOP
		}
	} else if (c->motor->name == 'L') {
 80025c0:	687b      	ldr	r3, [r7, #4]
 80025c2:	691b      	ldr	r3, [r3, #16]
 80025c4:	781b      	ldrb	r3, [r3, #0]
 80025c6:	2b4c      	cmp	r3, #76	; 0x4c
 80025c8:	d13a      	bne.n	8002640 <setDutyCycle+0x100>
		htim1.Instance->CCR2 = (uint32_t) ((htim1.Instance->ARR) * c->motor->dutyCycle);
 80025ca:	4b1f      	ldr	r3, [pc, #124]	; (8002648 <setDutyCycle+0x108>)
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025d0:	ee07 3a90 	vmov	s15, r3
 80025d4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	691b      	ldr	r3, [r3, #16]
 80025dc:	edd3 7a01 	vldr	s15, [r3, #4]
 80025e0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80025e4:	4b18      	ldr	r3, [pc, #96]	; (8002648 <setDutyCycle+0x108>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80025ec:	ee17 2a90 	vmov	r2, s15
 80025f0:	639a      	str	r2, [r3, #56]	; 0x38

		if (c->motor->direction == 1) {
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	691b      	ldr	r3, [r3, #16]
 80025f6:	f993 3001 	ldrsb.w	r3, [r3, #1]
 80025fa:	2b01      	cmp	r3, #1
 80025fc:	d10c      	bne.n	8002618 <setDutyCycle+0xd8>
			HAL_GPIO_WritePin(DIR_L1_GPIO_Port, DIR_L1_Pin, 1);
 80025fe:	2201      	movs	r2, #1
 8002600:	2140      	movs	r1, #64	; 0x40
 8002602:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002606:	f002 fa99 	bl	8004b3c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_L2_GPIO_Port, DIR_L2_Pin, 0);
 800260a:	2200      	movs	r2, #0
 800260c:	2180      	movs	r1, #128	; 0x80
 800260e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002612:	f002 fa93 	bl	8004b3c <HAL_GPIO_WritePin>
 8002616:	e014      	b.n	8002642 <setDutyCycle+0x102>
		} else if (c->motor->direction == -1) {
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	691b      	ldr	r3, [r3, #16]
 800261c:	f993 3001 	ldrsb.w	r3, [r3, #1]
 8002620:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8002624:	d10d      	bne.n	8002642 <setDutyCycle+0x102>
			HAL_GPIO_WritePin(DIR_L1_GPIO_Port, DIR_L1_Pin, 0);
 8002626:	2200      	movs	r2, #0
 8002628:	2140      	movs	r1, #64	; 0x40
 800262a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800262e:	f002 fa85 	bl	8004b3c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(DIR_L2_GPIO_Port, DIR_L2_Pin, 1);
 8002632:	2201      	movs	r2, #1
 8002634:	2180      	movs	r1, #128	; 0x80
 8002636:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800263a:	f002 fa7f 	bl	8004b3c <HAL_GPIO_WritePin>
 800263e:	e000      	b.n	8002642 <setDutyCycle+0x102>
		} else {
			// MOTOR STOP
		}
	} else {
		return;
 8002640:	bf00      	nop
	}
}
 8002642:	3708      	adds	r7, #8
 8002644:	46bd      	mov	sp, r7
 8002646:	bd80      	pop	{r7, pc}
 8002648:	20000354 	.word	0x20000354
 800264c:	48000400 	.word	0x48000400

08002650 <controller>:

void controller(MotorController *c) {
 8002650:	b580      	push	{r7, lr}
 8002652:	b082      	sub	sp, #8
 8002654:	af00      	add	r7, sp, #0
 8002656:	6078      	str	r0, [r7, #4]
	calcOutput(c->Encoder);
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	695b      	ldr	r3, [r3, #20]
 800265c:	4618      	mov	r0, r3
 800265e:	f7ff fe17 	bl	8002290 <calcOutput>

	// Measure the angular velocity (feedback)
	updateAngularVelocity(c);
 8002662:	6878      	ldr	r0, [r7, #4]
 8002664:	f7ff feb0 	bl	80023c8 <updateAngularVelocity>

	// Calculate next voltage according to the controller design
	nextVoltage(c);
 8002668:	6878      	ldr	r0, [r7, #4]
 800266a:	f7ff fe49 	bl	8002300 <nextVoltage>

	// Calculate current error to use for next iteration
	calculateError(c);
 800266e:	6878      	ldr	r0, [r7, #4]
 8002670:	f7ff fe30 	bl	80022d4 <calculateError>

	// Update the duty cycle
	updateDutyCycle(c);
 8002674:	6878      	ldr	r0, [r7, #4]
 8002676:	f7ff ff11 	bl	800249c <updateDutyCycle>

	setDutyCycle(c);
 800267a:	6878      	ldr	r0, [r7, #4]
 800267c:	f7ff ff60 	bl	8002540 <setDutyCycle>
}
 8002680:	bf00      	nop
 8002682:	3708      	adds	r7, #8
 8002684:	46bd      	mov	sp, r7
 8002686:	bd80      	pop	{r7, pc}

08002688 <controlBothMotors>:

void controlBothMotors() {
 8002688:	b580      	push	{r7, lr}
 800268a:	af00      	add	r7, sp, #0
	uart_in_read(&referenceFormatting);
 800268c:	4805      	ldr	r0, [pc, #20]	; (80026a4 <controlBothMotors+0x1c>)
 800268e:	f7ff f8eb 	bl	8001868 <uart_in_read>
	controller(&controllerR);
 8002692:	4805      	ldr	r0, [pc, #20]	; (80026a8 <controlBothMotors+0x20>)
 8002694:	f7ff ffdc 	bl	8002650 <controller>
	controller(&controllerL);
 8002698:	4804      	ldr	r0, [pc, #16]	; (80026ac <controlBothMotors+0x24>)
 800269a:	f7ff ffd9 	bl	8002650 <controller>
}
 800269e:	bf00      	nop
 80026a0:	bd80      	pop	{r7, pc}
 80026a2:	bf00      	nop
 80026a4:	08001a0d 	.word	0x08001a0d
 80026a8:	2000033c 	.word	0x2000033c
 80026ac:	20000270 	.word	0x20000270

080026b0 <UpdateBatteryVoltage>:

void UpdateBatteryVoltage() {
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b082      	sub	sp, #8
 80026b4:	af00      	add	r7, sp, #0
	HAL_ADC_Start(&hadc1); // Start ADC conversion
 80026b6:	480e      	ldr	r0, [pc, #56]	; (80026f0 <UpdateBatteryVoltage+0x40>)
 80026b8:	f000 ff86 	bl	80035c8 <HAL_ADC_Start>
	HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY); // Wait for conversion to complete
 80026bc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80026c0:	480b      	ldr	r0, [pc, #44]	; (80026f0 <UpdateBatteryVoltage+0x40>)
 80026c2:	f000 ffe4 	bl	800368e <HAL_ADC_PollForConversion>
	uint32_t adc_val = HAL_ADC_GetValue(&hadc1); // Get the ADC value
 80026c6:	480a      	ldr	r0, [pc, #40]	; (80026f0 <UpdateBatteryVoltage+0x40>)
 80026c8:	f001 f870 	bl	80037ac <HAL_ADC_GetValue>
 80026cc:	6078      	str	r0, [r7, #4]
	batteryVoltage = adc_val * voltageMeasScaling;
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	ee07 3a90 	vmov	s15, r3
 80026d4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80026d8:	4b06      	ldr	r3, [pc, #24]	; (80026f4 <UpdateBatteryVoltage+0x44>)
 80026da:	edd3 7a00 	vldr	s15, [r3]
 80026de:	ee67 7a27 	vmul.f32	s15, s14, s15
 80026e2:	4b05      	ldr	r3, [pc, #20]	; (80026f8 <UpdateBatteryVoltage+0x48>)
 80026e4:	edc3 7a00 	vstr	s15, [r3]
}
 80026e8:	bf00      	nop
 80026ea:	3708      	adds	r7, #8
 80026ec:	46bd      	mov	sp, r7
 80026ee:	bd80      	pop	{r7, pc}
 80026f0:	20000288 	.word	0x20000288
 80026f4:	20000004 	.word	0x20000004
 80026f8:	20000144 	.word	0x20000144

080026fc <Error_Handler>:

/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void) {
 80026fc:	b480      	push	{r7}
 80026fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002700:	b672      	cpsid	i
}
 8002702:	bf00      	nop
	/* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8002704:	e7fe      	b.n	8002704 <Error_Handler+0x8>
	...

08002708 <calcOrientOutput>:
char packedOrientData[50] = { 0 };
uint8_t angularPosition[5] = { 0 };
float angularResolution = 360.0/TOPENCODERRESOLUTION;


void calcOrientOutput() {
 8002708:	b480      	push	{r7}
 800270a:	af00      	add	r7, sp, #0
	 orientAngle = (orientIncrement % TOPENCODERRESOLUTION) * angularResolution; // Antallet af målte inkrementer ganges med hvor stor en grad hver inkrement er
 800270c:	4b0f      	ldr	r3, [pc, #60]	; (800274c <calcOrientOutput+0x44>)
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	4a0f      	ldr	r2, [pc, #60]	; (8002750 <calcOrientOutput+0x48>)
 8002712:	fb82 1203 	smull	r1, r2, r2, r3
 8002716:	441a      	add	r2, r3
 8002718:	1251      	asrs	r1, r2, #9
 800271a:	17da      	asrs	r2, r3, #31
 800271c:	1a8a      	subs	r2, r1, r2
 800271e:	f44f 7138 	mov.w	r1, #736	; 0x2e0
 8002722:	fb01 f202 	mul.w	r2, r1, r2
 8002726:	1a9a      	subs	r2, r3, r2
 8002728:	ee07 2a90 	vmov	s15, r2
 800272c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002730:	4b08      	ldr	r3, [pc, #32]	; (8002754 <calcOrientOutput+0x4c>)
 8002732:	edd3 7a00 	vldr	s15, [r3]
 8002736:	ee67 7a27 	vmul.f32	s15, s14, s15
 800273a:	4b07      	ldr	r3, [pc, #28]	; (8002758 <calcOrientOutput+0x50>)
 800273c:	edc3 7a00 	vstr	s15, [r3]
 }
 8002740:	bf00      	nop
 8002742:	46bd      	mov	sp, r7
 8002744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002748:	4770      	bx	lr
 800274a:	bf00      	nop
 800274c:	200001c8 	.word	0x200001c8
 8002750:	b21642c9 	.word	0xb21642c9
 8002754:	20000008 	.word	0x20000008
 8002758:	200001cc 	.word	0x200001cc

0800275c <packOrient>:

void packOrient() {
 800275c:	b480      	push	{r7}
 800275e:	b083      	sub	sp, #12
 8002760:	af00      	add	r7, sp, #0
	uint8_t *angularPointer = &directionOrient;
 8002762:	4b11      	ldr	r3, [pc, #68]	; (80027a8 <packOrient+0x4c>)
 8002764:	603b      	str	r3, [r7, #0]
	angularPosition[0] = *(angularPointer);
 8002766:	683b      	ldr	r3, [r7, #0]
 8002768:	781a      	ldrb	r2, [r3, #0]
 800276a:	4b10      	ldr	r3, [pc, #64]	; (80027ac <packOrient+0x50>)
 800276c:	701a      	strb	r2, [r3, #0]

	angularPointer = &orientAngle;
 800276e:	4b10      	ldr	r3, [pc, #64]	; (80027b0 <packOrient+0x54>)
 8002770:	603b      	str	r3, [r7, #0]
		for (int x = 1; x < 5 ; x++) {
 8002772:	2301      	movs	r3, #1
 8002774:	607b      	str	r3, [r7, #4]
 8002776:	e00c      	b.n	8002792 <packOrient+0x36>
		angularPosition[x] = *(angularPointer + (x-1));
 8002778:	687b      	ldr	r3, [r7, #4]
 800277a:	3b01      	subs	r3, #1
 800277c:	683a      	ldr	r2, [r7, #0]
 800277e:	4413      	add	r3, r2
 8002780:	7819      	ldrb	r1, [r3, #0]
 8002782:	4a0a      	ldr	r2, [pc, #40]	; (80027ac <packOrient+0x50>)
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	4413      	add	r3, r2
 8002788:	460a      	mov	r2, r1
 800278a:	701a      	strb	r2, [r3, #0]
		for (int x = 1; x < 5 ; x++) {
 800278c:	687b      	ldr	r3, [r7, #4]
 800278e:	3301      	adds	r3, #1
 8002790:	607b      	str	r3, [r7, #4]
 8002792:	687b      	ldr	r3, [r7, #4]
 8002794:	2b04      	cmp	r3, #4
 8002796:	ddef      	ble.n	8002778 <packOrient+0x1c>
	}
}
 8002798:	bf00      	nop
 800279a:	bf00      	nop
 800279c:	370c      	adds	r7, #12
 800279e:	46bd      	mov	sp, r7
 80027a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027a4:	4770      	bx	lr
 80027a6:	bf00      	nop
 80027a8:	200001c5 	.word	0x200001c5
 80027ac:	2000020c 	.word	0x2000020c
 80027b0:	200001cc 	.word	0x200001cc

080027b4 <checkOrientClock>:

void checkOrientClock() { //A
 80027b4:	b598      	push	{r3, r4, r7, lr}
 80027b6:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(orientation_clock_GPIO_Port, orientation_clock_Pin)
 80027b8:	2108      	movs	r1, #8
 80027ba:	4810      	ldr	r0, [pc, #64]	; (80027fc <checkOrientClock+0x48>)
 80027bc:	f002 f9a6 	bl	8004b0c <HAL_GPIO_ReadPin>
 80027c0:	4603      	mov	r3, r0
 80027c2:	461c      	mov	r4, r3
				== HAL_GPIO_ReadPin(orientation_counterclock_GPIO_Port, orientation_counterclock_Pin)) {
 80027c4:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80027c8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80027cc:	f002 f99e 	bl	8004b0c <HAL_GPIO_ReadPin>
 80027d0:	4603      	mov	r3, r0
	if (HAL_GPIO_ReadPin(orientation_clock_GPIO_Port, orientation_clock_Pin)
 80027d2:	429c      	cmp	r4, r3
 80027d4:	d108      	bne.n	80027e8 <checkOrientClock+0x34>
			directionOrient = -1;
 80027d6:	4b0a      	ldr	r3, [pc, #40]	; (8002800 <checkOrientClock+0x4c>)
 80027d8:	22ff      	movs	r2, #255	; 0xff
 80027da:	701a      	strb	r2, [r3, #0]
			orientIncrement--;//abs((orientIncrement + directionOrient) % TOOTHRESOLUTION);
 80027dc:	4b09      	ldr	r3, [pc, #36]	; (8002804 <checkOrientClock+0x50>)
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	3b01      	subs	r3, #1
 80027e2:	4a08      	ldr	r2, [pc, #32]	; (8002804 <checkOrientClock+0x50>)
 80027e4:	6013      	str	r3, [r2, #0]
			directionOrient = 1;
			orientIncrement++; //= abs((orientIncrement + directionOrient) % (TOOTHRESOLUTION + 1));
		}

		//checkRevolutionsOrient();
}
 80027e6:	e007      	b.n	80027f8 <checkOrientClock+0x44>
			directionOrient = 1;
 80027e8:	4b05      	ldr	r3, [pc, #20]	; (8002800 <checkOrientClock+0x4c>)
 80027ea:	2201      	movs	r2, #1
 80027ec:	701a      	strb	r2, [r3, #0]
			orientIncrement++; //= abs((orientIncrement + directionOrient) % (TOOTHRESOLUTION + 1));
 80027ee:	4b05      	ldr	r3, [pc, #20]	; (8002804 <checkOrientClock+0x50>)
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	3301      	adds	r3, #1
 80027f4:	4a03      	ldr	r2, [pc, #12]	; (8002804 <checkOrientClock+0x50>)
 80027f6:	6013      	str	r3, [r2, #0]
}
 80027f8:	bf00      	nop
 80027fa:	bd98      	pop	{r3, r4, r7, pc}
 80027fc:	48000400 	.word	0x48000400
 8002800:	200001c5 	.word	0x200001c5
 8002804:	200001c8 	.word	0x200001c8

08002808 <checkOrientCounterClock>:

void checkOrientCounterClock() { //B
 8002808:	b598      	push	{r3, r4, r7, lr}
 800280a:	af00      	add	r7, sp, #0
	if (HAL_GPIO_ReadPin(orientation_counterclock_GPIO_Port, orientation_counterclock_Pin)
 800280c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8002810:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002814:	f002 f97a 	bl	8004b0c <HAL_GPIO_ReadPin>
 8002818:	4603      	mov	r3, r0
 800281a:	461c      	mov	r4, r3
				== HAL_GPIO_ReadPin(orientation_clock_GPIO_Port, orientation_clock_Pin)) {
 800281c:	2108      	movs	r1, #8
 800281e:	480c      	ldr	r0, [pc, #48]	; (8002850 <checkOrientCounterClock+0x48>)
 8002820:	f002 f974 	bl	8004b0c <HAL_GPIO_ReadPin>
 8002824:	4603      	mov	r3, r0
	if (HAL_GPIO_ReadPin(orientation_counterclock_GPIO_Port, orientation_counterclock_Pin)
 8002826:	429c      	cmp	r4, r3
 8002828:	d108      	bne.n	800283c <checkOrientCounterClock+0x34>
			directionOrient = 1;
 800282a:	4b0a      	ldr	r3, [pc, #40]	; (8002854 <checkOrientCounterClock+0x4c>)
 800282c:	2201      	movs	r2, #1
 800282e:	701a      	strb	r2, [r3, #0]
			orientIncrement++; //= abs((orientIncrement + directionOrient) % TOOTHRESOLUTION);
 8002830:	4b09      	ldr	r3, [pc, #36]	; (8002858 <checkOrientCounterClock+0x50>)
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	3301      	adds	r3, #1
 8002836:	4a08      	ldr	r2, [pc, #32]	; (8002858 <checkOrientCounterClock+0x50>)
 8002838:	6013      	str	r3, [r2, #0]
			directionOrient = -1;
			orientIncrement--; //= abs((orientIncrement + directionOrient) % (TOOTHRESOLUTION + 1));
		}

		//checkRevolutionsOrient();
}
 800283a:	e007      	b.n	800284c <checkOrientCounterClock+0x44>
			directionOrient = -1;
 800283c:	4b05      	ldr	r3, [pc, #20]	; (8002854 <checkOrientCounterClock+0x4c>)
 800283e:	22ff      	movs	r2, #255	; 0xff
 8002840:	701a      	strb	r2, [r3, #0]
			orientIncrement--; //= abs((orientIncrement + directionOrient) % (TOOTHRESOLUTION + 1));
 8002842:	4b05      	ldr	r3, [pc, #20]	; (8002858 <checkOrientCounterClock+0x50>)
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	3b01      	subs	r3, #1
 8002848:	4a03      	ldr	r2, [pc, #12]	; (8002858 <checkOrientCounterClock+0x50>)
 800284a:	6013      	str	r3, [r2, #0]
}
 800284c:	bf00      	nop
 800284e:	bd98      	pop	{r3, r4, r7, pc}
 8002850:	48000400 	.word	0x48000400
 8002854:	200001c5 	.word	0x200001c5
 8002858:	200001c8 	.word	0x200001c8

0800285c <sendOrientData>:
//	else if (orientIncrement == 0 && directionOrient == -1){
//		orientIncrement = TOOTHRESOLUTION;
//	}
//}

void sendOrientData() {
 800285c:	b580      	push	{r7, lr}
 800285e:	af00      	add	r7, sp, #0
	if (spamCheckDirOrient != directionOrient || spamCheckOrientAngle != orientAngle) {
 8002860:	4b16      	ldr	r3, [pc, #88]	; (80028bc <sendOrientData+0x60>)
 8002862:	781a      	ldrb	r2, [r3, #0]
 8002864:	4b16      	ldr	r3, [pc, #88]	; (80028c0 <sendOrientData+0x64>)
 8002866:	781b      	ldrb	r3, [r3, #0]
 8002868:	429a      	cmp	r2, r3
 800286a:	d10a      	bne.n	8002882 <sendOrientData+0x26>
 800286c:	4b15      	ldr	r3, [pc, #84]	; (80028c4 <sendOrientData+0x68>)
 800286e:	ed93 7a00 	vldr	s14, [r3]
 8002872:	4b15      	ldr	r3, [pc, #84]	; (80028c8 <sendOrientData+0x6c>)
 8002874:	edd3 7a00 	vldr	s15, [r3]
 8002878:	eeb4 7a67 	vcmp.f32	s14, s15
 800287c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002880:	d01a      	beq.n	80028b8 <sendOrientData+0x5c>
		spamCheckDirOrient = directionOrient;
 8002882:	4b0f      	ldr	r3, [pc, #60]	; (80028c0 <sendOrientData+0x64>)
 8002884:	781a      	ldrb	r2, [r3, #0]
 8002886:	4b0d      	ldr	r3, [pc, #52]	; (80028bc <sendOrientData+0x60>)
 8002888:	701a      	strb	r2, [r3, #0]
		spamCheckOrientAngle = orientAngle;
 800288a:	4b0f      	ldr	r3, [pc, #60]	; (80028c8 <sendOrientData+0x6c>)
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	4a0d      	ldr	r2, [pc, #52]	; (80028c4 <sendOrientData+0x68>)
 8002890:	6013      	str	r3, [r2, #0]
		packOrient();
 8002892:	f7ff ff63 	bl	800275c <packOrient>
		memset(packedOrientData, 0, sizeof(packedOrientData));
 8002896:	2232      	movs	r2, #50	; 0x32
 8002898:	2100      	movs	r1, #0
 800289a:	480c      	ldr	r0, [pc, #48]	; (80028cc <sendOrientData+0x70>)
 800289c:	f005 fa5e 	bl	8007d5c <memset>

		to_frame(packedOrientData, angularPosition, ORIENTID);
 80028a0:	2203      	movs	r2, #3
 80028a2:	490b      	ldr	r1, [pc, #44]	; (80028d0 <sendOrientData+0x74>)
 80028a4:	4809      	ldr	r0, [pc, #36]	; (80028cc <sendOrientData+0x70>)
 80028a6:	f7fe fadd 	bl	8000e64 <to_frame>
		HAL_UART_Transmit(&huart2, packedOrientData, sizeof(packedOrientData), HAL_MAX_DELAY);
 80028aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80028ae:	2232      	movs	r2, #50	; 0x32
 80028b0:	4906      	ldr	r1, [pc, #24]	; (80028cc <sendOrientData+0x70>)
 80028b2:	4808      	ldr	r0, [pc, #32]	; (80028d4 <sendOrientData+0x78>)
 80028b4:	f004 fc50 	bl	8007158 <HAL_UART_Transmit>
	}
}
 80028b8:	bf00      	nop
 80028ba:	bd80      	pop	{r7, pc}
 80028bc:	200001d0 	.word	0x200001d0
 80028c0:	200001c5 	.word	0x200001c5
 80028c4:	200001d4 	.word	0x200001d4
 80028c8:	200001cc 	.word	0x200001cc
 80028cc:	200001d8 	.word	0x200001d8
 80028d0:	2000020c 	.word	0x2000020c
 80028d4:	200003ec 	.word	0x200003ec

080028d8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80028d8:	b480      	push	{r7}
 80028da:	b083      	sub	sp, #12
 80028dc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028de:	4b0f      	ldr	r3, [pc, #60]	; (800291c <HAL_MspInit+0x44>)
 80028e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80028e2:	4a0e      	ldr	r2, [pc, #56]	; (800291c <HAL_MspInit+0x44>)
 80028e4:	f043 0301 	orr.w	r3, r3, #1
 80028e8:	6613      	str	r3, [r2, #96]	; 0x60
 80028ea:	4b0c      	ldr	r3, [pc, #48]	; (800291c <HAL_MspInit+0x44>)
 80028ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80028ee:	f003 0301 	and.w	r3, r3, #1
 80028f2:	607b      	str	r3, [r7, #4]
 80028f4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80028f6:	4b09      	ldr	r3, [pc, #36]	; (800291c <HAL_MspInit+0x44>)
 80028f8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80028fa:	4a08      	ldr	r2, [pc, #32]	; (800291c <HAL_MspInit+0x44>)
 80028fc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002900:	6593      	str	r3, [r2, #88]	; 0x58
 8002902:	4b06      	ldr	r3, [pc, #24]	; (800291c <HAL_MspInit+0x44>)
 8002904:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002906:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800290a:	603b      	str	r3, [r7, #0]
 800290c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800290e:	bf00      	nop
 8002910:	370c      	adds	r7, #12
 8002912:	46bd      	mov	sp, r7
 8002914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002918:	4770      	bx	lr
 800291a:	bf00      	nop
 800291c:	40021000 	.word	0x40021000

08002920 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8002920:	b580      	push	{r7, lr}
 8002922:	b09e      	sub	sp, #120	; 0x78
 8002924:	af00      	add	r7, sp, #0
 8002926:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002928:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800292c:	2200      	movs	r2, #0
 800292e:	601a      	str	r2, [r3, #0]
 8002930:	605a      	str	r2, [r3, #4]
 8002932:	609a      	str	r2, [r3, #8]
 8002934:	60da      	str	r2, [r3, #12]
 8002936:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002938:	f107 0310 	add.w	r3, r7, #16
 800293c:	2254      	movs	r2, #84	; 0x54
 800293e:	2100      	movs	r1, #0
 8002940:	4618      	mov	r0, r3
 8002942:	f005 fa0b 	bl	8007d5c <memset>
  if(hadc->Instance==ADC1)
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	681b      	ldr	r3, [r3, #0]
 800294a:	4a25      	ldr	r2, [pc, #148]	; (80029e0 <HAL_ADC_MspInit+0xc0>)
 800294c:	4293      	cmp	r3, r2
 800294e:	d143      	bne.n	80029d8 <HAL_ADC_MspInit+0xb8>
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8002950:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002954:	613b      	str	r3, [r7, #16]
    PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 8002956:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800295a:	65bb      	str	r3, [r7, #88]	; 0x58
    PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 800295c:	2301      	movs	r3, #1
 800295e:	617b      	str	r3, [r7, #20]
    PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 8002960:	2301      	movs	r3, #1
 8002962:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 8002964:	2310      	movs	r3, #16
 8002966:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 8002968:	2307      	movs	r3, #7
 800296a:	623b      	str	r3, [r7, #32]
    PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 800296c:	2302      	movs	r3, #2
 800296e:	627b      	str	r3, [r7, #36]	; 0x24
    PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV8;
 8002970:	2308      	movs	r3, #8
 8002972:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 8002974:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8002978:	62fb      	str	r3, [r7, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800297a:	f107 0310 	add.w	r3, r7, #16
 800297e:	4618      	mov	r0, r3
 8002980:	f002 ffa2 	bl	80058c8 <HAL_RCCEx_PeriphCLKConfig>
 8002984:	4603      	mov	r3, r0
 8002986:	2b00      	cmp	r3, #0
 8002988:	d001      	beq.n	800298e <HAL_ADC_MspInit+0x6e>
    {
      Error_Handler();
 800298a:	f7ff feb7 	bl	80026fc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_ADC_CLK_ENABLE();
 800298e:	4b15      	ldr	r3, [pc, #84]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 8002990:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002992:	4a14      	ldr	r2, [pc, #80]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 8002994:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002998:	64d3      	str	r3, [r2, #76]	; 0x4c
 800299a:	4b12      	ldr	r3, [pc, #72]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 800299c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800299e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80029a2:	60fb      	str	r3, [r7, #12]
 80029a4:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029a6:	4b0f      	ldr	r3, [pc, #60]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 80029a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029aa:	4a0e      	ldr	r2, [pc, #56]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 80029ac:	f043 0301 	orr.w	r3, r3, #1
 80029b0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80029b2:	4b0c      	ldr	r3, [pc, #48]	; (80029e4 <HAL_ADC_MspInit+0xc4>)
 80029b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80029b6:	f003 0301 	and.w	r3, r3, #1
 80029ba:	60bb      	str	r3, [r7, #8]
 80029bc:	68bb      	ldr	r3, [r7, #8]
    /**ADC1 GPIO Configuration
    PA3     ------> ADC1_IN8
    */
    GPIO_InitStruct.Pin = BatteryVoltage_Pin;
 80029be:	2308      	movs	r3, #8
 80029c0:	667b      	str	r3, [r7, #100]	; 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 80029c2:	230b      	movs	r3, #11
 80029c4:	66bb      	str	r3, [r7, #104]	; 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029c6:	2300      	movs	r3, #0
 80029c8:	66fb      	str	r3, [r7, #108]	; 0x6c
    HAL_GPIO_Init(BatteryVoltage_GPIO_Port, &GPIO_InitStruct);
 80029ca:	f107 0364 	add.w	r3, r7, #100	; 0x64
 80029ce:	4619      	mov	r1, r3
 80029d0:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80029d4:	f001 ff30 	bl	8004838 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 80029d8:	bf00      	nop
 80029da:	3778      	adds	r7, #120	; 0x78
 80029dc:	46bd      	mov	sp, r7
 80029de:	bd80      	pop	{r7, pc}
 80029e0:	50040000 	.word	0x50040000
 80029e4:	40021000 	.word	0x40021000

080029e8 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80029e8:	b480      	push	{r7}
 80029ea:	b085      	sub	sp, #20
 80029ec:	af00      	add	r7, sp, #0
 80029ee:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	4a0a      	ldr	r2, [pc, #40]	; (8002a20 <HAL_TIM_PWM_MspInit+0x38>)
 80029f6:	4293      	cmp	r3, r2
 80029f8:	d10b      	bne.n	8002a12 <HAL_TIM_PWM_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80029fa:	4b0a      	ldr	r3, [pc, #40]	; (8002a24 <HAL_TIM_PWM_MspInit+0x3c>)
 80029fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80029fe:	4a09      	ldr	r2, [pc, #36]	; (8002a24 <HAL_TIM_PWM_MspInit+0x3c>)
 8002a00:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002a04:	6613      	str	r3, [r2, #96]	; 0x60
 8002a06:	4b07      	ldr	r3, [pc, #28]	; (8002a24 <HAL_TIM_PWM_MspInit+0x3c>)
 8002a08:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002a0a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8002a0e:	60fb      	str	r3, [r7, #12]
 8002a10:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8002a12:	bf00      	nop
 8002a14:	3714      	adds	r7, #20
 8002a16:	46bd      	mov	sp, r7
 8002a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a1c:	4770      	bx	lr
 8002a1e:	bf00      	nop
 8002a20:	40012c00 	.word	0x40012c00
 8002a24:	40021000 	.word	0x40021000

08002a28 <HAL_TIM_OC_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_oc: TIM_OC handle pointer
* @retval None
*/
void HAL_TIM_OC_MspInit(TIM_HandleTypeDef* htim_oc)
{
 8002a28:	b580      	push	{r7, lr}
 8002a2a:	b084      	sub	sp, #16
 8002a2c:	af00      	add	r7, sp, #0
 8002a2e:	6078      	str	r0, [r7, #4]
  if(htim_oc->Instance==TIM2)
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002a38:	d113      	bne.n	8002a62 <HAL_TIM_OC_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002a3a:	4b0c      	ldr	r3, [pc, #48]	; (8002a6c <HAL_TIM_OC_MspInit+0x44>)
 8002a3c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a3e:	4a0b      	ldr	r2, [pc, #44]	; (8002a6c <HAL_TIM_OC_MspInit+0x44>)
 8002a40:	f043 0301 	orr.w	r3, r3, #1
 8002a44:	6593      	str	r3, [r2, #88]	; 0x58
 8002a46:	4b09      	ldr	r3, [pc, #36]	; (8002a6c <HAL_TIM_OC_MspInit+0x44>)
 8002a48:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a4a:	f003 0301 	and.w	r3, r3, #1
 8002a4e:	60fb      	str	r3, [r7, #12]
 8002a50:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8002a52:	2200      	movs	r2, #0
 8002a54:	2100      	movs	r1, #0
 8002a56:	201c      	movs	r0, #28
 8002a58:	f001 fcbf 	bl	80043da <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002a5c:	201c      	movs	r0, #28
 8002a5e:	f001 fcd8 	bl	8004412 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8002a62:	bf00      	nop
 8002a64:	3710      	adds	r7, #16
 8002a66:	46bd      	mov	sp, r7
 8002a68:	bd80      	pop	{r7, pc}
 8002a6a:	bf00      	nop
 8002a6c:	40021000 	.word	0x40021000

08002a70 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002a70:	b580      	push	{r7, lr}
 8002a72:	b084      	sub	sp, #16
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM6)
 8002a78:	687b      	ldr	r3, [r7, #4]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	4a1a      	ldr	r2, [pc, #104]	; (8002ae8 <HAL_TIM_Base_MspInit+0x78>)
 8002a7e:	4293      	cmp	r3, r2
 8002a80:	d114      	bne.n	8002aac <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002a82:	4b1a      	ldr	r3, [pc, #104]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002a84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a86:	4a19      	ldr	r2, [pc, #100]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002a88:	f043 0310 	orr.w	r3, r3, #16
 8002a8c:	6593      	str	r3, [r2, #88]	; 0x58
 8002a8e:	4b17      	ldr	r3, [pc, #92]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002a90:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002a92:	f003 0310 	and.w	r3, r3, #16
 8002a96:	60fb      	str	r3, [r7, #12]
 8002a98:	68fb      	ldr	r3, [r7, #12]
    /* TIM6 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 8002a9a:	2200      	movs	r2, #0
 8002a9c:	2100      	movs	r1, #0
 8002a9e:	2036      	movs	r0, #54	; 0x36
 8002aa0:	f001 fc9b 	bl	80043da <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002aa4:	2036      	movs	r0, #54	; 0x36
 8002aa6:	f001 fcb4 	bl	8004412 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8002aaa:	e018      	b.n	8002ade <HAL_TIM_Base_MspInit+0x6e>
  else if(htim_base->Instance==TIM7)
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	4a0f      	ldr	r2, [pc, #60]	; (8002af0 <HAL_TIM_Base_MspInit+0x80>)
 8002ab2:	4293      	cmp	r3, r2
 8002ab4:	d113      	bne.n	8002ade <HAL_TIM_Base_MspInit+0x6e>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8002ab6:	4b0d      	ldr	r3, [pc, #52]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002ab8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002aba:	4a0c      	ldr	r2, [pc, #48]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002abc:	f043 0320 	orr.w	r3, r3, #32
 8002ac0:	6593      	str	r3, [r2, #88]	; 0x58
 8002ac2:	4b0a      	ldr	r3, [pc, #40]	; (8002aec <HAL_TIM_Base_MspInit+0x7c>)
 8002ac4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002ac6:	f003 0320 	and.w	r3, r3, #32
 8002aca:	60bb      	str	r3, [r7, #8]
 8002acc:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8002ace:	2200      	movs	r2, #0
 8002ad0:	2100      	movs	r1, #0
 8002ad2:	2037      	movs	r0, #55	; 0x37
 8002ad4:	f001 fc81 	bl	80043da <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8002ad8:	2037      	movs	r0, #55	; 0x37
 8002ada:	f001 fc9a 	bl	8004412 <HAL_NVIC_EnableIRQ>
}
 8002ade:	bf00      	nop
 8002ae0:	3710      	adds	r7, #16
 8002ae2:	46bd      	mov	sp, r7
 8002ae4:	bd80      	pop	{r7, pc}
 8002ae6:	bf00      	nop
 8002ae8:	40001000 	.word	0x40001000
 8002aec:	40021000 	.word	0x40021000
 8002af0:	40001400 	.word	0x40001400

08002af4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002af4:	b580      	push	{r7, lr}
 8002af6:	b088      	sub	sp, #32
 8002af8:	af00      	add	r7, sp, #0
 8002afa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002afc:	f107 030c 	add.w	r3, r7, #12
 8002b00:	2200      	movs	r2, #0
 8002b02:	601a      	str	r2, [r3, #0]
 8002b04:	605a      	str	r2, [r3, #4]
 8002b06:	609a      	str	r2, [r3, #8]
 8002b08:	60da      	str	r2, [r3, #12]
 8002b0a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8002b0c:	687b      	ldr	r3, [r7, #4]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	4a12      	ldr	r2, [pc, #72]	; (8002b5c <HAL_TIM_MspPostInit+0x68>)
 8002b12:	4293      	cmp	r3, r2
 8002b14:	d11d      	bne.n	8002b52 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002b16:	4b12      	ldr	r3, [pc, #72]	; (8002b60 <HAL_TIM_MspPostInit+0x6c>)
 8002b18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b1a:	4a11      	ldr	r2, [pc, #68]	; (8002b60 <HAL_TIM_MspPostInit+0x6c>)
 8002b1c:	f043 0301 	orr.w	r3, r3, #1
 8002b20:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002b22:	4b0f      	ldr	r3, [pc, #60]	; (8002b60 <HAL_TIM_MspPostInit+0x6c>)
 8002b24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002b26:	f003 0301 	and.w	r3, r3, #1
 8002b2a:	60bb      	str	r3, [r7, #8]
 8002b2c:	68bb      	ldr	r3, [r7, #8]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = PWM_R_Pin|PWM_L_Pin;
 8002b2e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002b32:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002b34:	2302      	movs	r3, #2
 8002b36:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002b38:	2300      	movs	r3, #0
 8002b3a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002b40:	2301      	movs	r3, #1
 8002b42:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002b44:	f107 030c 	add.w	r3, r7, #12
 8002b48:	4619      	mov	r1, r3
 8002b4a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002b4e:	f001 fe73 	bl	8004838 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM1_MspPostInit 1 */

  /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8002b52:	bf00      	nop
 8002b54:	3720      	adds	r7, #32
 8002b56:	46bd      	mov	sp, r7
 8002b58:	bd80      	pop	{r7, pc}
 8002b5a:	bf00      	nop
 8002b5c:	40012c00 	.word	0x40012c00
 8002b60:	40021000 	.word	0x40021000

08002b64 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002b64:	b580      	push	{r7, lr}
 8002b66:	b09e      	sub	sp, #120	; 0x78
 8002b68:	af00      	add	r7, sp, #0
 8002b6a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b6c:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8002b70:	2200      	movs	r2, #0
 8002b72:	601a      	str	r2, [r3, #0]
 8002b74:	605a      	str	r2, [r3, #4]
 8002b76:	609a      	str	r2, [r3, #8]
 8002b78:	60da      	str	r2, [r3, #12]
 8002b7a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002b7c:	f107 0310 	add.w	r3, r7, #16
 8002b80:	2254      	movs	r2, #84	; 0x54
 8002b82:	2100      	movs	r1, #0
 8002b84:	4618      	mov	r0, r3
 8002b86:	f005 f8e9 	bl	8007d5c <memset>
  if(huart->Instance==USART2)
 8002b8a:	687b      	ldr	r3, [r7, #4]
 8002b8c:	681b      	ldr	r3, [r3, #0]
 8002b8e:	4a3c      	ldr	r2, [pc, #240]	; (8002c80 <HAL_UART_MspInit+0x11c>)
 8002b90:	4293      	cmp	r3, r2
 8002b92:	d171      	bne.n	8002c78 <HAL_UART_MspInit+0x114>
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002b94:	2302      	movs	r3, #2
 8002b96:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002b98:	2300      	movs	r3, #0
 8002b9a:	637b      	str	r3, [r7, #52]	; 0x34
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002b9c:	f107 0310 	add.w	r3, r7, #16
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f002 fe91 	bl	80058c8 <HAL_RCCEx_PeriphCLKConfig>
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d001      	beq.n	8002bb0 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8002bac:	f7ff fda6 	bl	80026fc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002bb0:	4b34      	ldr	r3, [pc, #208]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bb2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002bb4:	4a33      	ldr	r2, [pc, #204]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bb6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002bba:	6593      	str	r3, [r2, #88]	; 0x58
 8002bbc:	4b31      	ldr	r3, [pc, #196]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bbe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002bc0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002bc4:	60fb      	str	r3, [r7, #12]
 8002bc6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002bc8:	4b2e      	ldr	r3, [pc, #184]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bcc:	4a2d      	ldr	r2, [pc, #180]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bce:	f043 0301 	orr.w	r3, r3, #1
 8002bd2:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002bd4:	4b2b      	ldr	r3, [pc, #172]	; (8002c84 <HAL_UART_MspInit+0x120>)
 8002bd6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002bd8:	f003 0301 	and.w	r3, r3, #1
 8002bdc:	60bb      	str	r3, [r7, #8]
 8002bde:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA15 (JTDI)     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002be0:	2304      	movs	r3, #4
 8002be2:	667b      	str	r3, [r7, #100]	; 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002be4:	2302      	movs	r3, #2
 8002be6:	66bb      	str	r3, [r7, #104]	; 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002be8:	2300      	movs	r3, #0
 8002bea:	66fb      	str	r3, [r7, #108]	; 0x6c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002bec:	2303      	movs	r3, #3
 8002bee:	673b      	str	r3, [r7, #112]	; 0x70
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002bf0:	2307      	movs	r3, #7
 8002bf2:	677b      	str	r3, [r7, #116]	; 0x74
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002bf4:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8002bf8:	4619      	mov	r1, r3
 8002bfa:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002bfe:	f001 fe1b 	bl	8004838 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8002c02:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002c06:	667b      	str	r3, [r7, #100]	; 0x64
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002c08:	2302      	movs	r3, #2
 8002c0a:	66bb      	str	r3, [r7, #104]	; 0x68
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	66fb      	str	r3, [r7, #108]	; 0x6c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c10:	2303      	movs	r3, #3
 8002c12:	673b      	str	r3, [r7, #112]	; 0x70
    GPIO_InitStruct.Alternate = GPIO_AF3_USART2;
 8002c14:	2303      	movs	r3, #3
 8002c16:	677b      	str	r3, [r7, #116]	; 0x74
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c18:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8002c1c:	4619      	mov	r1, r3
 8002c1e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002c22:	f001 fe09 	bl	8004838 <HAL_GPIO_Init>

    /* USART2 DMA Init */
    /* USART2_RX Init */
    hdma_usart2_rx.Instance = DMA1_Channel6;
 8002c26:	4b18      	ldr	r3, [pc, #96]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c28:	4a18      	ldr	r2, [pc, #96]	; (8002c8c <HAL_UART_MspInit+0x128>)
 8002c2a:	601a      	str	r2, [r3, #0]
    hdma_usart2_rx.Init.Request = DMA_REQUEST_2;
 8002c2c:	4b16      	ldr	r3, [pc, #88]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c2e:	2202      	movs	r2, #2
 8002c30:	605a      	str	r2, [r3, #4]
    hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8002c32:	4b15      	ldr	r3, [pc, #84]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c34:	2200      	movs	r2, #0
 8002c36:	609a      	str	r2, [r3, #8]
    hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8002c38:	4b13      	ldr	r3, [pc, #76]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c3a:	2200      	movs	r2, #0
 8002c3c:	60da      	str	r2, [r3, #12]
    hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8002c3e:	4b12      	ldr	r3, [pc, #72]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c40:	2280      	movs	r2, #128	; 0x80
 8002c42:	611a      	str	r2, [r3, #16]
    hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8002c44:	4b10      	ldr	r3, [pc, #64]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c46:	2200      	movs	r2, #0
 8002c48:	615a      	str	r2, [r3, #20]
    hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8002c4a:	4b0f      	ldr	r3, [pc, #60]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c4c:	2200      	movs	r2, #0
 8002c4e:	619a      	str	r2, [r3, #24]
    hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 8002c50:	4b0d      	ldr	r3, [pc, #52]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c52:	2220      	movs	r2, #32
 8002c54:	61da      	str	r2, [r3, #28]
    hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8002c56:	4b0c      	ldr	r3, [pc, #48]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c58:	2200      	movs	r2, #0
 8002c5a:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 8002c5c:	480a      	ldr	r0, [pc, #40]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c5e:	f001 fbf3 	bl	8004448 <HAL_DMA_Init>
 8002c62:	4603      	mov	r3, r0
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d001      	beq.n	8002c6c <HAL_UART_MspInit+0x108>
    {
      Error_Handler();
 8002c68:	f7ff fd48 	bl	80026fc <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	4a06      	ldr	r2, [pc, #24]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c70:	671a      	str	r2, [r3, #112]	; 0x70
 8002c72:	4a05      	ldr	r2, [pc, #20]	; (8002c88 <HAL_UART_MspInit+0x124>)
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	6293      	str	r3, [r2, #40]	; 0x28
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8002c78:	bf00      	nop
 8002c7a:	3778      	adds	r7, #120	; 0x78
 8002c7c:	46bd      	mov	sp, r7
 8002c7e:	bd80      	pop	{r7, pc}
 8002c80:	40004400 	.word	0x40004400
 8002c84:	40021000 	.word	0x40021000
 8002c88:	20000214 	.word	0x20000214
 8002c8c:	4002006c 	.word	0x4002006c

08002c90 <NMI_Handler>:
/*           Cortex-M4 Processor Interruption and Exception Handlers          */
/******************************************************************************/
/**
 * @brief This function handles Non maskable interrupt.
 */
void NMI_Handler(void) {
 8002c90:	b480      	push	{r7}
 8002c92:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN NonMaskableInt_IRQn 0 */

	/* USER CODE END NonMaskableInt_IRQn 0 */
	/* USER CODE BEGIN NonMaskableInt_IRQn 1 */
	while (1) {
 8002c94:	e7fe      	b.n	8002c94 <NMI_Handler+0x4>

08002c96 <HardFault_Handler>:
}

/**
 * @brief This function handles Hard fault interrupt.
 */
void HardFault_Handler(void) {
 8002c96:	b480      	push	{r7}
 8002c98:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN HardFault_IRQn 0 */

	/* USER CODE END HardFault_IRQn 0 */
	while (1) {
 8002c9a:	e7fe      	b.n	8002c9a <HardFault_Handler+0x4>

08002c9c <MemManage_Handler>:
}

/**
 * @brief This function handles Memory management fault.
 */
void MemManage_Handler(void) {
 8002c9c:	b480      	push	{r7}
 8002c9e:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN MemoryManagement_IRQn 0 */

	/* USER CODE END MemoryManagement_IRQn 0 */
	while (1) {
 8002ca0:	e7fe      	b.n	8002ca0 <MemManage_Handler+0x4>

08002ca2 <BusFault_Handler>:
}

/**
 * @brief This function handles Prefetch fault, memory access fault.
 */
void BusFault_Handler(void) {
 8002ca2:	b480      	push	{r7}
 8002ca4:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN BusFault_IRQn 0 */

	/* USER CODE END BusFault_IRQn 0 */
	while (1) {
 8002ca6:	e7fe      	b.n	8002ca6 <BusFault_Handler+0x4>

08002ca8 <UsageFault_Handler>:
}

/**
 * @brief This function handles Undefined instruction or illegal state.
 */
void UsageFault_Handler(void) {
 8002ca8:	b480      	push	{r7}
 8002caa:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN UsageFault_IRQn 0 */

	/* USER CODE END UsageFault_IRQn 0 */
	while (1) {
 8002cac:	e7fe      	b.n	8002cac <UsageFault_Handler+0x4>

08002cae <SVC_Handler>:
}

/**
 * @brief This function handles System service call via SWI instruction.
 */
void SVC_Handler(void) {
 8002cae:	b480      	push	{r7}
 8002cb0:	af00      	add	r7, sp, #0

	/* USER CODE END SVCall_IRQn 0 */
	/* USER CODE BEGIN SVCall_IRQn 1 */

	/* USER CODE END SVCall_IRQn 1 */
}
 8002cb2:	bf00      	nop
 8002cb4:	46bd      	mov	sp, r7
 8002cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cba:	4770      	bx	lr

08002cbc <DebugMon_Handler>:

/**
 * @brief This function handles Debug monitor.
 */
void DebugMon_Handler(void) {
 8002cbc:	b480      	push	{r7}
 8002cbe:	af00      	add	r7, sp, #0

	/* USER CODE END DebugMonitor_IRQn 0 */
	/* USER CODE BEGIN DebugMonitor_IRQn 1 */

	/* USER CODE END DebugMonitor_IRQn 1 */
}
 8002cc0:	bf00      	nop
 8002cc2:	46bd      	mov	sp, r7
 8002cc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cc8:	4770      	bx	lr

08002cca <PendSV_Handler>:

/**
 * @brief This function handles Pendable request for system service.
 */
void PendSV_Handler(void) {
 8002cca:	b480      	push	{r7}
 8002ccc:	af00      	add	r7, sp, #0

	/* USER CODE END PendSV_IRQn 0 */
	/* USER CODE BEGIN PendSV_IRQn 1 */

	/* USER CODE END PendSV_IRQn 1 */
}
 8002cce:	bf00      	nop
 8002cd0:	46bd      	mov	sp, r7
 8002cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd6:	4770      	bx	lr

08002cd8 <SysTick_Handler>:

/**
 * @brief This function handles System tick timer.
 */
void SysTick_Handler(void) {
 8002cd8:	b580      	push	{r7, lr}
 8002cda:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN SysTick_IRQn 0 */

	/* USER CODE END SysTick_IRQn 0 */
	HAL_IncTick();
 8002cdc:	f000 f91e 	bl	8002f1c <HAL_IncTick>
	/* USER CODE BEGIN SysTick_IRQn 1 */

	/* USER CODE END SysTick_IRQn 1 */
}
 8002ce0:	bf00      	nop
 8002ce2:	bd80      	pop	{r7, pc}

08002ce4 <EXTI0_IRQHandler>:
/******************************************************************************/

/**
 * @brief This function handles EXTI line0 interrupt.
 */
void EXTI0_IRQHandler(void) {
 8002ce4:	b580      	push	{r7, lr}
 8002ce6:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI0_IRQn 0 */

	/* USER CODE END EXTI0_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 8002ce8:	2001      	movs	r0, #1
 8002cea:	f001 ff3f 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI0_IRQn 1 */
	clockcheckRight();
 8002cee:	f7ff f905 	bl	8001efc <clockcheckRight>
	/* USER CODE END EXTI0_IRQn 1 */
}
 8002cf2:	bf00      	nop
 8002cf4:	bd80      	pop	{r7, pc}

08002cf6 <EXTI1_IRQHandler>:

/**
 * @brief This function handles EXTI line1 interrupt.
 */
void EXTI1_IRQHandler(void) {
 8002cf6:	b580      	push	{r7, lr}
 8002cf8:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI1_IRQn 0 */

	/* USER CODE END EXTI1_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 8002cfa:	2002      	movs	r0, #2
 8002cfc:	f001 ff36 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI1_IRQn 1 */
	clockcheckLeft();
 8002d00:	f7ff f9bc 	bl	800207c <clockcheckLeft>
	/* USER CODE END EXTI1_IRQn 1 */
}
 8002d04:	bf00      	nop
 8002d06:	bd80      	pop	{r7, pc}

08002d08 <EXTI3_IRQHandler>:

/**
 * @brief This function handles EXTI line3 interrupt.
 */
void EXTI3_IRQHandler(void) {
 8002d08:	b580      	push	{r7, lr}
 8002d0a:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI3_IRQn 0 */

	/* USER CODE END EXTI3_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 8002d0c:	2008      	movs	r0, #8
 8002d0e:	f001 ff2d 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI3_IRQn 1 */
	checkOrientClock();
 8002d12:	f7ff fd4f 	bl	80027b4 <checkOrientClock>
	/* USER CODE END EXTI3_IRQn 1 */
}
 8002d16:	bf00      	nop
 8002d18:	bd80      	pop	{r7, pc}

08002d1a <EXTI4_IRQHandler>:

/**
 * @brief This function handles EXTI line4 interrupt.
 */
void EXTI4_IRQHandler(void) {
 8002d1a:	b580      	push	{r7, lr}
 8002d1c:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI4_IRQn 0 */

	/* USER CODE END EXTI4_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 8002d1e:	2010      	movs	r0, #16
 8002d20:	f001 ff24 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI4_IRQn 1 */
	counterclockcheckRight();
 8002d24:	f7ff f94a 	bl	8001fbc <counterclockcheckRight>
	/* USER CODE END EXTI4_IRQn 1 */
}
 8002d28:	bf00      	nop
 8002d2a:	bd80      	pop	{r7, pc}

08002d2c <DMA1_Channel6_IRQHandler>:

/**
 * @brief This function handles DMA1 channel6 global interrupt.
 */
void DMA1_Channel6_IRQHandler(void) {
 8002d2c:	b580      	push	{r7, lr}
 8002d2e:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN DMA1_Channel6_IRQn 0 */

	/* USER CODE END DMA1_Channel6_IRQn 0 */
	HAL_DMA_IRQHandler(&hdma_usart2_rx);
 8002d30:	4804      	ldr	r0, [pc, #16]	; (8002d44 <DMA1_Channel6_IRQHandler+0x18>)
 8002d32:	f001 fca1 	bl	8004678 <HAL_DMA_IRQHandler>
	/* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
	uart_dma_laps_ahead++;
 8002d36:	4b04      	ldr	r3, [pc, #16]	; (8002d48 <DMA1_Channel6_IRQHandler+0x1c>)
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	3301      	adds	r3, #1
 8002d3c:	4a02      	ldr	r2, [pc, #8]	; (8002d48 <DMA1_Channel6_IRQHandler+0x1c>)
 8002d3e:	6013      	str	r3, [r2, #0]
	/* USER CODE END DMA1_Channel6_IRQn 1 */
}
 8002d40:	bf00      	nop
 8002d42:	bd80      	pop	{r7, pc}
 8002d44:	20000214 	.word	0x20000214
 8002d48:	2000003c 	.word	0x2000003c

08002d4c <EXTI9_5_IRQHandler>:

/**
 * @brief This function handles EXTI line[9:5] interrupts.
 */
void EXTI9_5_IRQHandler(void) {
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI9_5_IRQn 0 */

	/* USER CODE END EXTI9_5_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 8002d50:	2020      	movs	r0, #32
 8002d52:	f001 ff0b 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI9_5_IRQn 1 */
	counterclockcheckLeft();
 8002d56:	f7ff f9f3 	bl	8002140 <counterclockcheckLeft>

	/* USER CODE END EXTI9_5_IRQn 1 */
}
 8002d5a:	bf00      	nop
 8002d5c:	bd80      	pop	{r7, pc}
	...

08002d60 <TIM2_IRQHandler>:

/**
 * @brief This function handles TIM2 global interrupt.
 */
void TIM2_IRQHandler(void) {
 8002d60:	b580      	push	{r7, lr}
 8002d62:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN TIM2_IRQn 0 */

	/* USER CODE END TIM2_IRQn 0 */
	HAL_TIM_IRQHandler(&htim2);
 8002d64:	4803      	ldr	r0, [pc, #12]	; (8002d74 <TIM2_IRQHandler+0x14>)
 8002d66:	f003 facd 	bl	8006304 <HAL_TIM_IRQHandler>
	/* USER CODE BEGIN TIM2_IRQn 1 */
	controlBothMotors();
 8002d6a:	f7ff fc8d 	bl	8002688 <controlBothMotors>
	/* USER CODE END TIM2_IRQn 1 */
}
 8002d6e:	bf00      	nop
 8002d70:	bd80      	pop	{r7, pc}
 8002d72:	bf00      	nop
 8002d74:	200003a0 	.word	0x200003a0

08002d78 <EXTI15_10_IRQHandler>:

/**
 * @brief This function handles EXTI line[15:10] interrupts.
 */
void EXTI15_10_IRQHandler(void) {
 8002d78:	b580      	push	{r7, lr}
 8002d7a:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN EXTI15_10_IRQn 0 */

	/* USER CODE END EXTI15_10_IRQn 0 */
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 8002d7c:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8002d80:	f001 fef4 	bl	8004b6c <HAL_GPIO_EXTI_IRQHandler>
	/* USER CODE BEGIN EXTI15_10_IRQn 1 */
	checkOrientCounterClock();
 8002d84:	f7ff fd40 	bl	8002808 <checkOrientCounterClock>
	/* USER CODE END EXTI15_10_IRQn 1 */
}
 8002d88:	bf00      	nop
 8002d8a:	bd80      	pop	{r7, pc}

08002d8c <TIM6_DAC_IRQHandler>:

/**
 * @brief This function handles TIM6 global interrupt, DAC channel1 and channel2 underrun error interrupts.
 */
void TIM6_DAC_IRQHandler(void) {
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN TIM6_DAC_IRQn 0 */

	/* USER CODE END TIM6_DAC_IRQn 0 */
	HAL_TIM_IRQHandler(&htim6);
 8002d90:	4803      	ldr	r0, [pc, #12]	; (8002da0 <TIM6_DAC_IRQHandler+0x14>)
 8002d92:	f003 fab7 	bl	8006304 <HAL_TIM_IRQHandler>
	/* USER CODE BEGIN TIM6_DAC_IRQn 1 */
	updatePositionsAndVelocities();
 8002d96:	f7fe ffb9 	bl	8001d0c <updatePositionsAndVelocities>
	/* USER CODE END TIM6_DAC_IRQn 1 */
}
 8002d9a:	bf00      	nop
 8002d9c:	bd80      	pop	{r7, pc}
 8002d9e:	bf00      	nop
 8002da0:	200002f0 	.word	0x200002f0

08002da4 <TIM7_IRQHandler>:

/**
 * @brief This function handles TIM7 global interrupt.
 */
void TIM7_IRQHandler(void) {
 8002da4:	b580      	push	{r7, lr}
 8002da6:	af00      	add	r7, sp, #0
	/* USER CODE BEGIN TIM7_IRQn 0 */

	/* USER CODE END TIM7_IRQn 0 */
	HAL_TIM_IRQHandler(&htim7);
 8002da8:	4803      	ldr	r0, [pc, #12]	; (8002db8 <TIM7_IRQHandler+0x14>)
 8002daa:	f003 faab 	bl	8006304 <HAL_TIM_IRQHandler>
	/* USER CODE BEGIN TIM7_IRQn 1 */
	UpdateBatteryVoltage();
 8002dae:	f7ff fc7f 	bl	80026b0 <UpdateBatteryVoltage>

	/* USER CODE END TIM7_IRQn 1 */
}
 8002db2:	bf00      	nop
 8002db4:	bd80      	pop	{r7, pc}
 8002db6:	bf00      	nop
 8002db8:	20000484 	.word	0x20000484

08002dbc <SystemInit>:
 8002dbc:	b480      	push	{r7}
 8002dbe:	af00      	add	r7, sp, #0
 8002dc0:	4b15      	ldr	r3, [pc, #84]	; (8002e18 <SystemInit+0x5c>)
 8002dc2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002dc6:	4a14      	ldr	r2, [pc, #80]	; (8002e18 <SystemInit+0x5c>)
 8002dc8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002dcc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8002dd0:	4b12      	ldr	r3, [pc, #72]	; (8002e1c <SystemInit+0x60>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4a11      	ldr	r2, [pc, #68]	; (8002e1c <SystemInit+0x60>)
 8002dd6:	f043 0301 	orr.w	r3, r3, #1
 8002dda:	6013      	str	r3, [r2, #0]
 8002ddc:	4b0f      	ldr	r3, [pc, #60]	; (8002e1c <SystemInit+0x60>)
 8002dde:	2200      	movs	r2, #0
 8002de0:	609a      	str	r2, [r3, #8]
 8002de2:	4b0e      	ldr	r3, [pc, #56]	; (8002e1c <SystemInit+0x60>)
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	4a0d      	ldr	r2, [pc, #52]	; (8002e1c <SystemInit+0x60>)
 8002de8:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8002dec:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8002df0:	6013      	str	r3, [r2, #0]
 8002df2:	4b0a      	ldr	r3, [pc, #40]	; (8002e1c <SystemInit+0x60>)
 8002df4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002df8:	60da      	str	r2, [r3, #12]
 8002dfa:	4b08      	ldr	r3, [pc, #32]	; (8002e1c <SystemInit+0x60>)
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	4a07      	ldr	r2, [pc, #28]	; (8002e1c <SystemInit+0x60>)
 8002e00:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002e04:	6013      	str	r3, [r2, #0]
 8002e06:	4b05      	ldr	r3, [pc, #20]	; (8002e1c <SystemInit+0x60>)
 8002e08:	2200      	movs	r2, #0
 8002e0a:	619a      	str	r2, [r3, #24]
 8002e0c:	bf00      	nop
 8002e0e:	46bd      	mov	sp, r7
 8002e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e14:	4770      	bx	lr
 8002e16:	bf00      	nop
 8002e18:	e000ed00 	.word	0xe000ed00
 8002e1c:	40021000 	.word	0x40021000

08002e20 <Reset_Handler>:
 8002e20:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002e58 <LoopForever+0x2>
 8002e24:	f7ff ffca 	bl	8002dbc <SystemInit>
 8002e28:	2100      	movs	r1, #0
 8002e2a:	e003      	b.n	8002e34 <LoopCopyDataInit>

08002e2c <CopyDataInit>:
 8002e2c:	4b0b      	ldr	r3, [pc, #44]	; (8002e5c <LoopForever+0x6>)
 8002e2e:	585b      	ldr	r3, [r3, r1]
 8002e30:	5043      	str	r3, [r0, r1]
 8002e32:	3104      	adds	r1, #4

08002e34 <LoopCopyDataInit>:
 8002e34:	480a      	ldr	r0, [pc, #40]	; (8002e60 <LoopForever+0xa>)
 8002e36:	4b0b      	ldr	r3, [pc, #44]	; (8002e64 <LoopForever+0xe>)
 8002e38:	1842      	adds	r2, r0, r1
 8002e3a:	429a      	cmp	r2, r3
 8002e3c:	d3f6      	bcc.n	8002e2c <CopyDataInit>
 8002e3e:	4a0a      	ldr	r2, [pc, #40]	; (8002e68 <LoopForever+0x12>)
 8002e40:	e002      	b.n	8002e48 <LoopFillZerobss>

08002e42 <FillZerobss>:
 8002e42:	2300      	movs	r3, #0
 8002e44:	f842 3b04 	str.w	r3, [r2], #4

08002e48 <LoopFillZerobss>:
 8002e48:	4b08      	ldr	r3, [pc, #32]	; (8002e6c <LoopForever+0x16>)
 8002e4a:	429a      	cmp	r2, r3
 8002e4c:	d3f9      	bcc.n	8002e42 <FillZerobss>
 8002e4e:	f004 ff53 	bl	8007cf8 <__libc_init_array>
 8002e52:	f7fe f8e5 	bl	8001020 <main>

08002e56 <LoopForever>:
 8002e56:	e7fe      	b.n	8002e56 <LoopForever>
 8002e58:	20010000 	.word	0x20010000
 8002e5c:	080090c8 	.word	0x080090c8
 8002e60:	20000000 	.word	0x20000000
 8002e64:	20000018 	.word	0x20000018
 8002e68:	20000018 	.word	0x20000018
 8002e6c:	200004e8 	.word	0x200004e8

08002e70 <ADC1_IRQHandler>:
 8002e70:	e7fe      	b.n	8002e70 <ADC1_IRQHandler>

08002e72 <HAL_Init>:
 8002e72:	b580      	push	{r7, lr}
 8002e74:	b082      	sub	sp, #8
 8002e76:	af00      	add	r7, sp, #0
 8002e78:	2300      	movs	r3, #0
 8002e7a:	71fb      	strb	r3, [r7, #7]
 8002e7c:	2003      	movs	r0, #3
 8002e7e:	f001 faa1 	bl	80043c4 <HAL_NVIC_SetPriorityGrouping>
 8002e82:	2000      	movs	r0, #0
 8002e84:	f000 f80e 	bl	8002ea4 <HAL_InitTick>
 8002e88:	4603      	mov	r3, r0
 8002e8a:	2b00      	cmp	r3, #0
 8002e8c:	d002      	beq.n	8002e94 <HAL_Init+0x22>
 8002e8e:	2301      	movs	r3, #1
 8002e90:	71fb      	strb	r3, [r7, #7]
 8002e92:	e001      	b.n	8002e98 <HAL_Init+0x26>
 8002e94:	f7ff fd20 	bl	80028d8 <HAL_MspInit>
 8002e98:	79fb      	ldrb	r3, [r7, #7]
 8002e9a:	4618      	mov	r0, r3
 8002e9c:	3708      	adds	r7, #8
 8002e9e:	46bd      	mov	sp, r7
 8002ea0:	bd80      	pop	{r7, pc}
	...

08002ea4 <HAL_InitTick>:
 8002ea4:	b580      	push	{r7, lr}
 8002ea6:	b084      	sub	sp, #16
 8002ea8:	af00      	add	r7, sp, #0
 8002eaa:	6078      	str	r0, [r7, #4]
 8002eac:	2300      	movs	r3, #0
 8002eae:	73fb      	strb	r3, [r7, #15]
 8002eb0:	4b17      	ldr	r3, [pc, #92]	; (8002f10 <HAL_InitTick+0x6c>)
 8002eb2:	781b      	ldrb	r3, [r3, #0]
 8002eb4:	2b00      	cmp	r3, #0
 8002eb6:	d023      	beq.n	8002f00 <HAL_InitTick+0x5c>
 8002eb8:	4b16      	ldr	r3, [pc, #88]	; (8002f14 <HAL_InitTick+0x70>)
 8002eba:	681a      	ldr	r2, [r3, #0]
 8002ebc:	4b14      	ldr	r3, [pc, #80]	; (8002f10 <HAL_InitTick+0x6c>)
 8002ebe:	781b      	ldrb	r3, [r3, #0]
 8002ec0:	4619      	mov	r1, r3
 8002ec2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002ec6:	fbb3 f3f1 	udiv	r3, r3, r1
 8002eca:	fbb2 f3f3 	udiv	r3, r2, r3
 8002ece:	4618      	mov	r0, r3
 8002ed0:	f001 faad 	bl	800442e <HAL_SYSTICK_Config>
 8002ed4:	4603      	mov	r3, r0
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d10f      	bne.n	8002efa <HAL_InitTick+0x56>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	2b0f      	cmp	r3, #15
 8002ede:	d809      	bhi.n	8002ef4 <HAL_InitTick+0x50>
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	6879      	ldr	r1, [r7, #4]
 8002ee4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002ee8:	f001 fa77 	bl	80043da <HAL_NVIC_SetPriority>
 8002eec:	4a0a      	ldr	r2, [pc, #40]	; (8002f18 <HAL_InitTick+0x74>)
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	6013      	str	r3, [r2, #0]
 8002ef2:	e007      	b.n	8002f04 <HAL_InitTick+0x60>
 8002ef4:	2301      	movs	r3, #1
 8002ef6:	73fb      	strb	r3, [r7, #15]
 8002ef8:	e004      	b.n	8002f04 <HAL_InitTick+0x60>
 8002efa:	2301      	movs	r3, #1
 8002efc:	73fb      	strb	r3, [r7, #15]
 8002efe:	e001      	b.n	8002f04 <HAL_InitTick+0x60>
 8002f00:	2301      	movs	r3, #1
 8002f02:	73fb      	strb	r3, [r7, #15]
 8002f04:	7bfb      	ldrb	r3, [r7, #15]
 8002f06:	4618      	mov	r0, r3
 8002f08:	3710      	adds	r7, #16
 8002f0a:	46bd      	mov	sp, r7
 8002f0c:	bd80      	pop	{r7, pc}
 8002f0e:	bf00      	nop
 8002f10:	20000014 	.word	0x20000014
 8002f14:	2000000c 	.word	0x2000000c
 8002f18:	20000010 	.word	0x20000010

08002f1c <HAL_IncTick>:
 8002f1c:	b480      	push	{r7}
 8002f1e:	af00      	add	r7, sp, #0
 8002f20:	4b06      	ldr	r3, [pc, #24]	; (8002f3c <HAL_IncTick+0x20>)
 8002f22:	781b      	ldrb	r3, [r3, #0]
 8002f24:	461a      	mov	r2, r3
 8002f26:	4b06      	ldr	r3, [pc, #24]	; (8002f40 <HAL_IncTick+0x24>)
 8002f28:	681b      	ldr	r3, [r3, #0]
 8002f2a:	4413      	add	r3, r2
 8002f2c:	4a04      	ldr	r2, [pc, #16]	; (8002f40 <HAL_IncTick+0x24>)
 8002f2e:	6013      	str	r3, [r2, #0]
 8002f30:	bf00      	nop
 8002f32:	46bd      	mov	sp, r7
 8002f34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f38:	4770      	bx	lr
 8002f3a:	bf00      	nop
 8002f3c:	20000014 	.word	0x20000014
 8002f40:	200004e4 	.word	0x200004e4

08002f44 <HAL_GetTick>:
 8002f44:	b480      	push	{r7}
 8002f46:	af00      	add	r7, sp, #0
 8002f48:	4b03      	ldr	r3, [pc, #12]	; (8002f58 <HAL_GetTick+0x14>)
 8002f4a:	681b      	ldr	r3, [r3, #0]
 8002f4c:	4618      	mov	r0, r3
 8002f4e:	46bd      	mov	sp, r7
 8002f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f54:	4770      	bx	lr
 8002f56:	bf00      	nop
 8002f58:	200004e4 	.word	0x200004e4

08002f5c <LL_ADC_SetCommonClock>:
 8002f5c:	b480      	push	{r7}
 8002f5e:	b083      	sub	sp, #12
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	6078      	str	r0, [r7, #4]
 8002f64:	6039      	str	r1, [r7, #0]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	689b      	ldr	r3, [r3, #8]
 8002f6a:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8002f6e:	683b      	ldr	r3, [r7, #0]
 8002f70:	431a      	orrs	r2, r3
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	609a      	str	r2, [r3, #8]
 8002f76:	bf00      	nop
 8002f78:	370c      	adds	r7, #12
 8002f7a:	46bd      	mov	sp, r7
 8002f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f80:	4770      	bx	lr

08002f82 <LL_ADC_SetCommonPathInternalCh>:
 8002f82:	b480      	push	{r7}
 8002f84:	b083      	sub	sp, #12
 8002f86:	af00      	add	r7, sp, #0
 8002f88:	6078      	str	r0, [r7, #4]
 8002f8a:	6039      	str	r1, [r7, #0]
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	689b      	ldr	r3, [r3, #8]
 8002f90:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8002f94:	683b      	ldr	r3, [r7, #0]
 8002f96:	431a      	orrs	r2, r3
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	609a      	str	r2, [r3, #8]
 8002f9c:	bf00      	nop
 8002f9e:	370c      	adds	r7, #12
 8002fa0:	46bd      	mov	sp, r7
 8002fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fa6:	4770      	bx	lr

08002fa8 <LL_ADC_GetCommonPathInternalCh>:
 8002fa8:	b480      	push	{r7}
 8002faa:	b083      	sub	sp, #12
 8002fac:	af00      	add	r7, sp, #0
 8002fae:	6078      	str	r0, [r7, #4]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	689b      	ldr	r3, [r3, #8]
 8002fb4:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
 8002fb8:	4618      	mov	r0, r3
 8002fba:	370c      	adds	r7, #12
 8002fbc:	46bd      	mov	sp, r7
 8002fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fc2:	4770      	bx	lr

08002fc4 <LL_ADC_SetOffset>:
 8002fc4:	b480      	push	{r7}
 8002fc6:	b087      	sub	sp, #28
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	60f8      	str	r0, [r7, #12]
 8002fcc:	60b9      	str	r1, [r7, #8]
 8002fce:	607a      	str	r2, [r7, #4]
 8002fd0:	603b      	str	r3, [r7, #0]
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	3360      	adds	r3, #96	; 0x60
 8002fd6:	461a      	mov	r2, r3
 8002fd8:	68bb      	ldr	r3, [r7, #8]
 8002fda:	009b      	lsls	r3, r3, #2
 8002fdc:	4413      	add	r3, r2
 8002fde:	617b      	str	r3, [r7, #20]
 8002fe0:	697b      	ldr	r3, [r7, #20]
 8002fe2:	681a      	ldr	r2, [r3, #0]
 8002fe4:	4b08      	ldr	r3, [pc, #32]	; (8003008 <LL_ADC_SetOffset+0x44>)
 8002fe6:	4013      	ands	r3, r2
 8002fe8:	687a      	ldr	r2, [r7, #4]
 8002fea:	f002 41f8 	and.w	r1, r2, #2080374784	; 0x7c000000
 8002fee:	683a      	ldr	r2, [r7, #0]
 8002ff0:	430a      	orrs	r2, r1
 8002ff2:	4313      	orrs	r3, r2
 8002ff4:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8002ff8:	697b      	ldr	r3, [r7, #20]
 8002ffa:	601a      	str	r2, [r3, #0]
 8002ffc:	bf00      	nop
 8002ffe:	371c      	adds	r7, #28
 8003000:	46bd      	mov	sp, r7
 8003002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003006:	4770      	bx	lr
 8003008:	03fff000 	.word	0x03fff000

0800300c <LL_ADC_GetOffsetChannel>:
 800300c:	b480      	push	{r7}
 800300e:	b085      	sub	sp, #20
 8003010:	af00      	add	r7, sp, #0
 8003012:	6078      	str	r0, [r7, #4]
 8003014:	6039      	str	r1, [r7, #0]
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	3360      	adds	r3, #96	; 0x60
 800301a:	461a      	mov	r2, r3
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	009b      	lsls	r3, r3, #2
 8003020:	4413      	add	r3, r2
 8003022:	60fb      	str	r3, [r7, #12]
 8003024:	68fb      	ldr	r3, [r7, #12]
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
 800302c:	4618      	mov	r0, r3
 800302e:	3714      	adds	r7, #20
 8003030:	46bd      	mov	sp, r7
 8003032:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003036:	4770      	bx	lr

08003038 <LL_ADC_SetOffsetState>:
 8003038:	b480      	push	{r7}
 800303a:	b087      	sub	sp, #28
 800303c:	af00      	add	r7, sp, #0
 800303e:	60f8      	str	r0, [r7, #12]
 8003040:	60b9      	str	r1, [r7, #8]
 8003042:	607a      	str	r2, [r7, #4]
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	3360      	adds	r3, #96	; 0x60
 8003048:	461a      	mov	r2, r3
 800304a:	68bb      	ldr	r3, [r7, #8]
 800304c:	009b      	lsls	r3, r3, #2
 800304e:	4413      	add	r3, r2
 8003050:	617b      	str	r3, [r7, #20]
 8003052:	697b      	ldr	r3, [r7, #20]
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	431a      	orrs	r2, r3
 800305e:	697b      	ldr	r3, [r7, #20]
 8003060:	601a      	str	r2, [r3, #0]
 8003062:	bf00      	nop
 8003064:	371c      	adds	r7, #28
 8003066:	46bd      	mov	sp, r7
 8003068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800306c:	4770      	bx	lr

0800306e <LL_ADC_REG_IsTriggerSourceSWStart>:
 800306e:	b480      	push	{r7}
 8003070:	b083      	sub	sp, #12
 8003072:	af00      	add	r7, sp, #0
 8003074:	6078      	str	r0, [r7, #4]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	68db      	ldr	r3, [r3, #12]
 800307a:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800307e:	2b00      	cmp	r3, #0
 8003080:	d101      	bne.n	8003086 <LL_ADC_REG_IsTriggerSourceSWStart+0x18>
 8003082:	2301      	movs	r3, #1
 8003084:	e000      	b.n	8003088 <LL_ADC_REG_IsTriggerSourceSWStart+0x1a>
 8003086:	2300      	movs	r3, #0
 8003088:	4618      	mov	r0, r3
 800308a:	370c      	adds	r7, #12
 800308c:	46bd      	mov	sp, r7
 800308e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003092:	4770      	bx	lr

08003094 <LL_ADC_REG_SetSequencerRanks>:
 8003094:	b480      	push	{r7}
 8003096:	b087      	sub	sp, #28
 8003098:	af00      	add	r7, sp, #0
 800309a:	60f8      	str	r0, [r7, #12]
 800309c:	60b9      	str	r1, [r7, #8]
 800309e:	607a      	str	r2, [r7, #4]
 80030a0:	68fb      	ldr	r3, [r7, #12]
 80030a2:	3330      	adds	r3, #48	; 0x30
 80030a4:	461a      	mov	r2, r3
 80030a6:	68bb      	ldr	r3, [r7, #8]
 80030a8:	0a1b      	lsrs	r3, r3, #8
 80030aa:	009b      	lsls	r3, r3, #2
 80030ac:	f003 030c 	and.w	r3, r3, #12
 80030b0:	4413      	add	r3, r2
 80030b2:	617b      	str	r3, [r7, #20]
 80030b4:	697b      	ldr	r3, [r7, #20]
 80030b6:	681a      	ldr	r2, [r3, #0]
 80030b8:	68bb      	ldr	r3, [r7, #8]
 80030ba:	f003 031f 	and.w	r3, r3, #31
 80030be:	211f      	movs	r1, #31
 80030c0:	fa01 f303 	lsl.w	r3, r1, r3
 80030c4:	43db      	mvns	r3, r3
 80030c6:	401a      	ands	r2, r3
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	0e9b      	lsrs	r3, r3, #26
 80030cc:	f003 011f 	and.w	r1, r3, #31
 80030d0:	68bb      	ldr	r3, [r7, #8]
 80030d2:	f003 031f 	and.w	r3, r3, #31
 80030d6:	fa01 f303 	lsl.w	r3, r1, r3
 80030da:	431a      	orrs	r2, r3
 80030dc:	697b      	ldr	r3, [r7, #20]
 80030de:	601a      	str	r2, [r3, #0]
 80030e0:	bf00      	nop
 80030e2:	371c      	adds	r7, #28
 80030e4:	46bd      	mov	sp, r7
 80030e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030ea:	4770      	bx	lr

080030ec <LL_ADC_SetChannelSamplingTime>:
 80030ec:	b480      	push	{r7}
 80030ee:	b087      	sub	sp, #28
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	60f8      	str	r0, [r7, #12]
 80030f4:	60b9      	str	r1, [r7, #8]
 80030f6:	607a      	str	r2, [r7, #4]
 80030f8:	68fb      	ldr	r3, [r7, #12]
 80030fa:	3314      	adds	r3, #20
 80030fc:	461a      	mov	r2, r3
 80030fe:	68bb      	ldr	r3, [r7, #8]
 8003100:	0e5b      	lsrs	r3, r3, #25
 8003102:	009b      	lsls	r3, r3, #2
 8003104:	f003 0304 	and.w	r3, r3, #4
 8003108:	4413      	add	r3, r2
 800310a:	617b      	str	r3, [r7, #20]
 800310c:	697b      	ldr	r3, [r7, #20]
 800310e:	681a      	ldr	r2, [r3, #0]
 8003110:	68bb      	ldr	r3, [r7, #8]
 8003112:	0d1b      	lsrs	r3, r3, #20
 8003114:	f003 031f 	and.w	r3, r3, #31
 8003118:	2107      	movs	r1, #7
 800311a:	fa01 f303 	lsl.w	r3, r1, r3
 800311e:	43db      	mvns	r3, r3
 8003120:	401a      	ands	r2, r3
 8003122:	68bb      	ldr	r3, [r7, #8]
 8003124:	0d1b      	lsrs	r3, r3, #20
 8003126:	f003 031f 	and.w	r3, r3, #31
 800312a:	6879      	ldr	r1, [r7, #4]
 800312c:	fa01 f303 	lsl.w	r3, r1, r3
 8003130:	431a      	orrs	r2, r3
 8003132:	697b      	ldr	r3, [r7, #20]
 8003134:	601a      	str	r2, [r3, #0]
 8003136:	bf00      	nop
 8003138:	371c      	adds	r7, #28
 800313a:	46bd      	mov	sp, r7
 800313c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003140:	4770      	bx	lr
	...

08003144 <LL_ADC_SetChannelSingleDiff>:
 8003144:	b480      	push	{r7}
 8003146:	b085      	sub	sp, #20
 8003148:	af00      	add	r7, sp, #0
 800314a:	60f8      	str	r0, [r7, #12]
 800314c:	60b9      	str	r1, [r7, #8]
 800314e:	607a      	str	r2, [r7, #4]
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 8003156:	68bb      	ldr	r3, [r7, #8]
 8003158:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800315c:	43db      	mvns	r3, r3
 800315e:	401a      	ands	r2, r3
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	f003 0318 	and.w	r3, r3, #24
 8003166:	4908      	ldr	r1, [pc, #32]	; (8003188 <LL_ADC_SetChannelSingleDiff+0x44>)
 8003168:	40d9      	lsrs	r1, r3
 800316a:	68bb      	ldr	r3, [r7, #8]
 800316c:	400b      	ands	r3, r1
 800316e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003172:	431a      	orrs	r2, r3
 8003174:	68fb      	ldr	r3, [r7, #12]
 8003176:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 800317a:	bf00      	nop
 800317c:	3714      	adds	r7, #20
 800317e:	46bd      	mov	sp, r7
 8003180:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003184:	4770      	bx	lr
 8003186:	bf00      	nop
 8003188:	0007ffff 	.word	0x0007ffff

0800318c <LL_ADC_DisableDeepPowerDown>:
 800318c:	b480      	push	{r7}
 800318e:	b083      	sub	sp, #12
 8003190:	af00      	add	r7, sp, #0
 8003192:	6078      	str	r0, [r7, #4]
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	689b      	ldr	r3, [r3, #8]
 8003198:	f023 4320 	bic.w	r3, r3, #2684354560	; 0xa0000000
 800319c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80031a0:	687a      	ldr	r2, [r7, #4]
 80031a2:	6093      	str	r3, [r2, #8]
 80031a4:	bf00      	nop
 80031a6:	370c      	adds	r7, #12
 80031a8:	46bd      	mov	sp, r7
 80031aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031ae:	4770      	bx	lr

080031b0 <LL_ADC_IsDeepPowerDownEnabled>:
 80031b0:	b480      	push	{r7}
 80031b2:	b083      	sub	sp, #12
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	6078      	str	r0, [r7, #4]
 80031b8:	687b      	ldr	r3, [r7, #4]
 80031ba:	689b      	ldr	r3, [r3, #8]
 80031bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80031c0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80031c4:	d101      	bne.n	80031ca <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 80031c6:	2301      	movs	r3, #1
 80031c8:	e000      	b.n	80031cc <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 80031ca:	2300      	movs	r3, #0
 80031cc:	4618      	mov	r0, r3
 80031ce:	370c      	adds	r7, #12
 80031d0:	46bd      	mov	sp, r7
 80031d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031d6:	4770      	bx	lr

080031d8 <LL_ADC_EnableInternalRegulator>:
 80031d8:	b480      	push	{r7}
 80031da:	b083      	sub	sp, #12
 80031dc:	af00      	add	r7, sp, #0
 80031de:	6078      	str	r0, [r7, #4]
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	689b      	ldr	r3, [r3, #8]
 80031e4:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 80031e8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80031ec:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	609a      	str	r2, [r3, #8]
 80031f4:	bf00      	nop
 80031f6:	370c      	adds	r7, #12
 80031f8:	46bd      	mov	sp, r7
 80031fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fe:	4770      	bx	lr

08003200 <LL_ADC_IsInternalRegulatorEnabled>:
 8003200:	b480      	push	{r7}
 8003202:	b083      	sub	sp, #12
 8003204:	af00      	add	r7, sp, #0
 8003206:	6078      	str	r0, [r7, #4]
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	689b      	ldr	r3, [r3, #8]
 800320c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003210:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8003214:	d101      	bne.n	800321a <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8003216:	2301      	movs	r3, #1
 8003218:	e000      	b.n	800321c <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 800321a:	2300      	movs	r3, #0
 800321c:	4618      	mov	r0, r3
 800321e:	370c      	adds	r7, #12
 8003220:	46bd      	mov	sp, r7
 8003222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003226:	4770      	bx	lr

08003228 <LL_ADC_Enable>:
 8003228:	b480      	push	{r7}
 800322a:	b083      	sub	sp, #12
 800322c:	af00      	add	r7, sp, #0
 800322e:	6078      	str	r0, [r7, #4]
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	689b      	ldr	r3, [r3, #8]
 8003234:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003238:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800323c:	f043 0201 	orr.w	r2, r3, #1
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	609a      	str	r2, [r3, #8]
 8003244:	bf00      	nop
 8003246:	370c      	adds	r7, #12
 8003248:	46bd      	mov	sp, r7
 800324a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324e:	4770      	bx	lr

08003250 <LL_ADC_Disable>:
 8003250:	b480      	push	{r7}
 8003252:	b083      	sub	sp, #12
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	689b      	ldr	r3, [r3, #8]
 800325c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003260:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003264:	f043 0202 	orr.w	r2, r3, #2
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	609a      	str	r2, [r3, #8]
 800326c:	bf00      	nop
 800326e:	370c      	adds	r7, #12
 8003270:	46bd      	mov	sp, r7
 8003272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003276:	4770      	bx	lr

08003278 <LL_ADC_IsEnabled>:
 8003278:	b480      	push	{r7}
 800327a:	b083      	sub	sp, #12
 800327c:	af00      	add	r7, sp, #0
 800327e:	6078      	str	r0, [r7, #4]
 8003280:	687b      	ldr	r3, [r7, #4]
 8003282:	689b      	ldr	r3, [r3, #8]
 8003284:	f003 0301 	and.w	r3, r3, #1
 8003288:	2b01      	cmp	r3, #1
 800328a:	d101      	bne.n	8003290 <LL_ADC_IsEnabled+0x18>
 800328c:	2301      	movs	r3, #1
 800328e:	e000      	b.n	8003292 <LL_ADC_IsEnabled+0x1a>
 8003290:	2300      	movs	r3, #0
 8003292:	4618      	mov	r0, r3
 8003294:	370c      	adds	r7, #12
 8003296:	46bd      	mov	sp, r7
 8003298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800329c:	4770      	bx	lr

0800329e <LL_ADC_IsDisableOngoing>:
 800329e:	b480      	push	{r7}
 80032a0:	b083      	sub	sp, #12
 80032a2:	af00      	add	r7, sp, #0
 80032a4:	6078      	str	r0, [r7, #4]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	689b      	ldr	r3, [r3, #8]
 80032aa:	f003 0302 	and.w	r3, r3, #2
 80032ae:	2b02      	cmp	r3, #2
 80032b0:	d101      	bne.n	80032b6 <LL_ADC_IsDisableOngoing+0x18>
 80032b2:	2301      	movs	r3, #1
 80032b4:	e000      	b.n	80032b8 <LL_ADC_IsDisableOngoing+0x1a>
 80032b6:	2300      	movs	r3, #0
 80032b8:	4618      	mov	r0, r3
 80032ba:	370c      	adds	r7, #12
 80032bc:	46bd      	mov	sp, r7
 80032be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c2:	4770      	bx	lr

080032c4 <LL_ADC_REG_StartConversion>:
 80032c4:	b480      	push	{r7}
 80032c6:	b083      	sub	sp, #12
 80032c8:	af00      	add	r7, sp, #0
 80032ca:	6078      	str	r0, [r7, #4]
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	689b      	ldr	r3, [r3, #8]
 80032d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80032d4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80032d8:	f043 0204 	orr.w	r2, r3, #4
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	609a      	str	r2, [r3, #8]
 80032e0:	bf00      	nop
 80032e2:	370c      	adds	r7, #12
 80032e4:	46bd      	mov	sp, r7
 80032e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ea:	4770      	bx	lr

080032ec <LL_ADC_REG_IsConversionOngoing>:
 80032ec:	b480      	push	{r7}
 80032ee:	b083      	sub	sp, #12
 80032f0:	af00      	add	r7, sp, #0
 80032f2:	6078      	str	r0, [r7, #4]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	689b      	ldr	r3, [r3, #8]
 80032f8:	f003 0304 	and.w	r3, r3, #4
 80032fc:	2b04      	cmp	r3, #4
 80032fe:	d101      	bne.n	8003304 <LL_ADC_REG_IsConversionOngoing+0x18>
 8003300:	2301      	movs	r3, #1
 8003302:	e000      	b.n	8003306 <LL_ADC_REG_IsConversionOngoing+0x1a>
 8003304:	2300      	movs	r3, #0
 8003306:	4618      	mov	r0, r3
 8003308:	370c      	adds	r7, #12
 800330a:	46bd      	mov	sp, r7
 800330c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003310:	4770      	bx	lr

08003312 <LL_ADC_INJ_IsConversionOngoing>:
 8003312:	b480      	push	{r7}
 8003314:	b083      	sub	sp, #12
 8003316:	af00      	add	r7, sp, #0
 8003318:	6078      	str	r0, [r7, #4]
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	689b      	ldr	r3, [r3, #8]
 800331e:	f003 0308 	and.w	r3, r3, #8
 8003322:	2b08      	cmp	r3, #8
 8003324:	d101      	bne.n	800332a <LL_ADC_INJ_IsConversionOngoing+0x18>
 8003326:	2301      	movs	r3, #1
 8003328:	e000      	b.n	800332c <LL_ADC_INJ_IsConversionOngoing+0x1a>
 800332a:	2300      	movs	r3, #0
 800332c:	4618      	mov	r0, r3
 800332e:	370c      	adds	r7, #12
 8003330:	46bd      	mov	sp, r7
 8003332:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003336:	4770      	bx	lr

08003338 <HAL_ADC_Init>:
 8003338:	b580      	push	{r7, lr}
 800333a:	b088      	sub	sp, #32
 800333c:	af00      	add	r7, sp, #0
 800333e:	6078      	str	r0, [r7, #4]
 8003340:	2300      	movs	r3, #0
 8003342:	77fb      	strb	r3, [r7, #31]
 8003344:	2300      	movs	r3, #0
 8003346:	60bb      	str	r3, [r7, #8]
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	2b00      	cmp	r3, #0
 800334c:	d101      	bne.n	8003352 <HAL_ADC_Init+0x1a>
 800334e:	2301      	movs	r3, #1
 8003350:	e12c      	b.n	80035ac <HAL_ADC_Init+0x274>
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	691b      	ldr	r3, [r3, #16]
 8003356:	2b00      	cmp	r3, #0
 8003358:	687b      	ldr	r3, [r7, #4]
 800335a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800335c:	2b00      	cmp	r3, #0
 800335e:	d109      	bne.n	8003374 <HAL_ADC_Init+0x3c>
 8003360:	6878      	ldr	r0, [r7, #4]
 8003362:	f7ff fadd 	bl	8002920 <HAL_ADC_MspInit>
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	2200      	movs	r2, #0
 800336a:	659a      	str	r2, [r3, #88]	; 0x58
 800336c:	687b      	ldr	r3, [r7, #4]
 800336e:	2200      	movs	r2, #0
 8003370:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	4618      	mov	r0, r3
 800337a:	f7ff ff19 	bl	80031b0 <LL_ADC_IsDeepPowerDownEnabled>
 800337e:	4603      	mov	r3, r0
 8003380:	2b00      	cmp	r3, #0
 8003382:	d004      	beq.n	800338e <HAL_ADC_Init+0x56>
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	4618      	mov	r0, r3
 800338a:	f7ff feff 	bl	800318c <LL_ADC_DisableDeepPowerDown>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	4618      	mov	r0, r3
 8003394:	f7ff ff34 	bl	8003200 <LL_ADC_IsInternalRegulatorEnabled>
 8003398:	4603      	mov	r3, r0
 800339a:	2b00      	cmp	r3, #0
 800339c:	d115      	bne.n	80033ca <HAL_ADC_Init+0x92>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	4618      	mov	r0, r3
 80033a4:	f7ff ff18 	bl	80031d8 <LL_ADC_EnableInternalRegulator>
 80033a8:	4b82      	ldr	r3, [pc, #520]	; (80035b4 <HAL_ADC_Init+0x27c>)
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	099b      	lsrs	r3, r3, #6
 80033ae:	4a82      	ldr	r2, [pc, #520]	; (80035b8 <HAL_ADC_Init+0x280>)
 80033b0:	fba2 2303 	umull	r2, r3, r2, r3
 80033b4:	099b      	lsrs	r3, r3, #6
 80033b6:	3301      	adds	r3, #1
 80033b8:	005b      	lsls	r3, r3, #1
 80033ba:	60bb      	str	r3, [r7, #8]
 80033bc:	e002      	b.n	80033c4 <HAL_ADC_Init+0x8c>
 80033be:	68bb      	ldr	r3, [r7, #8]
 80033c0:	3b01      	subs	r3, #1
 80033c2:	60bb      	str	r3, [r7, #8]
 80033c4:	68bb      	ldr	r3, [r7, #8]
 80033c6:	2b00      	cmp	r3, #0
 80033c8:	d1f9      	bne.n	80033be <HAL_ADC_Init+0x86>
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	4618      	mov	r0, r3
 80033d0:	f7ff ff16 	bl	8003200 <LL_ADC_IsInternalRegulatorEnabled>
 80033d4:	4603      	mov	r3, r0
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d10d      	bne.n	80033f6 <HAL_ADC_Init+0xbe>
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80033de:	f043 0210 	orr.w	r2, r3, #16
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	655a      	str	r2, [r3, #84]	; 0x54
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80033ea:	f043 0201 	orr.w	r2, r3, #1
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	659a      	str	r2, [r3, #88]	; 0x58
 80033f2:	2301      	movs	r3, #1
 80033f4:	77fb      	strb	r3, [r7, #31]
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	4618      	mov	r0, r3
 80033fc:	f7ff ff76 	bl	80032ec <LL_ADC_REG_IsConversionOngoing>
 8003400:	6178      	str	r0, [r7, #20]
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003406:	f003 0310 	and.w	r3, r3, #16
 800340a:	2b00      	cmp	r3, #0
 800340c:	f040 80c5 	bne.w	800359a <HAL_ADC_Init+0x262>
 8003410:	697b      	ldr	r3, [r7, #20]
 8003412:	2b00      	cmp	r3, #0
 8003414:	f040 80c1 	bne.w	800359a <HAL_ADC_Init+0x262>
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800341c:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 8003420:	f043 0202 	orr.w	r2, r3, #2
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	655a      	str	r2, [r3, #84]	; 0x54
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	4618      	mov	r0, r3
 800342e:	f7ff ff23 	bl	8003278 <LL_ADC_IsEnabled>
 8003432:	4603      	mov	r3, r0
 8003434:	2b00      	cmp	r3, #0
 8003436:	d10b      	bne.n	8003450 <HAL_ADC_Init+0x118>
 8003438:	4860      	ldr	r0, [pc, #384]	; (80035bc <HAL_ADC_Init+0x284>)
 800343a:	f7ff ff1d 	bl	8003278 <LL_ADC_IsEnabled>
 800343e:	4603      	mov	r3, r0
 8003440:	2b00      	cmp	r3, #0
 8003442:	d105      	bne.n	8003450 <HAL_ADC_Init+0x118>
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	685b      	ldr	r3, [r3, #4]
 8003448:	4619      	mov	r1, r3
 800344a:	485d      	ldr	r0, [pc, #372]	; (80035c0 <HAL_ADC_Init+0x288>)
 800344c:	f7ff fd86 	bl	8002f5c <LL_ADC_SetCommonClock>
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	7e5b      	ldrb	r3, [r3, #25]
 8003454:	035a      	lsls	r2, r3, #13
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800345a:	431a      	orrs	r2, r3
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	68db      	ldr	r3, [r3, #12]
 8003460:	431a      	orrs	r2, r3
 8003462:	687b      	ldr	r3, [r7, #4]
 8003464:	689b      	ldr	r3, [r3, #8]
 8003466:	431a      	orrs	r2, r3
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800346e:	041b      	lsls	r3, r3, #16
 8003470:	4313      	orrs	r3, r2
 8003472:	61bb      	str	r3, [r7, #24]
 8003474:	687b      	ldr	r3, [r7, #4]
 8003476:	f893 3020 	ldrb.w	r3, [r3, #32]
 800347a:	2b01      	cmp	r3, #1
 800347c:	d106      	bne.n	800348c <HAL_ADC_Init+0x154>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003482:	3b01      	subs	r3, #1
 8003484:	045b      	lsls	r3, r3, #17
 8003486:	69ba      	ldr	r2, [r7, #24]
 8003488:	4313      	orrs	r3, r2
 800348a:	61bb      	str	r3, [r7, #24]
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003490:	2b00      	cmp	r3, #0
 8003492:	d009      	beq.n	80034a8 <HAL_ADC_Init+0x170>
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003498:	f403 7270 	and.w	r2, r3, #960	; 0x3c0
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80034a0:	4313      	orrs	r3, r2
 80034a2:	69ba      	ldr	r2, [r7, #24]
 80034a4:	4313      	orrs	r3, r2
 80034a6:	61bb      	str	r3, [r7, #24]
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	681b      	ldr	r3, [r3, #0]
 80034ac:	68da      	ldr	r2, [r3, #12]
 80034ae:	4b45      	ldr	r3, [pc, #276]	; (80035c4 <HAL_ADC_Init+0x28c>)
 80034b0:	4013      	ands	r3, r2
 80034b2:	687a      	ldr	r2, [r7, #4]
 80034b4:	6812      	ldr	r2, [r2, #0]
 80034b6:	69b9      	ldr	r1, [r7, #24]
 80034b8:	430b      	orrs	r3, r1
 80034ba:	60d3      	str	r3, [r2, #12]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	4618      	mov	r0, r3
 80034c2:	f7ff ff13 	bl	80032ec <LL_ADC_REG_IsConversionOngoing>
 80034c6:	6138      	str	r0, [r7, #16]
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	4618      	mov	r0, r3
 80034ce:	f7ff ff20 	bl	8003312 <LL_ADC_INJ_IsConversionOngoing>
 80034d2:	60f8      	str	r0, [r7, #12]
 80034d4:	693b      	ldr	r3, [r7, #16]
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	d13d      	bne.n	8003556 <HAL_ADC_Init+0x21e>
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d13a      	bne.n	8003556 <HAL_ADC_Init+0x21e>
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	7e1b      	ldrb	r3, [r3, #24]
 80034e4:	039a      	lsls	r2, r3, #14
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80034ec:	005b      	lsls	r3, r3, #1
 80034ee:	4313      	orrs	r3, r2
 80034f0:	61bb      	str	r3, [r7, #24]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	68db      	ldr	r3, [r3, #12]
 80034f8:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80034fc:	f023 0302 	bic.w	r3, r3, #2
 8003500:	687a      	ldr	r2, [r7, #4]
 8003502:	6812      	ldr	r2, [r2, #0]
 8003504:	69b9      	ldr	r1, [r7, #24]
 8003506:	430b      	orrs	r3, r1
 8003508:	60d3      	str	r3, [r2, #12]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8003510:	2b01      	cmp	r3, #1
 8003512:	d118      	bne.n	8003546 <HAL_ADC_Init+0x20e>
 8003514:	687b      	ldr	r3, [r7, #4]
 8003516:	681b      	ldr	r3, [r3, #0]
 8003518:	691b      	ldr	r3, [r3, #16]
 800351a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800351e:	f023 0304 	bic.w	r3, r3, #4
 8003522:	687a      	ldr	r2, [r7, #4]
 8003524:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 8003526:	687a      	ldr	r2, [r7, #4]
 8003528:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800352a:	4311      	orrs	r1, r2
 800352c:	687a      	ldr	r2, [r7, #4]
 800352e:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8003530:	4311      	orrs	r1, r2
 8003532:	687a      	ldr	r2, [r7, #4]
 8003534:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8003536:	430a      	orrs	r2, r1
 8003538:	431a      	orrs	r2, r3
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	f042 0201 	orr.w	r2, r2, #1
 8003542:	611a      	str	r2, [r3, #16]
 8003544:	e007      	b.n	8003556 <HAL_ADC_Init+0x21e>
 8003546:	687b      	ldr	r3, [r7, #4]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	691a      	ldr	r2, [r3, #16]
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	681b      	ldr	r3, [r3, #0]
 8003550:	f022 0201 	bic.w	r2, r2, #1
 8003554:	611a      	str	r2, [r3, #16]
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	691b      	ldr	r3, [r3, #16]
 800355a:	2b01      	cmp	r3, #1
 800355c:	d10c      	bne.n	8003578 <HAL_ADC_Init+0x240>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	681b      	ldr	r3, [r3, #0]
 8003562:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003564:	f023 010f 	bic.w	r1, r3, #15
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	69db      	ldr	r3, [r3, #28]
 800356c:	1e5a      	subs	r2, r3, #1
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	681b      	ldr	r3, [r3, #0]
 8003572:	430a      	orrs	r2, r1
 8003574:	631a      	str	r2, [r3, #48]	; 0x30
 8003576:	e007      	b.n	8003588 <HAL_ADC_Init+0x250>
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800357e:	687b      	ldr	r3, [r7, #4]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	f022 020f 	bic.w	r2, r2, #15
 8003586:	631a      	str	r2, [r3, #48]	; 0x30
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800358c:	f023 0303 	bic.w	r3, r3, #3
 8003590:	f043 0201 	orr.w	r2, r3, #1
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	655a      	str	r2, [r3, #84]	; 0x54
 8003598:	e007      	b.n	80035aa <HAL_ADC_Init+0x272>
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800359e:	f043 0210 	orr.w	r2, r3, #16
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	655a      	str	r2, [r3, #84]	; 0x54
 80035a6:	2301      	movs	r3, #1
 80035a8:	77fb      	strb	r3, [r7, #31]
 80035aa:	7ffb      	ldrb	r3, [r7, #31]
 80035ac:	4618      	mov	r0, r3
 80035ae:	3720      	adds	r7, #32
 80035b0:	46bd      	mov	sp, r7
 80035b2:	bd80      	pop	{r7, pc}
 80035b4:	2000000c 	.word	0x2000000c
 80035b8:	053e2d63 	.word	0x053e2d63
 80035bc:	50040000 	.word	0x50040000
 80035c0:	50040300 	.word	0x50040300
 80035c4:	fff0c007 	.word	0xfff0c007

080035c8 <HAL_ADC_Start>:
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b084      	sub	sp, #16
 80035cc:	af00      	add	r7, sp, #0
 80035ce:	6078      	str	r0, [r7, #4]
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	4618      	mov	r0, r3
 80035d6:	f7ff fe89 	bl	80032ec <LL_ADC_REG_IsConversionOngoing>
 80035da:	4603      	mov	r3, r0
 80035dc:	2b00      	cmp	r3, #0
 80035de:	d14f      	bne.n	8003680 <HAL_ADC_Start+0xb8>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80035e6:	2b01      	cmp	r3, #1
 80035e8:	d101      	bne.n	80035ee <HAL_ADC_Start+0x26>
 80035ea:	2302      	movs	r3, #2
 80035ec:	e04b      	b.n	8003686 <HAL_ADC_Start+0xbe>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	2201      	movs	r2, #1
 80035f2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80035f6:	6878      	ldr	r0, [r7, #4]
 80035f8:	f000 fcc6 	bl	8003f88 <ADC_Enable>
 80035fc:	4603      	mov	r3, r0
 80035fe:	73fb      	strb	r3, [r7, #15]
 8003600:	7bfb      	ldrb	r3, [r7, #15]
 8003602:	2b00      	cmp	r3, #0
 8003604:	d137      	bne.n	8003676 <HAL_ADC_Start+0xae>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800360a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800360e:	f023 0301 	bic.w	r3, r3, #1
 8003612:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	655a      	str	r2, [r3, #84]	; 0x54
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800361e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003622:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003626:	d106      	bne.n	8003636 <HAL_ADC_Start+0x6e>
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800362c:	f023 0206 	bic.w	r2, r3, #6
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	659a      	str	r2, [r3, #88]	; 0x58
 8003634:	e002      	b.n	800363c <HAL_ADC_Start+0x74>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	2200      	movs	r2, #0
 800363a:	659a      	str	r2, [r3, #88]	; 0x58
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	221c      	movs	r2, #28
 8003642:	601a      	str	r2, [r3, #0]
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	2200      	movs	r2, #0
 8003648:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	68db      	ldr	r3, [r3, #12]
 8003652:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003656:	2b00      	cmp	r3, #0
 8003658:	d007      	beq.n	800366a <HAL_ADC_Start+0xa2>
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800365e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003662:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	655a      	str	r2, [r3, #84]	; 0x54
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	4618      	mov	r0, r3
 8003670:	f7ff fe28 	bl	80032c4 <LL_ADC_REG_StartConversion>
 8003674:	e006      	b.n	8003684 <HAL_ADC_Start+0xbc>
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	2200      	movs	r2, #0
 800367a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800367e:	e001      	b.n	8003684 <HAL_ADC_Start+0xbc>
 8003680:	2302      	movs	r3, #2
 8003682:	73fb      	strb	r3, [r7, #15]
 8003684:	7bfb      	ldrb	r3, [r7, #15]
 8003686:	4618      	mov	r0, r3
 8003688:	3710      	adds	r7, #16
 800368a:	46bd      	mov	sp, r7
 800368c:	bd80      	pop	{r7, pc}

0800368e <HAL_ADC_PollForConversion>:
 800368e:	b580      	push	{r7, lr}
 8003690:	b086      	sub	sp, #24
 8003692:	af00      	add	r7, sp, #0
 8003694:	6078      	str	r0, [r7, #4]
 8003696:	6039      	str	r1, [r7, #0]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	695b      	ldr	r3, [r3, #20]
 800369c:	2b08      	cmp	r3, #8
 800369e:	d102      	bne.n	80036a6 <HAL_ADC_PollForConversion+0x18>
 80036a0:	2308      	movs	r3, #8
 80036a2:	617b      	str	r3, [r7, #20]
 80036a4:	e010      	b.n	80036c8 <HAL_ADC_PollForConversion+0x3a>
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	68db      	ldr	r3, [r3, #12]
 80036ac:	f003 0301 	and.w	r3, r3, #1
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d007      	beq.n	80036c4 <HAL_ADC_PollForConversion+0x36>
 80036b4:	687b      	ldr	r3, [r7, #4]
 80036b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80036b8:	f043 0220 	orr.w	r2, r3, #32
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	655a      	str	r2, [r3, #84]	; 0x54
 80036c0:	2301      	movs	r3, #1
 80036c2:	e06f      	b.n	80037a4 <HAL_ADC_PollForConversion+0x116>
 80036c4:	2304      	movs	r3, #4
 80036c6:	617b      	str	r3, [r7, #20]
 80036c8:	f7ff fc3c 	bl	8002f44 <HAL_GetTick>
 80036cc:	6138      	str	r0, [r7, #16]
 80036ce:	e021      	b.n	8003714 <HAL_ADC_PollForConversion+0x86>
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 80036d6:	d01d      	beq.n	8003714 <HAL_ADC_PollForConversion+0x86>
 80036d8:	f7ff fc34 	bl	8002f44 <HAL_GetTick>
 80036dc:	4602      	mov	r2, r0
 80036de:	693b      	ldr	r3, [r7, #16]
 80036e0:	1ad3      	subs	r3, r2, r3
 80036e2:	683a      	ldr	r2, [r7, #0]
 80036e4:	429a      	cmp	r2, r3
 80036e6:	d302      	bcc.n	80036ee <HAL_ADC_PollForConversion+0x60>
 80036e8:	683b      	ldr	r3, [r7, #0]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d112      	bne.n	8003714 <HAL_ADC_PollForConversion+0x86>
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	681b      	ldr	r3, [r3, #0]
 80036f2:	681a      	ldr	r2, [r3, #0]
 80036f4:	697b      	ldr	r3, [r7, #20]
 80036f6:	4013      	ands	r3, r2
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d10b      	bne.n	8003714 <HAL_ADC_PollForConversion+0x86>
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003700:	f043 0204 	orr.w	r2, r3, #4
 8003704:	687b      	ldr	r3, [r7, #4]
 8003706:	655a      	str	r2, [r3, #84]	; 0x54
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	2200      	movs	r2, #0
 800370c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003710:	2303      	movs	r3, #3
 8003712:	e047      	b.n	80037a4 <HAL_ADC_PollForConversion+0x116>
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	681a      	ldr	r2, [r3, #0]
 800371a:	697b      	ldr	r3, [r7, #20]
 800371c:	4013      	ands	r3, r2
 800371e:	2b00      	cmp	r3, #0
 8003720:	d0d6      	beq.n	80036d0 <HAL_ADC_PollForConversion+0x42>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003726:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	655a      	str	r2, [r3, #84]	; 0x54
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4618      	mov	r0, r3
 8003734:	f7ff fc9b 	bl	800306e <LL_ADC_REG_IsTriggerSourceSWStart>
 8003738:	4603      	mov	r3, r0
 800373a:	2b00      	cmp	r3, #0
 800373c:	d01c      	beq.n	8003778 <HAL_ADC_PollForConversion+0xea>
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	7e5b      	ldrb	r3, [r3, #25]
 8003742:	2b00      	cmp	r3, #0
 8003744:	d118      	bne.n	8003778 <HAL_ADC_PollForConversion+0xea>
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	f003 0308 	and.w	r3, r3, #8
 8003750:	2b08      	cmp	r3, #8
 8003752:	d111      	bne.n	8003778 <HAL_ADC_PollForConversion+0xea>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003758:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	655a      	str	r2, [r3, #84]	; 0x54
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003764:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003768:	2b00      	cmp	r3, #0
 800376a:	d105      	bne.n	8003778 <HAL_ADC_PollForConversion+0xea>
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003770:	f043 0201 	orr.w	r2, r3, #1
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	655a      	str	r2, [r3, #84]	; 0x54
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	68db      	ldr	r3, [r3, #12]
 800377e:	60fb      	str	r3, [r7, #12]
 8003780:	697b      	ldr	r3, [r7, #20]
 8003782:	2b08      	cmp	r3, #8
 8003784:	d104      	bne.n	8003790 <HAL_ADC_PollForConversion+0x102>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	681b      	ldr	r3, [r3, #0]
 800378a:	2208      	movs	r2, #8
 800378c:	601a      	str	r2, [r3, #0]
 800378e:	e008      	b.n	80037a2 <HAL_ADC_PollForConversion+0x114>
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003796:	2b00      	cmp	r3, #0
 8003798:	d103      	bne.n	80037a2 <HAL_ADC_PollForConversion+0x114>
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	681b      	ldr	r3, [r3, #0]
 800379e:	220c      	movs	r2, #12
 80037a0:	601a      	str	r2, [r3, #0]
 80037a2:	2300      	movs	r3, #0
 80037a4:	4618      	mov	r0, r3
 80037a6:	3718      	adds	r7, #24
 80037a8:	46bd      	mov	sp, r7
 80037aa:	bd80      	pop	{r7, pc}

080037ac <HAL_ADC_GetValue>:
 80037ac:	b480      	push	{r7}
 80037ae:	b083      	sub	sp, #12
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	6078      	str	r0, [r7, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ba:	4618      	mov	r0, r3
 80037bc:	370c      	adds	r7, #12
 80037be:	46bd      	mov	sp, r7
 80037c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c4:	4770      	bx	lr
	...

080037c8 <HAL_ADC_ConfigChannel>:
 80037c8:	b580      	push	{r7, lr}
 80037ca:	b0b6      	sub	sp, #216	; 0xd8
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	6078      	str	r0, [r7, #4]
 80037d0:	6039      	str	r1, [r7, #0]
 80037d2:	2300      	movs	r3, #0
 80037d4:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 80037d8:	2300      	movs	r3, #0
 80037da:	60fb      	str	r3, [r7, #12]
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80037e2:	2b01      	cmp	r3, #1
 80037e4:	d101      	bne.n	80037ea <HAL_ADC_ConfigChannel+0x22>
 80037e6:	2302      	movs	r3, #2
 80037e8:	e3b9      	b.n	8003f5e <HAL_ADC_ConfigChannel+0x796>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	2201      	movs	r2, #1
 80037ee:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	4618      	mov	r0, r3
 80037f8:	f7ff fd78 	bl	80032ec <LL_ADC_REG_IsConversionOngoing>
 80037fc:	4603      	mov	r3, r0
 80037fe:	2b00      	cmp	r3, #0
 8003800:	f040 839e 	bne.w	8003f40 <HAL_ADC_ConfigChannel+0x778>
 8003804:	683b      	ldr	r3, [r7, #0]
 8003806:	685b      	ldr	r3, [r3, #4]
 8003808:	2b05      	cmp	r3, #5
 800380a:	d824      	bhi.n	8003856 <HAL_ADC_ConfigChannel+0x8e>
 800380c:	683b      	ldr	r3, [r7, #0]
 800380e:	685b      	ldr	r3, [r3, #4]
 8003810:	3b02      	subs	r3, #2
 8003812:	2b03      	cmp	r3, #3
 8003814:	d81b      	bhi.n	800384e <HAL_ADC_ConfigChannel+0x86>
 8003816:	a201      	add	r2, pc, #4	; (adr r2, 800381c <HAL_ADC_ConfigChannel+0x54>)
 8003818:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800381c:	0800382d 	.word	0x0800382d
 8003820:	08003835 	.word	0x08003835
 8003824:	0800383d 	.word	0x0800383d
 8003828:	08003845 	.word	0x08003845
 800382c:	683b      	ldr	r3, [r7, #0]
 800382e:	220c      	movs	r2, #12
 8003830:	605a      	str	r2, [r3, #4]
 8003832:	e011      	b.n	8003858 <HAL_ADC_ConfigChannel+0x90>
 8003834:	683b      	ldr	r3, [r7, #0]
 8003836:	2212      	movs	r2, #18
 8003838:	605a      	str	r2, [r3, #4]
 800383a:	e00d      	b.n	8003858 <HAL_ADC_ConfigChannel+0x90>
 800383c:	683b      	ldr	r3, [r7, #0]
 800383e:	2218      	movs	r2, #24
 8003840:	605a      	str	r2, [r3, #4]
 8003842:	e009      	b.n	8003858 <HAL_ADC_ConfigChannel+0x90>
 8003844:	683b      	ldr	r3, [r7, #0]
 8003846:	f44f 7280 	mov.w	r2, #256	; 0x100
 800384a:	605a      	str	r2, [r3, #4]
 800384c:	e004      	b.n	8003858 <HAL_ADC_ConfigChannel+0x90>
 800384e:	683b      	ldr	r3, [r7, #0]
 8003850:	2206      	movs	r2, #6
 8003852:	605a      	str	r2, [r3, #4]
 8003854:	e000      	b.n	8003858 <HAL_ADC_ConfigChannel+0x90>
 8003856:	bf00      	nop
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	6818      	ldr	r0, [r3, #0]
 800385c:	683b      	ldr	r3, [r7, #0]
 800385e:	6859      	ldr	r1, [r3, #4]
 8003860:	683b      	ldr	r3, [r7, #0]
 8003862:	681b      	ldr	r3, [r3, #0]
 8003864:	461a      	mov	r2, r3
 8003866:	f7ff fc15 	bl	8003094 <LL_ADC_REG_SetSequencerRanks>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	4618      	mov	r0, r3
 8003870:	f7ff fd3c 	bl	80032ec <LL_ADC_REG_IsConversionOngoing>
 8003874:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	4618      	mov	r0, r3
 800387e:	f7ff fd48 	bl	8003312 <LL_ADC_INJ_IsConversionOngoing>
 8003882:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc
 8003886:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 800388a:	2b00      	cmp	r3, #0
 800388c:	f040 81a6 	bne.w	8003bdc <HAL_ADC_ConfigChannel+0x414>
 8003890:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8003894:	2b00      	cmp	r3, #0
 8003896:	f040 81a1 	bne.w	8003bdc <HAL_ADC_ConfigChannel+0x414>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	6818      	ldr	r0, [r3, #0]
 800389e:	683b      	ldr	r3, [r7, #0]
 80038a0:	6819      	ldr	r1, [r3, #0]
 80038a2:	683b      	ldr	r3, [r7, #0]
 80038a4:	689b      	ldr	r3, [r3, #8]
 80038a6:	461a      	mov	r2, r3
 80038a8:	f7ff fc20 	bl	80030ec <LL_ADC_SetChannelSamplingTime>
 80038ac:	683b      	ldr	r3, [r7, #0]
 80038ae:	695a      	ldr	r2, [r3, #20]
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	68db      	ldr	r3, [r3, #12]
 80038b6:	08db      	lsrs	r3, r3, #3
 80038b8:	f003 0303 	and.w	r3, r3, #3
 80038bc:	005b      	lsls	r3, r3, #1
 80038be:	fa02 f303 	lsl.w	r3, r2, r3
 80038c2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80038c6:	683b      	ldr	r3, [r7, #0]
 80038c8:	691b      	ldr	r3, [r3, #16]
 80038ca:	2b04      	cmp	r3, #4
 80038cc:	d00a      	beq.n	80038e4 <HAL_ADC_ConfigChannel+0x11c>
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	6818      	ldr	r0, [r3, #0]
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	6919      	ldr	r1, [r3, #16]
 80038d6:	683b      	ldr	r3, [r7, #0]
 80038d8:	681a      	ldr	r2, [r3, #0]
 80038da:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 80038de:	f7ff fb71 	bl	8002fc4 <LL_ADC_SetOffset>
 80038e2:	e17b      	b.n	8003bdc <HAL_ADC_ConfigChannel+0x414>
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	681b      	ldr	r3, [r3, #0]
 80038e8:	2100      	movs	r1, #0
 80038ea:	4618      	mov	r0, r3
 80038ec:	f7ff fb8e 	bl	800300c <LL_ADC_GetOffsetChannel>
 80038f0:	4603      	mov	r3, r0
 80038f2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d10a      	bne.n	8003910 <HAL_ADC_ConfigChannel+0x148>
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	2100      	movs	r1, #0
 8003900:	4618      	mov	r0, r3
 8003902:	f7ff fb83 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003906:	4603      	mov	r3, r0
 8003908:	0e9b      	lsrs	r3, r3, #26
 800390a:	f003 021f 	and.w	r2, r3, #31
 800390e:	e01e      	b.n	800394e <HAL_ADC_ConfigChannel+0x186>
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	2100      	movs	r1, #0
 8003916:	4618      	mov	r0, r3
 8003918:	f7ff fb78 	bl	800300c <LL_ADC_GetOffsetChannel>
 800391c:	4603      	mov	r3, r0
 800391e:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8003922:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8003926:	fa93 f3a3 	rbit	r3, r3
 800392a:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800392e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8003932:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8003936:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800393a:	2b00      	cmp	r3, #0
 800393c:	d101      	bne.n	8003942 <HAL_ADC_ConfigChannel+0x17a>
 800393e:	2320      	movs	r3, #32
 8003940:	e004      	b.n	800394c <HAL_ADC_ConfigChannel+0x184>
 8003942:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8003946:	fab3 f383 	clz	r3, r3
 800394a:	b2db      	uxtb	r3, r3
 800394c:	461a      	mov	r2, r3
 800394e:	683b      	ldr	r3, [r7, #0]
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003956:	2b00      	cmp	r3, #0
 8003958:	d105      	bne.n	8003966 <HAL_ADC_ConfigChannel+0x19e>
 800395a:	683b      	ldr	r3, [r7, #0]
 800395c:	681b      	ldr	r3, [r3, #0]
 800395e:	0e9b      	lsrs	r3, r3, #26
 8003960:	f003 031f 	and.w	r3, r3, #31
 8003964:	e018      	b.n	8003998 <HAL_ADC_ConfigChannel+0x1d0>
 8003966:	683b      	ldr	r3, [r7, #0]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800396e:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8003972:	fa93 f3a3 	rbit	r3, r3
 8003976:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800397a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800397e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8003982:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8003986:	2b00      	cmp	r3, #0
 8003988:	d101      	bne.n	800398e <HAL_ADC_ConfigChannel+0x1c6>
 800398a:	2320      	movs	r3, #32
 800398c:	e004      	b.n	8003998 <HAL_ADC_ConfigChannel+0x1d0>
 800398e:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8003992:	fab3 f383 	clz	r3, r3
 8003996:	b2db      	uxtb	r3, r3
 8003998:	429a      	cmp	r2, r3
 800399a:	d106      	bne.n	80039aa <HAL_ADC_ConfigChannel+0x1e2>
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	681b      	ldr	r3, [r3, #0]
 80039a0:	2200      	movs	r2, #0
 80039a2:	2100      	movs	r1, #0
 80039a4:	4618      	mov	r0, r3
 80039a6:	f7ff fb47 	bl	8003038 <LL_ADC_SetOffsetState>
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	2101      	movs	r1, #1
 80039b0:	4618      	mov	r0, r3
 80039b2:	f7ff fb2b 	bl	800300c <LL_ADC_GetOffsetChannel>
 80039b6:	4603      	mov	r3, r0
 80039b8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d10a      	bne.n	80039d6 <HAL_ADC_ConfigChannel+0x20e>
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	2101      	movs	r1, #1
 80039c6:	4618      	mov	r0, r3
 80039c8:	f7ff fb20 	bl	800300c <LL_ADC_GetOffsetChannel>
 80039cc:	4603      	mov	r3, r0
 80039ce:	0e9b      	lsrs	r3, r3, #26
 80039d0:	f003 021f 	and.w	r2, r3, #31
 80039d4:	e01e      	b.n	8003a14 <HAL_ADC_ConfigChannel+0x24c>
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	2101      	movs	r1, #1
 80039dc:	4618      	mov	r0, r3
 80039de:	f7ff fb15 	bl	800300c <LL_ADC_GetOffsetChannel>
 80039e2:	4603      	mov	r3, r0
 80039e4:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80039e8:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80039ec:	fa93 f3a3 	rbit	r3, r3
 80039f0:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80039f4:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80039f8:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80039fc:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8003a00:	2b00      	cmp	r3, #0
 8003a02:	d101      	bne.n	8003a08 <HAL_ADC_ConfigChannel+0x240>
 8003a04:	2320      	movs	r3, #32
 8003a06:	e004      	b.n	8003a12 <HAL_ADC_ConfigChannel+0x24a>
 8003a08:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8003a0c:	fab3 f383 	clz	r3, r3
 8003a10:	b2db      	uxtb	r3, r3
 8003a12:	461a      	mov	r2, r3
 8003a14:	683b      	ldr	r3, [r7, #0]
 8003a16:	681b      	ldr	r3, [r3, #0]
 8003a18:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d105      	bne.n	8003a2c <HAL_ADC_ConfigChannel+0x264>
 8003a20:	683b      	ldr	r3, [r7, #0]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	0e9b      	lsrs	r3, r3, #26
 8003a26:	f003 031f 	and.w	r3, r3, #31
 8003a2a:	e018      	b.n	8003a5e <HAL_ADC_ConfigChannel+0x296>
 8003a2c:	683b      	ldr	r3, [r7, #0]
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8003a34:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8003a38:	fa93 f3a3 	rbit	r3, r3
 8003a3c:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8003a40:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8003a44:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8003a48:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8003a4c:	2b00      	cmp	r3, #0
 8003a4e:	d101      	bne.n	8003a54 <HAL_ADC_ConfigChannel+0x28c>
 8003a50:	2320      	movs	r3, #32
 8003a52:	e004      	b.n	8003a5e <HAL_ADC_ConfigChannel+0x296>
 8003a54:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8003a58:	fab3 f383 	clz	r3, r3
 8003a5c:	b2db      	uxtb	r3, r3
 8003a5e:	429a      	cmp	r2, r3
 8003a60:	d106      	bne.n	8003a70 <HAL_ADC_ConfigChannel+0x2a8>
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	2200      	movs	r2, #0
 8003a68:	2101      	movs	r1, #1
 8003a6a:	4618      	mov	r0, r3
 8003a6c:	f7ff fae4 	bl	8003038 <LL_ADC_SetOffsetState>
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	2102      	movs	r1, #2
 8003a76:	4618      	mov	r0, r3
 8003a78:	f7ff fac8 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003a7c:	4603      	mov	r3, r0
 8003a7e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d10a      	bne.n	8003a9c <HAL_ADC_ConfigChannel+0x2d4>
 8003a86:	687b      	ldr	r3, [r7, #4]
 8003a88:	681b      	ldr	r3, [r3, #0]
 8003a8a:	2102      	movs	r1, #2
 8003a8c:	4618      	mov	r0, r3
 8003a8e:	f7ff fabd 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003a92:	4603      	mov	r3, r0
 8003a94:	0e9b      	lsrs	r3, r3, #26
 8003a96:	f003 021f 	and.w	r2, r3, #31
 8003a9a:	e01e      	b.n	8003ada <HAL_ADC_ConfigChannel+0x312>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	2102      	movs	r1, #2
 8003aa2:	4618      	mov	r0, r3
 8003aa4:	f7ff fab2 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003aa8:	4603      	mov	r3, r0
 8003aaa:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8003aae:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003ab2:	fa93 f3a3 	rbit	r3, r3
 8003ab6:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8003aba:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8003abe:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8003ac2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	d101      	bne.n	8003ace <HAL_ADC_ConfigChannel+0x306>
 8003aca:	2320      	movs	r3, #32
 8003acc:	e004      	b.n	8003ad8 <HAL_ADC_ConfigChannel+0x310>
 8003ace:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8003ad2:	fab3 f383 	clz	r3, r3
 8003ad6:	b2db      	uxtb	r3, r3
 8003ad8:	461a      	mov	r2, r3
 8003ada:	683b      	ldr	r3, [r7, #0]
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003ae2:	2b00      	cmp	r3, #0
 8003ae4:	d105      	bne.n	8003af2 <HAL_ADC_ConfigChannel+0x32a>
 8003ae6:	683b      	ldr	r3, [r7, #0]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	0e9b      	lsrs	r3, r3, #26
 8003aec:	f003 031f 	and.w	r3, r3, #31
 8003af0:	e016      	b.n	8003b20 <HAL_ADC_ConfigChannel+0x358>
 8003af2:	683b      	ldr	r3, [r7, #0]
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8003afa:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8003afe:	fa93 f3a3 	rbit	r3, r3
 8003b02:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003b04:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8003b06:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8003b0a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003b0e:	2b00      	cmp	r3, #0
 8003b10:	d101      	bne.n	8003b16 <HAL_ADC_ConfigChannel+0x34e>
 8003b12:	2320      	movs	r3, #32
 8003b14:	e004      	b.n	8003b20 <HAL_ADC_ConfigChannel+0x358>
 8003b16:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8003b1a:	fab3 f383 	clz	r3, r3
 8003b1e:	b2db      	uxtb	r3, r3
 8003b20:	429a      	cmp	r2, r3
 8003b22:	d106      	bne.n	8003b32 <HAL_ADC_ConfigChannel+0x36a>
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	2200      	movs	r2, #0
 8003b2a:	2102      	movs	r1, #2
 8003b2c:	4618      	mov	r0, r3
 8003b2e:	f7ff fa83 	bl	8003038 <LL_ADC_SetOffsetState>
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	2103      	movs	r1, #3
 8003b38:	4618      	mov	r0, r3
 8003b3a:	f7ff fa67 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003b3e:	4603      	mov	r3, r0
 8003b40:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d10a      	bne.n	8003b5e <HAL_ADC_ConfigChannel+0x396>
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	2103      	movs	r1, #3
 8003b4e:	4618      	mov	r0, r3
 8003b50:	f7ff fa5c 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003b54:	4603      	mov	r3, r0
 8003b56:	0e9b      	lsrs	r3, r3, #26
 8003b58:	f003 021f 	and.w	r2, r3, #31
 8003b5c:	e017      	b.n	8003b8e <HAL_ADC_ConfigChannel+0x3c6>
 8003b5e:	687b      	ldr	r3, [r7, #4]
 8003b60:	681b      	ldr	r3, [r3, #0]
 8003b62:	2103      	movs	r1, #3
 8003b64:	4618      	mov	r0, r3
 8003b66:	f7ff fa51 	bl	800300c <LL_ADC_GetOffsetChannel>
 8003b6a:	4603      	mov	r3, r0
 8003b6c:	677b      	str	r3, [r7, #116]	; 0x74
 8003b6e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003b70:	fa93 f3a3 	rbit	r3, r3
 8003b74:	673b      	str	r3, [r7, #112]	; 0x70
 8003b76:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8003b78:	67bb      	str	r3, [r7, #120]	; 0x78
 8003b7a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	d101      	bne.n	8003b84 <HAL_ADC_ConfigChannel+0x3bc>
 8003b80:	2320      	movs	r3, #32
 8003b82:	e003      	b.n	8003b8c <HAL_ADC_ConfigChannel+0x3c4>
 8003b84:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8003b86:	fab3 f383 	clz	r3, r3
 8003b8a:	b2db      	uxtb	r3, r3
 8003b8c:	461a      	mov	r2, r3
 8003b8e:	683b      	ldr	r3, [r7, #0]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d105      	bne.n	8003ba6 <HAL_ADC_ConfigChannel+0x3de>
 8003b9a:	683b      	ldr	r3, [r7, #0]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	0e9b      	lsrs	r3, r3, #26
 8003ba0:	f003 031f 	and.w	r3, r3, #31
 8003ba4:	e011      	b.n	8003bca <HAL_ADC_ConfigChannel+0x402>
 8003ba6:	683b      	ldr	r3, [r7, #0]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	66bb      	str	r3, [r7, #104]	; 0x68
 8003bac:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8003bae:	fa93 f3a3 	rbit	r3, r3
 8003bb2:	667b      	str	r3, [r7, #100]	; 0x64
 8003bb4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8003bb6:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003bb8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003bba:	2b00      	cmp	r3, #0
 8003bbc:	d101      	bne.n	8003bc2 <HAL_ADC_ConfigChannel+0x3fa>
 8003bbe:	2320      	movs	r3, #32
 8003bc0:	e003      	b.n	8003bca <HAL_ADC_ConfigChannel+0x402>
 8003bc2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003bc4:	fab3 f383 	clz	r3, r3
 8003bc8:	b2db      	uxtb	r3, r3
 8003bca:	429a      	cmp	r2, r3
 8003bcc:	d106      	bne.n	8003bdc <HAL_ADC_ConfigChannel+0x414>
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	2200      	movs	r2, #0
 8003bd4:	2103      	movs	r1, #3
 8003bd6:	4618      	mov	r0, r3
 8003bd8:	f7ff fa2e 	bl	8003038 <LL_ADC_SetOffsetState>
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	4618      	mov	r0, r3
 8003be2:	f7ff fb49 	bl	8003278 <LL_ADC_IsEnabled>
 8003be6:	4603      	mov	r3, r0
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	f040 813f 	bne.w	8003e6c <HAL_ADC_ConfigChannel+0x6a4>
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	6818      	ldr	r0, [r3, #0]
 8003bf2:	683b      	ldr	r3, [r7, #0]
 8003bf4:	6819      	ldr	r1, [r3, #0]
 8003bf6:	683b      	ldr	r3, [r7, #0]
 8003bf8:	68db      	ldr	r3, [r3, #12]
 8003bfa:	461a      	mov	r2, r3
 8003bfc:	f7ff faa2 	bl	8003144 <LL_ADC_SetChannelSingleDiff>
 8003c00:	683b      	ldr	r3, [r7, #0]
 8003c02:	68db      	ldr	r3, [r3, #12]
 8003c04:	4a8e      	ldr	r2, [pc, #568]	; (8003e40 <HAL_ADC_ConfigChannel+0x678>)
 8003c06:	4293      	cmp	r3, r2
 8003c08:	f040 8130 	bne.w	8003e6c <HAL_ADC_ConfigChannel+0x6a4>
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	6818      	ldr	r0, [r3, #0]
 8003c10:	683b      	ldr	r3, [r7, #0]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d10b      	bne.n	8003c34 <HAL_ADC_ConfigChannel+0x46c>
 8003c1c:	683b      	ldr	r3, [r7, #0]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	0e9b      	lsrs	r3, r3, #26
 8003c22:	3301      	adds	r3, #1
 8003c24:	f003 031f 	and.w	r3, r3, #31
 8003c28:	2b09      	cmp	r3, #9
 8003c2a:	bf94      	ite	ls
 8003c2c:	2301      	movls	r3, #1
 8003c2e:	2300      	movhi	r3, #0
 8003c30:	b2db      	uxtb	r3, r3
 8003c32:	e019      	b.n	8003c68 <HAL_ADC_ConfigChannel+0x4a0>
 8003c34:	683b      	ldr	r3, [r7, #0]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003c3a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8003c3c:	fa93 f3a3 	rbit	r3, r3
 8003c40:	65bb      	str	r3, [r7, #88]	; 0x58
 8003c42:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003c44:	663b      	str	r3, [r7, #96]	; 0x60
 8003c46:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003c48:	2b00      	cmp	r3, #0
 8003c4a:	d101      	bne.n	8003c50 <HAL_ADC_ConfigChannel+0x488>
 8003c4c:	2320      	movs	r3, #32
 8003c4e:	e003      	b.n	8003c58 <HAL_ADC_ConfigChannel+0x490>
 8003c50:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003c52:	fab3 f383 	clz	r3, r3
 8003c56:	b2db      	uxtb	r3, r3
 8003c58:	3301      	adds	r3, #1
 8003c5a:	f003 031f 	and.w	r3, r3, #31
 8003c5e:	2b09      	cmp	r3, #9
 8003c60:	bf94      	ite	ls
 8003c62:	2301      	movls	r3, #1
 8003c64:	2300      	movhi	r3, #0
 8003c66:	b2db      	uxtb	r3, r3
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d079      	beq.n	8003d60 <HAL_ADC_ConfigChannel+0x598>
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003c74:	2b00      	cmp	r3, #0
 8003c76:	d107      	bne.n	8003c88 <HAL_ADC_ConfigChannel+0x4c0>
 8003c78:	683b      	ldr	r3, [r7, #0]
 8003c7a:	681b      	ldr	r3, [r3, #0]
 8003c7c:	0e9b      	lsrs	r3, r3, #26
 8003c7e:	3301      	adds	r3, #1
 8003c80:	069b      	lsls	r3, r3, #26
 8003c82:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003c86:	e015      	b.n	8003cb4 <HAL_ADC_ConfigChannel+0x4ec>
 8003c88:	683b      	ldr	r3, [r7, #0]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	653b      	str	r3, [r7, #80]	; 0x50
 8003c8e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003c90:	fa93 f3a3 	rbit	r3, r3
 8003c94:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003c96:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c98:	657b      	str	r3, [r7, #84]	; 0x54
 8003c9a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	d101      	bne.n	8003ca4 <HAL_ADC_ConfigChannel+0x4dc>
 8003ca0:	2320      	movs	r3, #32
 8003ca2:	e003      	b.n	8003cac <HAL_ADC_ConfigChannel+0x4e4>
 8003ca4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8003ca6:	fab3 f383 	clz	r3, r3
 8003caa:	b2db      	uxtb	r3, r3
 8003cac:	3301      	adds	r3, #1
 8003cae:	069b      	lsls	r3, r3, #26
 8003cb0:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003cbc:	2b00      	cmp	r3, #0
 8003cbe:	d109      	bne.n	8003cd4 <HAL_ADC_ConfigChannel+0x50c>
 8003cc0:	683b      	ldr	r3, [r7, #0]
 8003cc2:	681b      	ldr	r3, [r3, #0]
 8003cc4:	0e9b      	lsrs	r3, r3, #26
 8003cc6:	3301      	adds	r3, #1
 8003cc8:	f003 031f 	and.w	r3, r3, #31
 8003ccc:	2101      	movs	r1, #1
 8003cce:	fa01 f303 	lsl.w	r3, r1, r3
 8003cd2:	e017      	b.n	8003d04 <HAL_ADC_ConfigChannel+0x53c>
 8003cd4:	683b      	ldr	r3, [r7, #0]
 8003cd6:	681b      	ldr	r3, [r3, #0]
 8003cd8:	647b      	str	r3, [r7, #68]	; 0x44
 8003cda:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003cdc:	fa93 f3a3 	rbit	r3, r3
 8003ce0:	643b      	str	r3, [r7, #64]	; 0x40
 8003ce2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003ce4:	64bb      	str	r3, [r7, #72]	; 0x48
 8003ce6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003ce8:	2b00      	cmp	r3, #0
 8003cea:	d101      	bne.n	8003cf0 <HAL_ADC_ConfigChannel+0x528>
 8003cec:	2320      	movs	r3, #32
 8003cee:	e003      	b.n	8003cf8 <HAL_ADC_ConfigChannel+0x530>
 8003cf0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003cf2:	fab3 f383 	clz	r3, r3
 8003cf6:	b2db      	uxtb	r3, r3
 8003cf8:	3301      	adds	r3, #1
 8003cfa:	f003 031f 	and.w	r3, r3, #31
 8003cfe:	2101      	movs	r1, #1
 8003d00:	fa01 f303 	lsl.w	r3, r1, r3
 8003d04:	ea42 0103 	orr.w	r1, r2, r3
 8003d08:	683b      	ldr	r3, [r7, #0]
 8003d0a:	681b      	ldr	r3, [r3, #0]
 8003d0c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	d10a      	bne.n	8003d2a <HAL_ADC_ConfigChannel+0x562>
 8003d14:	683b      	ldr	r3, [r7, #0]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	0e9b      	lsrs	r3, r3, #26
 8003d1a:	3301      	adds	r3, #1
 8003d1c:	f003 021f 	and.w	r2, r3, #31
 8003d20:	4613      	mov	r3, r2
 8003d22:	005b      	lsls	r3, r3, #1
 8003d24:	4413      	add	r3, r2
 8003d26:	051b      	lsls	r3, r3, #20
 8003d28:	e018      	b.n	8003d5c <HAL_ADC_ConfigChannel+0x594>
 8003d2a:	683b      	ldr	r3, [r7, #0]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003d30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003d32:	fa93 f3a3 	rbit	r3, r3
 8003d36:	637b      	str	r3, [r7, #52]	; 0x34
 8003d38:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003d3a:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003d3c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003d3e:	2b00      	cmp	r3, #0
 8003d40:	d101      	bne.n	8003d46 <HAL_ADC_ConfigChannel+0x57e>
 8003d42:	2320      	movs	r3, #32
 8003d44:	e003      	b.n	8003d4e <HAL_ADC_ConfigChannel+0x586>
 8003d46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003d48:	fab3 f383 	clz	r3, r3
 8003d4c:	b2db      	uxtb	r3, r3
 8003d4e:	3301      	adds	r3, #1
 8003d50:	f003 021f 	and.w	r2, r3, #31
 8003d54:	4613      	mov	r3, r2
 8003d56:	005b      	lsls	r3, r3, #1
 8003d58:	4413      	add	r3, r2
 8003d5a:	051b      	lsls	r3, r3, #20
 8003d5c:	430b      	orrs	r3, r1
 8003d5e:	e080      	b.n	8003e62 <HAL_ADC_ConfigChannel+0x69a>
 8003d60:	683b      	ldr	r3, [r7, #0]
 8003d62:	681b      	ldr	r3, [r3, #0]
 8003d64:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d107      	bne.n	8003d7c <HAL_ADC_ConfigChannel+0x5b4>
 8003d6c:	683b      	ldr	r3, [r7, #0]
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	0e9b      	lsrs	r3, r3, #26
 8003d72:	3301      	adds	r3, #1
 8003d74:	069b      	lsls	r3, r3, #26
 8003d76:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003d7a:	e015      	b.n	8003da8 <HAL_ADC_ConfigChannel+0x5e0>
 8003d7c:	683b      	ldr	r3, [r7, #0]
 8003d7e:	681b      	ldr	r3, [r3, #0]
 8003d80:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003d82:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003d84:	fa93 f3a3 	rbit	r3, r3
 8003d88:	62bb      	str	r3, [r7, #40]	; 0x28
 8003d8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d8c:	633b      	str	r3, [r7, #48]	; 0x30
 8003d8e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d90:	2b00      	cmp	r3, #0
 8003d92:	d101      	bne.n	8003d98 <HAL_ADC_ConfigChannel+0x5d0>
 8003d94:	2320      	movs	r3, #32
 8003d96:	e003      	b.n	8003da0 <HAL_ADC_ConfigChannel+0x5d8>
 8003d98:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003d9a:	fab3 f383 	clz	r3, r3
 8003d9e:	b2db      	uxtb	r3, r3
 8003da0:	3301      	adds	r3, #1
 8003da2:	069b      	lsls	r3, r3, #26
 8003da4:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8003da8:	683b      	ldr	r3, [r7, #0]
 8003daa:	681b      	ldr	r3, [r3, #0]
 8003dac:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003db0:	2b00      	cmp	r3, #0
 8003db2:	d109      	bne.n	8003dc8 <HAL_ADC_ConfigChannel+0x600>
 8003db4:	683b      	ldr	r3, [r7, #0]
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	0e9b      	lsrs	r3, r3, #26
 8003dba:	3301      	adds	r3, #1
 8003dbc:	f003 031f 	and.w	r3, r3, #31
 8003dc0:	2101      	movs	r1, #1
 8003dc2:	fa01 f303 	lsl.w	r3, r1, r3
 8003dc6:	e017      	b.n	8003df8 <HAL_ADC_ConfigChannel+0x630>
 8003dc8:	683b      	ldr	r3, [r7, #0]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	623b      	str	r3, [r7, #32]
 8003dce:	6a3b      	ldr	r3, [r7, #32]
 8003dd0:	fa93 f3a3 	rbit	r3, r3
 8003dd4:	61fb      	str	r3, [r7, #28]
 8003dd6:	69fb      	ldr	r3, [r7, #28]
 8003dd8:	627b      	str	r3, [r7, #36]	; 0x24
 8003dda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ddc:	2b00      	cmp	r3, #0
 8003dde:	d101      	bne.n	8003de4 <HAL_ADC_ConfigChannel+0x61c>
 8003de0:	2320      	movs	r3, #32
 8003de2:	e003      	b.n	8003dec <HAL_ADC_ConfigChannel+0x624>
 8003de4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003de6:	fab3 f383 	clz	r3, r3
 8003dea:	b2db      	uxtb	r3, r3
 8003dec:	3301      	adds	r3, #1
 8003dee:	f003 031f 	and.w	r3, r3, #31
 8003df2:	2101      	movs	r1, #1
 8003df4:	fa01 f303 	lsl.w	r3, r1, r3
 8003df8:	ea42 0103 	orr.w	r1, r2, r3
 8003dfc:	683b      	ldr	r3, [r7, #0]
 8003dfe:	681b      	ldr	r3, [r3, #0]
 8003e00:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003e04:	2b00      	cmp	r3, #0
 8003e06:	d10d      	bne.n	8003e24 <HAL_ADC_ConfigChannel+0x65c>
 8003e08:	683b      	ldr	r3, [r7, #0]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	0e9b      	lsrs	r3, r3, #26
 8003e0e:	3301      	adds	r3, #1
 8003e10:	f003 021f 	and.w	r2, r3, #31
 8003e14:	4613      	mov	r3, r2
 8003e16:	005b      	lsls	r3, r3, #1
 8003e18:	4413      	add	r3, r2
 8003e1a:	3b1e      	subs	r3, #30
 8003e1c:	051b      	lsls	r3, r3, #20
 8003e1e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003e22:	e01d      	b.n	8003e60 <HAL_ADC_ConfigChannel+0x698>
 8003e24:	683b      	ldr	r3, [r7, #0]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	617b      	str	r3, [r7, #20]
 8003e2a:	697b      	ldr	r3, [r7, #20]
 8003e2c:	fa93 f3a3 	rbit	r3, r3
 8003e30:	613b      	str	r3, [r7, #16]
 8003e32:	693b      	ldr	r3, [r7, #16]
 8003e34:	61bb      	str	r3, [r7, #24]
 8003e36:	69bb      	ldr	r3, [r7, #24]
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d103      	bne.n	8003e44 <HAL_ADC_ConfigChannel+0x67c>
 8003e3c:	2320      	movs	r3, #32
 8003e3e:	e005      	b.n	8003e4c <HAL_ADC_ConfigChannel+0x684>
 8003e40:	407f0000 	.word	0x407f0000
 8003e44:	69bb      	ldr	r3, [r7, #24]
 8003e46:	fab3 f383 	clz	r3, r3
 8003e4a:	b2db      	uxtb	r3, r3
 8003e4c:	3301      	adds	r3, #1
 8003e4e:	f003 021f 	and.w	r2, r3, #31
 8003e52:	4613      	mov	r3, r2
 8003e54:	005b      	lsls	r3, r3, #1
 8003e56:	4413      	add	r3, r2
 8003e58:	3b1e      	subs	r3, #30
 8003e5a:	051b      	lsls	r3, r3, #20
 8003e5c:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8003e60:	430b      	orrs	r3, r1
 8003e62:	683a      	ldr	r2, [r7, #0]
 8003e64:	6892      	ldr	r2, [r2, #8]
 8003e66:	4619      	mov	r1, r3
 8003e68:	f7ff f940 	bl	80030ec <LL_ADC_SetChannelSamplingTime>
 8003e6c:	683b      	ldr	r3, [r7, #0]
 8003e6e:	681a      	ldr	r2, [r3, #0]
 8003e70:	4b3d      	ldr	r3, [pc, #244]	; (8003f68 <HAL_ADC_ConfigChannel+0x7a0>)
 8003e72:	4013      	ands	r3, r2
 8003e74:	2b00      	cmp	r3, #0
 8003e76:	d06c      	beq.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003e78:	483c      	ldr	r0, [pc, #240]	; (8003f6c <HAL_ADC_ConfigChannel+0x7a4>)
 8003e7a:	f7ff f895 	bl	8002fa8 <LL_ADC_GetCommonPathInternalCh>
 8003e7e:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4
 8003e82:	683b      	ldr	r3, [r7, #0]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	4a3a      	ldr	r2, [pc, #232]	; (8003f70 <HAL_ADC_ConfigChannel+0x7a8>)
 8003e88:	4293      	cmp	r3, r2
 8003e8a:	d127      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x714>
 8003e8c:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003e90:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d121      	bne.n	8003edc <HAL_ADC_ConfigChannel+0x714>
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	4a35      	ldr	r2, [pc, #212]	; (8003f74 <HAL_ADC_ConfigChannel+0x7ac>)
 8003e9e:	4293      	cmp	r3, r2
 8003ea0:	d157      	bne.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003ea2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003ea6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003eaa:	4619      	mov	r1, r3
 8003eac:	482f      	ldr	r0, [pc, #188]	; (8003f6c <HAL_ADC_ConfigChannel+0x7a4>)
 8003eae:	f7ff f868 	bl	8002f82 <LL_ADC_SetCommonPathInternalCh>
 8003eb2:	4b31      	ldr	r3, [pc, #196]	; (8003f78 <HAL_ADC_ConfigChannel+0x7b0>)
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	099b      	lsrs	r3, r3, #6
 8003eb8:	4a30      	ldr	r2, [pc, #192]	; (8003f7c <HAL_ADC_ConfigChannel+0x7b4>)
 8003eba:	fba2 2303 	umull	r2, r3, r2, r3
 8003ebe:	099b      	lsrs	r3, r3, #6
 8003ec0:	1c5a      	adds	r2, r3, #1
 8003ec2:	4613      	mov	r3, r2
 8003ec4:	005b      	lsls	r3, r3, #1
 8003ec6:	4413      	add	r3, r2
 8003ec8:	009b      	lsls	r3, r3, #2
 8003eca:	60fb      	str	r3, [r7, #12]
 8003ecc:	e002      	b.n	8003ed4 <HAL_ADC_ConfigChannel+0x70c>
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	3b01      	subs	r3, #1
 8003ed2:	60fb      	str	r3, [r7, #12]
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	d1f9      	bne.n	8003ece <HAL_ADC_ConfigChannel+0x706>
 8003eda:	e03a      	b.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4a27      	ldr	r2, [pc, #156]	; (8003f80 <HAL_ADC_ConfigChannel+0x7b8>)
 8003ee2:	4293      	cmp	r3, r2
 8003ee4:	d113      	bne.n	8003f0e <HAL_ADC_ConfigChannel+0x746>
 8003ee6:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003eea:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d10d      	bne.n	8003f0e <HAL_ADC_ConfigChannel+0x746>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4a1f      	ldr	r2, [pc, #124]	; (8003f74 <HAL_ADC_ConfigChannel+0x7ac>)
 8003ef8:	4293      	cmp	r3, r2
 8003efa:	d12a      	bne.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003efc:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003f00:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003f04:	4619      	mov	r1, r3
 8003f06:	4819      	ldr	r0, [pc, #100]	; (8003f6c <HAL_ADC_ConfigChannel+0x7a4>)
 8003f08:	f7ff f83b 	bl	8002f82 <LL_ADC_SetCommonPathInternalCh>
 8003f0c:	e021      	b.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003f0e:	683b      	ldr	r3, [r7, #0]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	4a1c      	ldr	r2, [pc, #112]	; (8003f84 <HAL_ADC_ConfigChannel+0x7bc>)
 8003f14:	4293      	cmp	r3, r2
 8003f16:	d11c      	bne.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003f18:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003f1c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	d116      	bne.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	4a12      	ldr	r2, [pc, #72]	; (8003f74 <HAL_ADC_ConfigChannel+0x7ac>)
 8003f2a:	4293      	cmp	r3, r2
 8003f2c:	d111      	bne.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003f2e:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8003f32:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003f36:	4619      	mov	r1, r3
 8003f38:	480c      	ldr	r0, [pc, #48]	; (8003f6c <HAL_ADC_ConfigChannel+0x7a4>)
 8003f3a:	f7ff f822 	bl	8002f82 <LL_ADC_SetCommonPathInternalCh>
 8003f3e:	e008      	b.n	8003f52 <HAL_ADC_ConfigChannel+0x78a>
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003f44:	f043 0220 	orr.w	r2, r3, #32
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	655a      	str	r2, [r3, #84]	; 0x54
 8003f4c:	2301      	movs	r3, #1
 8003f4e:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 8003f52:	687b      	ldr	r3, [r7, #4]
 8003f54:	2200      	movs	r2, #0
 8003f56:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8003f5a:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 8003f5e:	4618      	mov	r0, r3
 8003f60:	37d8      	adds	r7, #216	; 0xd8
 8003f62:	46bd      	mov	sp, r7
 8003f64:	bd80      	pop	{r7, pc}
 8003f66:	bf00      	nop
 8003f68:	80080000 	.word	0x80080000
 8003f6c:	50040300 	.word	0x50040300
 8003f70:	c7520000 	.word	0xc7520000
 8003f74:	50040000 	.word	0x50040000
 8003f78:	2000000c 	.word	0x2000000c
 8003f7c:	053e2d63 	.word	0x053e2d63
 8003f80:	cb840000 	.word	0xcb840000
 8003f84:	80000001 	.word	0x80000001

08003f88 <ADC_Enable>:
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	b084      	sub	sp, #16
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	4618      	mov	r0, r3
 8003f96:	f7ff f96f 	bl	8003278 <LL_ADC_IsEnabled>
 8003f9a:	4603      	mov	r3, r0
 8003f9c:	2b00      	cmp	r3, #0
 8003f9e:	d14d      	bne.n	800403c <ADC_Enable+0xb4>
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	689a      	ldr	r2, [r3, #8]
 8003fa6:	4b28      	ldr	r3, [pc, #160]	; (8004048 <ADC_Enable+0xc0>)
 8003fa8:	4013      	ands	r3, r2
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d00d      	beq.n	8003fca <ADC_Enable+0x42>
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8003fb2:	f043 0210 	orr.w	r2, r3, #16
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	655a      	str	r2, [r3, #84]	; 0x54
 8003fba:	687b      	ldr	r3, [r7, #4]
 8003fbc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003fbe:	f043 0201 	orr.w	r2, r3, #1
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	659a      	str	r2, [r3, #88]	; 0x58
 8003fc6:	2301      	movs	r3, #1
 8003fc8:	e039      	b.n	800403e <ADC_Enable+0xb6>
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	4618      	mov	r0, r3
 8003fd0:	f7ff f92a 	bl	8003228 <LL_ADC_Enable>
 8003fd4:	f7fe ffb6 	bl	8002f44 <HAL_GetTick>
 8003fd8:	60f8      	str	r0, [r7, #12]
 8003fda:	e028      	b.n	800402e <ADC_Enable+0xa6>
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	681b      	ldr	r3, [r3, #0]
 8003fe0:	4618      	mov	r0, r3
 8003fe2:	f7ff f949 	bl	8003278 <LL_ADC_IsEnabled>
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d104      	bne.n	8003ff6 <ADC_Enable+0x6e>
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	4618      	mov	r0, r3
 8003ff2:	f7ff f919 	bl	8003228 <LL_ADC_Enable>
 8003ff6:	f7fe ffa5 	bl	8002f44 <HAL_GetTick>
 8003ffa:	4602      	mov	r2, r0
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	1ad3      	subs	r3, r2, r3
 8004000:	2b02      	cmp	r3, #2
 8004002:	d914      	bls.n	800402e <ADC_Enable+0xa6>
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	f003 0301 	and.w	r3, r3, #1
 800400e:	2b01      	cmp	r3, #1
 8004010:	d00d      	beq.n	800402e <ADC_Enable+0xa6>
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004016:	f043 0210 	orr.w	r2, r3, #16
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	655a      	str	r2, [r3, #84]	; 0x54
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004022:	f043 0201 	orr.w	r2, r3, #1
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	659a      	str	r2, [r3, #88]	; 0x58
 800402a:	2301      	movs	r3, #1
 800402c:	e007      	b.n	800403e <ADC_Enable+0xb6>
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	681b      	ldr	r3, [r3, #0]
 8004032:	681b      	ldr	r3, [r3, #0]
 8004034:	f003 0301 	and.w	r3, r3, #1
 8004038:	2b01      	cmp	r3, #1
 800403a:	d1cf      	bne.n	8003fdc <ADC_Enable+0x54>
 800403c:	2300      	movs	r3, #0
 800403e:	4618      	mov	r0, r3
 8004040:	3710      	adds	r7, #16
 8004042:	46bd      	mov	sp, r7
 8004044:	bd80      	pop	{r7, pc}
 8004046:	bf00      	nop
 8004048:	8000003f 	.word	0x8000003f

0800404c <ADC_Disable>:
 800404c:	b580      	push	{r7, lr}
 800404e:	b084      	sub	sp, #16
 8004050:	af00      	add	r7, sp, #0
 8004052:	6078      	str	r0, [r7, #4]
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	681b      	ldr	r3, [r3, #0]
 8004058:	4618      	mov	r0, r3
 800405a:	f7ff f920 	bl	800329e <LL_ADC_IsDisableOngoing>
 800405e:	60f8      	str	r0, [r7, #12]
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	4618      	mov	r0, r3
 8004066:	f7ff f907 	bl	8003278 <LL_ADC_IsEnabled>
 800406a:	4603      	mov	r3, r0
 800406c:	2b00      	cmp	r3, #0
 800406e:	d047      	beq.n	8004100 <ADC_Disable+0xb4>
 8004070:	68fb      	ldr	r3, [r7, #12]
 8004072:	2b00      	cmp	r3, #0
 8004074:	d144      	bne.n	8004100 <ADC_Disable+0xb4>
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	689b      	ldr	r3, [r3, #8]
 800407c:	f003 030d 	and.w	r3, r3, #13
 8004080:	2b01      	cmp	r3, #1
 8004082:	d10c      	bne.n	800409e <ADC_Disable+0x52>
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	4618      	mov	r0, r3
 800408a:	f7ff f8e1 	bl	8003250 <LL_ADC_Disable>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	2203      	movs	r2, #3
 8004094:	601a      	str	r2, [r3, #0]
 8004096:	f7fe ff55 	bl	8002f44 <HAL_GetTick>
 800409a:	60b8      	str	r0, [r7, #8]
 800409c:	e029      	b.n	80040f2 <ADC_Disable+0xa6>
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040a2:	f043 0210 	orr.w	r2, r3, #16
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	655a      	str	r2, [r3, #84]	; 0x54
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80040ae:	f043 0201 	orr.w	r2, r3, #1
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	659a      	str	r2, [r3, #88]	; 0x58
 80040b6:	2301      	movs	r3, #1
 80040b8:	e023      	b.n	8004102 <ADC_Disable+0xb6>
 80040ba:	f7fe ff43 	bl	8002f44 <HAL_GetTick>
 80040be:	4602      	mov	r2, r0
 80040c0:	68bb      	ldr	r3, [r7, #8]
 80040c2:	1ad3      	subs	r3, r2, r3
 80040c4:	2b02      	cmp	r3, #2
 80040c6:	d914      	bls.n	80040f2 <ADC_Disable+0xa6>
 80040c8:	687b      	ldr	r3, [r7, #4]
 80040ca:	681b      	ldr	r3, [r3, #0]
 80040cc:	689b      	ldr	r3, [r3, #8]
 80040ce:	f003 0301 	and.w	r3, r3, #1
 80040d2:	2b00      	cmp	r3, #0
 80040d4:	d00d      	beq.n	80040f2 <ADC_Disable+0xa6>
 80040d6:	687b      	ldr	r3, [r7, #4]
 80040d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80040da:	f043 0210 	orr.w	r2, r3, #16
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	655a      	str	r2, [r3, #84]	; 0x54
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80040e6:	f043 0201 	orr.w	r2, r3, #1
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	659a      	str	r2, [r3, #88]	; 0x58
 80040ee:	2301      	movs	r3, #1
 80040f0:	e007      	b.n	8004102 <ADC_Disable+0xb6>
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	689b      	ldr	r3, [r3, #8]
 80040f8:	f003 0301 	and.w	r3, r3, #1
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d1dc      	bne.n	80040ba <ADC_Disable+0x6e>
 8004100:	2300      	movs	r3, #0
 8004102:	4618      	mov	r0, r3
 8004104:	3710      	adds	r7, #16
 8004106:	46bd      	mov	sp, r7
 8004108:	bd80      	pop	{r7, pc}

0800410a <LL_ADC_StartCalibration>:
 800410a:	b480      	push	{r7}
 800410c:	b083      	sub	sp, #12
 800410e:	af00      	add	r7, sp, #0
 8004110:	6078      	str	r0, [r7, #4]
 8004112:	6039      	str	r1, [r7, #0]
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	689b      	ldr	r3, [r3, #8]
 8004118:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 800411c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004120:	683a      	ldr	r2, [r7, #0]
 8004122:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8004126:	4313      	orrs	r3, r2
 8004128:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	609a      	str	r2, [r3, #8]
 8004130:	bf00      	nop
 8004132:	370c      	adds	r7, #12
 8004134:	46bd      	mov	sp, r7
 8004136:	f85d 7b04 	ldr.w	r7, [sp], #4
 800413a:	4770      	bx	lr

0800413c <LL_ADC_IsCalibrationOnGoing>:
 800413c:	b480      	push	{r7}
 800413e:	b083      	sub	sp, #12
 8004140:	af00      	add	r7, sp, #0
 8004142:	6078      	str	r0, [r7, #4]
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	689b      	ldr	r3, [r3, #8]
 8004148:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800414c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8004150:	d101      	bne.n	8004156 <LL_ADC_IsCalibrationOnGoing+0x1a>
 8004152:	2301      	movs	r3, #1
 8004154:	e000      	b.n	8004158 <LL_ADC_IsCalibrationOnGoing+0x1c>
 8004156:	2300      	movs	r3, #0
 8004158:	4618      	mov	r0, r3
 800415a:	370c      	adds	r7, #12
 800415c:	46bd      	mov	sp, r7
 800415e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004162:	4770      	bx	lr

08004164 <HAL_ADCEx_Calibration_Start>:
 8004164:	b580      	push	{r7, lr}
 8004166:	b084      	sub	sp, #16
 8004168:	af00      	add	r7, sp, #0
 800416a:	6078      	str	r0, [r7, #4]
 800416c:	6039      	str	r1, [r7, #0]
 800416e:	2300      	movs	r3, #0
 8004170:	60bb      	str	r3, [r7, #8]
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004178:	2b01      	cmp	r3, #1
 800417a:	d101      	bne.n	8004180 <HAL_ADCEx_Calibration_Start+0x1c>
 800417c:	2302      	movs	r3, #2
 800417e:	e04d      	b.n	800421c <HAL_ADCEx_Calibration_Start+0xb8>
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	2201      	movs	r2, #1
 8004184:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004188:	6878      	ldr	r0, [r7, #4]
 800418a:	f7ff ff5f 	bl	800404c <ADC_Disable>
 800418e:	4603      	mov	r3, r0
 8004190:	73fb      	strb	r3, [r7, #15]
 8004192:	7bfb      	ldrb	r3, [r7, #15]
 8004194:	2b00      	cmp	r3, #0
 8004196:	d136      	bne.n	8004206 <HAL_ADCEx_Calibration_Start+0xa2>
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800419c:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 80041a0:	f023 0302 	bic.w	r3, r3, #2
 80041a4:	f043 0202 	orr.w	r2, r3, #2
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	655a      	str	r2, [r3, #84]	; 0x54
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	6839      	ldr	r1, [r7, #0]
 80041b2:	4618      	mov	r0, r3
 80041b4:	f7ff ffa9 	bl	800410a <LL_ADC_StartCalibration>
 80041b8:	e014      	b.n	80041e4 <HAL_ADCEx_Calibration_Start+0x80>
 80041ba:	68bb      	ldr	r3, [r7, #8]
 80041bc:	3301      	adds	r3, #1
 80041be:	60bb      	str	r3, [r7, #8]
 80041c0:	68bb      	ldr	r3, [r7, #8]
 80041c2:	f5b3 2f91 	cmp.w	r3, #296960	; 0x48800
 80041c6:	d30d      	bcc.n	80041e4 <HAL_ADCEx_Calibration_Start+0x80>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80041cc:	f023 0312 	bic.w	r3, r3, #18
 80041d0:	f043 0210 	orr.w	r2, r3, #16
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	655a      	str	r2, [r3, #84]	; 0x54
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	2200      	movs	r2, #0
 80041dc:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80041e0:	2301      	movs	r3, #1
 80041e2:	e01b      	b.n	800421c <HAL_ADCEx_Calibration_Start+0xb8>
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	4618      	mov	r0, r3
 80041ea:	f7ff ffa7 	bl	800413c <LL_ADC_IsCalibrationOnGoing>
 80041ee:	4603      	mov	r3, r0
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	d1e2      	bne.n	80041ba <HAL_ADCEx_Calibration_Start+0x56>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80041f8:	f023 0303 	bic.w	r3, r3, #3
 80041fc:	f043 0201 	orr.w	r2, r3, #1
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	655a      	str	r2, [r3, #84]	; 0x54
 8004204:	e005      	b.n	8004212 <HAL_ADCEx_Calibration_Start+0xae>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800420a:	f043 0210 	orr.w	r2, r3, #16
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	655a      	str	r2, [r3, #84]	; 0x54
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	2200      	movs	r2, #0
 8004216:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800421a:	7bfb      	ldrb	r3, [r7, #15]
 800421c:	4618      	mov	r0, r3
 800421e:	3710      	adds	r7, #16
 8004220:	46bd      	mov	sp, r7
 8004222:	bd80      	pop	{r7, pc}

08004224 <__NVIC_SetPriorityGrouping>:
 8004224:	b480      	push	{r7}
 8004226:	b085      	sub	sp, #20
 8004228:	af00      	add	r7, sp, #0
 800422a:	6078      	str	r0, [r7, #4]
 800422c:	687b      	ldr	r3, [r7, #4]
 800422e:	f003 0307 	and.w	r3, r3, #7
 8004232:	60fb      	str	r3, [r7, #12]
 8004234:	4b0c      	ldr	r3, [pc, #48]	; (8004268 <__NVIC_SetPriorityGrouping+0x44>)
 8004236:	68db      	ldr	r3, [r3, #12]
 8004238:	60bb      	str	r3, [r7, #8]
 800423a:	68ba      	ldr	r2, [r7, #8]
 800423c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004240:	4013      	ands	r3, r2
 8004242:	60bb      	str	r3, [r7, #8]
 8004244:	68fb      	ldr	r3, [r7, #12]
 8004246:	021a      	lsls	r2, r3, #8
 8004248:	68bb      	ldr	r3, [r7, #8]
 800424a:	4313      	orrs	r3, r2
 800424c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004250:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004254:	60bb      	str	r3, [r7, #8]
 8004256:	4a04      	ldr	r2, [pc, #16]	; (8004268 <__NVIC_SetPriorityGrouping+0x44>)
 8004258:	68bb      	ldr	r3, [r7, #8]
 800425a:	60d3      	str	r3, [r2, #12]
 800425c:	bf00      	nop
 800425e:	3714      	adds	r7, #20
 8004260:	46bd      	mov	sp, r7
 8004262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004266:	4770      	bx	lr
 8004268:	e000ed00 	.word	0xe000ed00

0800426c <__NVIC_GetPriorityGrouping>:
 800426c:	b480      	push	{r7}
 800426e:	af00      	add	r7, sp, #0
 8004270:	4b04      	ldr	r3, [pc, #16]	; (8004284 <__NVIC_GetPriorityGrouping+0x18>)
 8004272:	68db      	ldr	r3, [r3, #12]
 8004274:	0a1b      	lsrs	r3, r3, #8
 8004276:	f003 0307 	and.w	r3, r3, #7
 800427a:	4618      	mov	r0, r3
 800427c:	46bd      	mov	sp, r7
 800427e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004282:	4770      	bx	lr
 8004284:	e000ed00 	.word	0xe000ed00

08004288 <__NVIC_EnableIRQ>:
 8004288:	b480      	push	{r7}
 800428a:	b083      	sub	sp, #12
 800428c:	af00      	add	r7, sp, #0
 800428e:	4603      	mov	r3, r0
 8004290:	71fb      	strb	r3, [r7, #7]
 8004292:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004296:	2b00      	cmp	r3, #0
 8004298:	db0b      	blt.n	80042b2 <__NVIC_EnableIRQ+0x2a>
 800429a:	79fb      	ldrb	r3, [r7, #7]
 800429c:	f003 021f 	and.w	r2, r3, #31
 80042a0:	4907      	ldr	r1, [pc, #28]	; (80042c0 <__NVIC_EnableIRQ+0x38>)
 80042a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042a6:	095b      	lsrs	r3, r3, #5
 80042a8:	2001      	movs	r0, #1
 80042aa:	fa00 f202 	lsl.w	r2, r0, r2
 80042ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80042b2:	bf00      	nop
 80042b4:	370c      	adds	r7, #12
 80042b6:	46bd      	mov	sp, r7
 80042b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042bc:	4770      	bx	lr
 80042be:	bf00      	nop
 80042c0:	e000e100 	.word	0xe000e100

080042c4 <__NVIC_SetPriority>:
 80042c4:	b480      	push	{r7}
 80042c6:	b083      	sub	sp, #12
 80042c8:	af00      	add	r7, sp, #0
 80042ca:	4603      	mov	r3, r0
 80042cc:	6039      	str	r1, [r7, #0]
 80042ce:	71fb      	strb	r3, [r7, #7]
 80042d0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042d4:	2b00      	cmp	r3, #0
 80042d6:	db0a      	blt.n	80042ee <__NVIC_SetPriority+0x2a>
 80042d8:	683b      	ldr	r3, [r7, #0]
 80042da:	b2da      	uxtb	r2, r3
 80042dc:	490c      	ldr	r1, [pc, #48]	; (8004310 <__NVIC_SetPriority+0x4c>)
 80042de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80042e2:	0112      	lsls	r2, r2, #4
 80042e4:	b2d2      	uxtb	r2, r2
 80042e6:	440b      	add	r3, r1
 80042e8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80042ec:	e00a      	b.n	8004304 <__NVIC_SetPriority+0x40>
 80042ee:	683b      	ldr	r3, [r7, #0]
 80042f0:	b2da      	uxtb	r2, r3
 80042f2:	4908      	ldr	r1, [pc, #32]	; (8004314 <__NVIC_SetPriority+0x50>)
 80042f4:	79fb      	ldrb	r3, [r7, #7]
 80042f6:	f003 030f 	and.w	r3, r3, #15
 80042fa:	3b04      	subs	r3, #4
 80042fc:	0112      	lsls	r2, r2, #4
 80042fe:	b2d2      	uxtb	r2, r2
 8004300:	440b      	add	r3, r1
 8004302:	761a      	strb	r2, [r3, #24]
 8004304:	bf00      	nop
 8004306:	370c      	adds	r7, #12
 8004308:	46bd      	mov	sp, r7
 800430a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800430e:	4770      	bx	lr
 8004310:	e000e100 	.word	0xe000e100
 8004314:	e000ed00 	.word	0xe000ed00

08004318 <NVIC_EncodePriority>:
 8004318:	b480      	push	{r7}
 800431a:	b089      	sub	sp, #36	; 0x24
 800431c:	af00      	add	r7, sp, #0
 800431e:	60f8      	str	r0, [r7, #12]
 8004320:	60b9      	str	r1, [r7, #8]
 8004322:	607a      	str	r2, [r7, #4]
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	f003 0307 	and.w	r3, r3, #7
 800432a:	61fb      	str	r3, [r7, #28]
 800432c:	69fb      	ldr	r3, [r7, #28]
 800432e:	f1c3 0307 	rsb	r3, r3, #7
 8004332:	2b04      	cmp	r3, #4
 8004334:	bf28      	it	cs
 8004336:	2304      	movcs	r3, #4
 8004338:	61bb      	str	r3, [r7, #24]
 800433a:	69fb      	ldr	r3, [r7, #28]
 800433c:	3304      	adds	r3, #4
 800433e:	2b06      	cmp	r3, #6
 8004340:	d902      	bls.n	8004348 <NVIC_EncodePriority+0x30>
 8004342:	69fb      	ldr	r3, [r7, #28]
 8004344:	3b03      	subs	r3, #3
 8004346:	e000      	b.n	800434a <NVIC_EncodePriority+0x32>
 8004348:	2300      	movs	r3, #0
 800434a:	617b      	str	r3, [r7, #20]
 800434c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8004350:	69bb      	ldr	r3, [r7, #24]
 8004352:	fa02 f303 	lsl.w	r3, r2, r3
 8004356:	43da      	mvns	r2, r3
 8004358:	68bb      	ldr	r3, [r7, #8]
 800435a:	401a      	ands	r2, r3
 800435c:	697b      	ldr	r3, [r7, #20]
 800435e:	409a      	lsls	r2, r3
 8004360:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8004364:	697b      	ldr	r3, [r7, #20]
 8004366:	fa01 f303 	lsl.w	r3, r1, r3
 800436a:	43d9      	mvns	r1, r3
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	400b      	ands	r3, r1
 8004370:	4313      	orrs	r3, r2
 8004372:	4618      	mov	r0, r3
 8004374:	3724      	adds	r7, #36	; 0x24
 8004376:	46bd      	mov	sp, r7
 8004378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800437c:	4770      	bx	lr
	...

08004380 <SysTick_Config>:
 8004380:	b580      	push	{r7, lr}
 8004382:	b082      	sub	sp, #8
 8004384:	af00      	add	r7, sp, #0
 8004386:	6078      	str	r0, [r7, #4]
 8004388:	687b      	ldr	r3, [r7, #4]
 800438a:	3b01      	subs	r3, #1
 800438c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004390:	d301      	bcc.n	8004396 <SysTick_Config+0x16>
 8004392:	2301      	movs	r3, #1
 8004394:	e00f      	b.n	80043b6 <SysTick_Config+0x36>
 8004396:	4a0a      	ldr	r2, [pc, #40]	; (80043c0 <SysTick_Config+0x40>)
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	3b01      	subs	r3, #1
 800439c:	6053      	str	r3, [r2, #4]
 800439e:	210f      	movs	r1, #15
 80043a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80043a4:	f7ff ff8e 	bl	80042c4 <__NVIC_SetPriority>
 80043a8:	4b05      	ldr	r3, [pc, #20]	; (80043c0 <SysTick_Config+0x40>)
 80043aa:	2200      	movs	r2, #0
 80043ac:	609a      	str	r2, [r3, #8]
 80043ae:	4b04      	ldr	r3, [pc, #16]	; (80043c0 <SysTick_Config+0x40>)
 80043b0:	2207      	movs	r2, #7
 80043b2:	601a      	str	r2, [r3, #0]
 80043b4:	2300      	movs	r3, #0
 80043b6:	4618      	mov	r0, r3
 80043b8:	3708      	adds	r7, #8
 80043ba:	46bd      	mov	sp, r7
 80043bc:	bd80      	pop	{r7, pc}
 80043be:	bf00      	nop
 80043c0:	e000e010 	.word	0xe000e010

080043c4 <HAL_NVIC_SetPriorityGrouping>:
 80043c4:	b580      	push	{r7, lr}
 80043c6:	b082      	sub	sp, #8
 80043c8:	af00      	add	r7, sp, #0
 80043ca:	6078      	str	r0, [r7, #4]
 80043cc:	6878      	ldr	r0, [r7, #4]
 80043ce:	f7ff ff29 	bl	8004224 <__NVIC_SetPriorityGrouping>
 80043d2:	bf00      	nop
 80043d4:	3708      	adds	r7, #8
 80043d6:	46bd      	mov	sp, r7
 80043d8:	bd80      	pop	{r7, pc}

080043da <HAL_NVIC_SetPriority>:
 80043da:	b580      	push	{r7, lr}
 80043dc:	b086      	sub	sp, #24
 80043de:	af00      	add	r7, sp, #0
 80043e0:	4603      	mov	r3, r0
 80043e2:	60b9      	str	r1, [r7, #8]
 80043e4:	607a      	str	r2, [r7, #4]
 80043e6:	73fb      	strb	r3, [r7, #15]
 80043e8:	2300      	movs	r3, #0
 80043ea:	617b      	str	r3, [r7, #20]
 80043ec:	f7ff ff3e 	bl	800426c <__NVIC_GetPriorityGrouping>
 80043f0:	6178      	str	r0, [r7, #20]
 80043f2:	687a      	ldr	r2, [r7, #4]
 80043f4:	68b9      	ldr	r1, [r7, #8]
 80043f6:	6978      	ldr	r0, [r7, #20]
 80043f8:	f7ff ff8e 	bl	8004318 <NVIC_EncodePriority>
 80043fc:	4602      	mov	r2, r0
 80043fe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004402:	4611      	mov	r1, r2
 8004404:	4618      	mov	r0, r3
 8004406:	f7ff ff5d 	bl	80042c4 <__NVIC_SetPriority>
 800440a:	bf00      	nop
 800440c:	3718      	adds	r7, #24
 800440e:	46bd      	mov	sp, r7
 8004410:	bd80      	pop	{r7, pc}

08004412 <HAL_NVIC_EnableIRQ>:
 8004412:	b580      	push	{r7, lr}
 8004414:	b082      	sub	sp, #8
 8004416:	af00      	add	r7, sp, #0
 8004418:	4603      	mov	r3, r0
 800441a:	71fb      	strb	r3, [r7, #7]
 800441c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004420:	4618      	mov	r0, r3
 8004422:	f7ff ff31 	bl	8004288 <__NVIC_EnableIRQ>
 8004426:	bf00      	nop
 8004428:	3708      	adds	r7, #8
 800442a:	46bd      	mov	sp, r7
 800442c:	bd80      	pop	{r7, pc}

0800442e <HAL_SYSTICK_Config>:
 800442e:	b580      	push	{r7, lr}
 8004430:	b082      	sub	sp, #8
 8004432:	af00      	add	r7, sp, #0
 8004434:	6078      	str	r0, [r7, #4]
 8004436:	6878      	ldr	r0, [r7, #4]
 8004438:	f7ff ffa2 	bl	8004380 <SysTick_Config>
 800443c:	4603      	mov	r3, r0
 800443e:	4618      	mov	r0, r3
 8004440:	3708      	adds	r7, #8
 8004442:	46bd      	mov	sp, r7
 8004444:	bd80      	pop	{r7, pc}
	...

08004448 <HAL_DMA_Init>:
 8004448:	b480      	push	{r7}
 800444a:	b085      	sub	sp, #20
 800444c:	af00      	add	r7, sp, #0
 800444e:	6078      	str	r0, [r7, #4]
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	2b00      	cmp	r3, #0
 8004454:	d101      	bne.n	800445a <HAL_DMA_Init+0x12>
 8004456:	2301      	movs	r3, #1
 8004458:	e098      	b.n	800458c <HAL_DMA_Init+0x144>
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	461a      	mov	r2, r3
 8004460:	4b4d      	ldr	r3, [pc, #308]	; (8004598 <HAL_DMA_Init+0x150>)
 8004462:	429a      	cmp	r2, r3
 8004464:	d80f      	bhi.n	8004486 <HAL_DMA_Init+0x3e>
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	681b      	ldr	r3, [r3, #0]
 800446a:	461a      	mov	r2, r3
 800446c:	4b4b      	ldr	r3, [pc, #300]	; (800459c <HAL_DMA_Init+0x154>)
 800446e:	4413      	add	r3, r2
 8004470:	4a4b      	ldr	r2, [pc, #300]	; (80045a0 <HAL_DMA_Init+0x158>)
 8004472:	fba2 2303 	umull	r2, r3, r2, r3
 8004476:	091b      	lsrs	r3, r3, #4
 8004478:	009a      	lsls	r2, r3, #2
 800447a:	687b      	ldr	r3, [r7, #4]
 800447c:	645a      	str	r2, [r3, #68]	; 0x44
 800447e:	687b      	ldr	r3, [r7, #4]
 8004480:	4a48      	ldr	r2, [pc, #288]	; (80045a4 <HAL_DMA_Init+0x15c>)
 8004482:	641a      	str	r2, [r3, #64]	; 0x40
 8004484:	e00e      	b.n	80044a4 <HAL_DMA_Init+0x5c>
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	461a      	mov	r2, r3
 800448c:	4b46      	ldr	r3, [pc, #280]	; (80045a8 <HAL_DMA_Init+0x160>)
 800448e:	4413      	add	r3, r2
 8004490:	4a43      	ldr	r2, [pc, #268]	; (80045a0 <HAL_DMA_Init+0x158>)
 8004492:	fba2 2303 	umull	r2, r3, r2, r3
 8004496:	091b      	lsrs	r3, r3, #4
 8004498:	009a      	lsls	r2, r3, #2
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	645a      	str	r2, [r3, #68]	; 0x44
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	4a42      	ldr	r2, [pc, #264]	; (80045ac <HAL_DMA_Init+0x164>)
 80044a2:	641a      	str	r2, [r3, #64]	; 0x40
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	2202      	movs	r2, #2
 80044a8:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	60fb      	str	r3, [r7, #12]
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 80044ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80044be:	60fb      	str	r3, [r7, #12]
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	689a      	ldr	r2, [r3, #8]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	68db      	ldr	r3, [r3, #12]
 80044c8:	431a      	orrs	r2, r3
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	691b      	ldr	r3, [r3, #16]
 80044ce:	431a      	orrs	r2, r3
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	695b      	ldr	r3, [r3, #20]
 80044d4:	431a      	orrs	r2, r3
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	699b      	ldr	r3, [r3, #24]
 80044da:	431a      	orrs	r2, r3
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	69db      	ldr	r3, [r3, #28]
 80044e0:	431a      	orrs	r2, r3
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	6a1b      	ldr	r3, [r3, #32]
 80044e6:	4313      	orrs	r3, r2
 80044e8:	68fa      	ldr	r2, [r7, #12]
 80044ea:	4313      	orrs	r3, r2
 80044ec:	60fb      	str	r3, [r7, #12]
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	68fa      	ldr	r2, [r7, #12]
 80044f4:	601a      	str	r2, [r3, #0]
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	689b      	ldr	r3, [r3, #8]
 80044fa:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80044fe:	d039      	beq.n	8004574 <HAL_DMA_Init+0x12c>
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004504:	4a27      	ldr	r2, [pc, #156]	; (80045a4 <HAL_DMA_Init+0x15c>)
 8004506:	4293      	cmp	r3, r2
 8004508:	d11a      	bne.n	8004540 <HAL_DMA_Init+0xf8>
 800450a:	4b29      	ldr	r3, [pc, #164]	; (80045b0 <HAL_DMA_Init+0x168>)
 800450c:	681a      	ldr	r2, [r3, #0]
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004512:	f003 031c 	and.w	r3, r3, #28
 8004516:	210f      	movs	r1, #15
 8004518:	fa01 f303 	lsl.w	r3, r1, r3
 800451c:	43db      	mvns	r3, r3
 800451e:	4924      	ldr	r1, [pc, #144]	; (80045b0 <HAL_DMA_Init+0x168>)
 8004520:	4013      	ands	r3, r2
 8004522:	600b      	str	r3, [r1, #0]
 8004524:	4b22      	ldr	r3, [pc, #136]	; (80045b0 <HAL_DMA_Init+0x168>)
 8004526:	681a      	ldr	r2, [r3, #0]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	6859      	ldr	r1, [r3, #4]
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004530:	f003 031c 	and.w	r3, r3, #28
 8004534:	fa01 f303 	lsl.w	r3, r1, r3
 8004538:	491d      	ldr	r1, [pc, #116]	; (80045b0 <HAL_DMA_Init+0x168>)
 800453a:	4313      	orrs	r3, r2
 800453c:	600b      	str	r3, [r1, #0]
 800453e:	e019      	b.n	8004574 <HAL_DMA_Init+0x12c>
 8004540:	4b1c      	ldr	r3, [pc, #112]	; (80045b4 <HAL_DMA_Init+0x16c>)
 8004542:	681a      	ldr	r2, [r3, #0]
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004548:	f003 031c 	and.w	r3, r3, #28
 800454c:	210f      	movs	r1, #15
 800454e:	fa01 f303 	lsl.w	r3, r1, r3
 8004552:	43db      	mvns	r3, r3
 8004554:	4917      	ldr	r1, [pc, #92]	; (80045b4 <HAL_DMA_Init+0x16c>)
 8004556:	4013      	ands	r3, r2
 8004558:	600b      	str	r3, [r1, #0]
 800455a:	4b16      	ldr	r3, [pc, #88]	; (80045b4 <HAL_DMA_Init+0x16c>)
 800455c:	681a      	ldr	r2, [r3, #0]
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	6859      	ldr	r1, [r3, #4]
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004566:	f003 031c 	and.w	r3, r3, #28
 800456a:	fa01 f303 	lsl.w	r3, r1, r3
 800456e:	4911      	ldr	r1, [pc, #68]	; (80045b4 <HAL_DMA_Init+0x16c>)
 8004570:	4313      	orrs	r3, r2
 8004572:	600b      	str	r3, [r1, #0]
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	2200      	movs	r2, #0
 8004578:	63da      	str	r2, [r3, #60]	; 0x3c
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	2201      	movs	r2, #1
 800457e:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	2200      	movs	r2, #0
 8004586:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800458a:	2300      	movs	r3, #0
 800458c:	4618      	mov	r0, r3
 800458e:	3714      	adds	r7, #20
 8004590:	46bd      	mov	sp, r7
 8004592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004596:	4770      	bx	lr
 8004598:	40020407 	.word	0x40020407
 800459c:	bffdfff8 	.word	0xbffdfff8
 80045a0:	cccccccd 	.word	0xcccccccd
 80045a4:	40020000 	.word	0x40020000
 80045a8:	bffdfbf8 	.word	0xbffdfbf8
 80045ac:	40020400 	.word	0x40020400
 80045b0:	400200a8 	.word	0x400200a8
 80045b4:	400204a8 	.word	0x400204a8

080045b8 <HAL_DMA_Start_IT>:
 80045b8:	b580      	push	{r7, lr}
 80045ba:	b086      	sub	sp, #24
 80045bc:	af00      	add	r7, sp, #0
 80045be:	60f8      	str	r0, [r7, #12]
 80045c0:	60b9      	str	r1, [r7, #8]
 80045c2:	607a      	str	r2, [r7, #4]
 80045c4:	603b      	str	r3, [r7, #0]
 80045c6:	2300      	movs	r3, #0
 80045c8:	75fb      	strb	r3, [r7, #23]
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80045d0:	2b01      	cmp	r3, #1
 80045d2:	d101      	bne.n	80045d8 <HAL_DMA_Start_IT+0x20>
 80045d4:	2302      	movs	r3, #2
 80045d6:	e04b      	b.n	8004670 <HAL_DMA_Start_IT+0xb8>
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	2201      	movs	r2, #1
 80045dc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80045e0:	68fb      	ldr	r3, [r7, #12]
 80045e2:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 80045e6:	b2db      	uxtb	r3, r3
 80045e8:	2b01      	cmp	r3, #1
 80045ea:	d13a      	bne.n	8004662 <HAL_DMA_Start_IT+0xaa>
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	2202      	movs	r2, #2
 80045f0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80045f4:	68fb      	ldr	r3, [r7, #12]
 80045f6:	2200      	movs	r2, #0
 80045f8:	63da      	str	r2, [r3, #60]	; 0x3c
 80045fa:	68fb      	ldr	r3, [r7, #12]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	681a      	ldr	r2, [r3, #0]
 8004600:	68fb      	ldr	r3, [r7, #12]
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	f022 0201 	bic.w	r2, r2, #1
 8004608:	601a      	str	r2, [r3, #0]
 800460a:	683b      	ldr	r3, [r7, #0]
 800460c:	687a      	ldr	r2, [r7, #4]
 800460e:	68b9      	ldr	r1, [r7, #8]
 8004610:	68f8      	ldr	r0, [r7, #12]
 8004612:	f000 f8e0 	bl	80047d6 <DMA_SetConfig>
 8004616:	68fb      	ldr	r3, [r7, #12]
 8004618:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800461a:	2b00      	cmp	r3, #0
 800461c:	d008      	beq.n	8004630 <HAL_DMA_Start_IT+0x78>
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	681a      	ldr	r2, [r3, #0]
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	681b      	ldr	r3, [r3, #0]
 8004628:	f042 020e 	orr.w	r2, r2, #14
 800462c:	601a      	str	r2, [r3, #0]
 800462e:	e00f      	b.n	8004650 <HAL_DMA_Start_IT+0x98>
 8004630:	68fb      	ldr	r3, [r7, #12]
 8004632:	681b      	ldr	r3, [r3, #0]
 8004634:	681a      	ldr	r2, [r3, #0]
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	f022 0204 	bic.w	r2, r2, #4
 800463e:	601a      	str	r2, [r3, #0]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	f042 020a 	orr.w	r2, r2, #10
 800464e:	601a      	str	r2, [r3, #0]
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	681b      	ldr	r3, [r3, #0]
 8004654:	681a      	ldr	r2, [r3, #0]
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	f042 0201 	orr.w	r2, r2, #1
 800465e:	601a      	str	r2, [r3, #0]
 8004660:	e005      	b.n	800466e <HAL_DMA_Start_IT+0xb6>
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	2200      	movs	r2, #0
 8004666:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800466a:	2302      	movs	r3, #2
 800466c:	75fb      	strb	r3, [r7, #23]
 800466e:	7dfb      	ldrb	r3, [r7, #23]
 8004670:	4618      	mov	r0, r3
 8004672:	3718      	adds	r7, #24
 8004674:	46bd      	mov	sp, r7
 8004676:	bd80      	pop	{r7, pc}

08004678 <HAL_DMA_IRQHandler>:
 8004678:	b580      	push	{r7, lr}
 800467a:	b084      	sub	sp, #16
 800467c:	af00      	add	r7, sp, #0
 800467e:	6078      	str	r0, [r7, #4]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004684:	681b      	ldr	r3, [r3, #0]
 8004686:	60fb      	str	r3, [r7, #12]
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	681b      	ldr	r3, [r3, #0]
 800468c:	681b      	ldr	r3, [r3, #0]
 800468e:	60bb      	str	r3, [r7, #8]
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004694:	f003 031c 	and.w	r3, r3, #28
 8004698:	2204      	movs	r2, #4
 800469a:	409a      	lsls	r2, r3
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	4013      	ands	r3, r2
 80046a0:	2b00      	cmp	r3, #0
 80046a2:	d026      	beq.n	80046f2 <HAL_DMA_IRQHandler+0x7a>
 80046a4:	68bb      	ldr	r3, [r7, #8]
 80046a6:	f003 0304 	and.w	r3, r3, #4
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d021      	beq.n	80046f2 <HAL_DMA_IRQHandler+0x7a>
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	f003 0320 	and.w	r3, r3, #32
 80046b8:	2b00      	cmp	r3, #0
 80046ba:	d107      	bne.n	80046cc <HAL_DMA_IRQHandler+0x54>
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	681a      	ldr	r2, [r3, #0]
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	f022 0204 	bic.w	r2, r2, #4
 80046ca:	601a      	str	r2, [r3, #0]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046d0:	f003 021c 	and.w	r2, r3, #28
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046d8:	2104      	movs	r1, #4
 80046da:	fa01 f202 	lsl.w	r2, r1, r2
 80046de:	605a      	str	r2, [r3, #4]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046e4:	2b00      	cmp	r3, #0
 80046e6:	d071      	beq.n	80047cc <HAL_DMA_IRQHandler+0x154>
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046ec:	6878      	ldr	r0, [r7, #4]
 80046ee:	4798      	blx	r3
 80046f0:	e06c      	b.n	80047cc <HAL_DMA_IRQHandler+0x154>
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046f6:	f003 031c 	and.w	r3, r3, #28
 80046fa:	2202      	movs	r2, #2
 80046fc:	409a      	lsls	r2, r3
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	4013      	ands	r3, r2
 8004702:	2b00      	cmp	r3, #0
 8004704:	d02e      	beq.n	8004764 <HAL_DMA_IRQHandler+0xec>
 8004706:	68bb      	ldr	r3, [r7, #8]
 8004708:	f003 0302 	and.w	r3, r3, #2
 800470c:	2b00      	cmp	r3, #0
 800470e:	d029      	beq.n	8004764 <HAL_DMA_IRQHandler+0xec>
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	f003 0320 	and.w	r3, r3, #32
 800471a:	2b00      	cmp	r3, #0
 800471c:	d10b      	bne.n	8004736 <HAL_DMA_IRQHandler+0xbe>
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	681a      	ldr	r2, [r3, #0]
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	f022 020a 	bic.w	r2, r2, #10
 800472c:	601a      	str	r2, [r3, #0]
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	2201      	movs	r2, #1
 8004732:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800473a:	f003 021c 	and.w	r2, r3, #28
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004742:	2102      	movs	r1, #2
 8004744:	fa01 f202 	lsl.w	r2, r1, r2
 8004748:	605a      	str	r2, [r3, #4]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	2200      	movs	r2, #0
 800474e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004756:	2b00      	cmp	r3, #0
 8004758:	d038      	beq.n	80047cc <HAL_DMA_IRQHandler+0x154>
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800475e:	6878      	ldr	r0, [r7, #4]
 8004760:	4798      	blx	r3
 8004762:	e033      	b.n	80047cc <HAL_DMA_IRQHandler+0x154>
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004768:	f003 031c 	and.w	r3, r3, #28
 800476c:	2208      	movs	r2, #8
 800476e:	409a      	lsls	r2, r3
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	4013      	ands	r3, r2
 8004774:	2b00      	cmp	r3, #0
 8004776:	d02a      	beq.n	80047ce <HAL_DMA_IRQHandler+0x156>
 8004778:	68bb      	ldr	r3, [r7, #8]
 800477a:	f003 0308 	and.w	r3, r3, #8
 800477e:	2b00      	cmp	r3, #0
 8004780:	d025      	beq.n	80047ce <HAL_DMA_IRQHandler+0x156>
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	681a      	ldr	r2, [r3, #0]
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f022 020e 	bic.w	r2, r2, #14
 8004790:	601a      	str	r2, [r3, #0]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004796:	f003 021c 	and.w	r2, r3, #28
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800479e:	2101      	movs	r1, #1
 80047a0:	fa01 f202 	lsl.w	r2, r1, r2
 80047a4:	605a      	str	r2, [r3, #4]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	2201      	movs	r2, #1
 80047aa:	63da      	str	r2, [r3, #60]	; 0x3c
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	2201      	movs	r2, #1
 80047b0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	2200      	movs	r2, #0
 80047b8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80047c0:	2b00      	cmp	r3, #0
 80047c2:	d004      	beq.n	80047ce <HAL_DMA_IRQHandler+0x156>
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80047c8:	6878      	ldr	r0, [r7, #4]
 80047ca:	4798      	blx	r3
 80047cc:	bf00      	nop
 80047ce:	bf00      	nop
 80047d0:	3710      	adds	r7, #16
 80047d2:	46bd      	mov	sp, r7
 80047d4:	bd80      	pop	{r7, pc}

080047d6 <DMA_SetConfig>:
 80047d6:	b480      	push	{r7}
 80047d8:	b085      	sub	sp, #20
 80047da:	af00      	add	r7, sp, #0
 80047dc:	60f8      	str	r0, [r7, #12]
 80047de:	60b9      	str	r1, [r7, #8]
 80047e0:	607a      	str	r2, [r7, #4]
 80047e2:	603b      	str	r3, [r7, #0]
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047e8:	f003 021c 	and.w	r2, r3, #28
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047f0:	2101      	movs	r1, #1
 80047f2:	fa01 f202 	lsl.w	r2, r1, r2
 80047f6:	605a      	str	r2, [r3, #4]
 80047f8:	68fb      	ldr	r3, [r7, #12]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	683a      	ldr	r2, [r7, #0]
 80047fe:	605a      	str	r2, [r3, #4]
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	689b      	ldr	r3, [r3, #8]
 8004804:	2b10      	cmp	r3, #16
 8004806:	d108      	bne.n	800481a <DMA_SetConfig+0x44>
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	687a      	ldr	r2, [r7, #4]
 800480e:	609a      	str	r2, [r3, #8]
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	68ba      	ldr	r2, [r7, #8]
 8004816:	60da      	str	r2, [r3, #12]
 8004818:	e007      	b.n	800482a <DMA_SetConfig+0x54>
 800481a:	68fb      	ldr	r3, [r7, #12]
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	68ba      	ldr	r2, [r7, #8]
 8004820:	609a      	str	r2, [r3, #8]
 8004822:	68fb      	ldr	r3, [r7, #12]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	687a      	ldr	r2, [r7, #4]
 8004828:	60da      	str	r2, [r3, #12]
 800482a:	bf00      	nop
 800482c:	3714      	adds	r7, #20
 800482e:	46bd      	mov	sp, r7
 8004830:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004834:	4770      	bx	lr
	...

08004838 <HAL_GPIO_Init>:
 8004838:	b480      	push	{r7}
 800483a:	b087      	sub	sp, #28
 800483c:	af00      	add	r7, sp, #0
 800483e:	6078      	str	r0, [r7, #4]
 8004840:	6039      	str	r1, [r7, #0]
 8004842:	2300      	movs	r3, #0
 8004844:	617b      	str	r3, [r7, #20]
 8004846:	e148      	b.n	8004ada <HAL_GPIO_Init+0x2a2>
 8004848:	683b      	ldr	r3, [r7, #0]
 800484a:	681a      	ldr	r2, [r3, #0]
 800484c:	2101      	movs	r1, #1
 800484e:	697b      	ldr	r3, [r7, #20]
 8004850:	fa01 f303 	lsl.w	r3, r1, r3
 8004854:	4013      	ands	r3, r2
 8004856:	60fb      	str	r3, [r7, #12]
 8004858:	68fb      	ldr	r3, [r7, #12]
 800485a:	2b00      	cmp	r3, #0
 800485c:	f000 813a 	beq.w	8004ad4 <HAL_GPIO_Init+0x29c>
 8004860:	683b      	ldr	r3, [r7, #0]
 8004862:	685b      	ldr	r3, [r3, #4]
 8004864:	2b01      	cmp	r3, #1
 8004866:	d00b      	beq.n	8004880 <HAL_GPIO_Init+0x48>
 8004868:	683b      	ldr	r3, [r7, #0]
 800486a:	685b      	ldr	r3, [r3, #4]
 800486c:	2b02      	cmp	r3, #2
 800486e:	d007      	beq.n	8004880 <HAL_GPIO_Init+0x48>
 8004870:	683b      	ldr	r3, [r7, #0]
 8004872:	685b      	ldr	r3, [r3, #4]
 8004874:	2b11      	cmp	r3, #17
 8004876:	d003      	beq.n	8004880 <HAL_GPIO_Init+0x48>
 8004878:	683b      	ldr	r3, [r7, #0]
 800487a:	685b      	ldr	r3, [r3, #4]
 800487c:	2b12      	cmp	r3, #18
 800487e:	d130      	bne.n	80048e2 <HAL_GPIO_Init+0xaa>
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	689b      	ldr	r3, [r3, #8]
 8004884:	613b      	str	r3, [r7, #16]
 8004886:	697b      	ldr	r3, [r7, #20]
 8004888:	005b      	lsls	r3, r3, #1
 800488a:	2203      	movs	r2, #3
 800488c:	fa02 f303 	lsl.w	r3, r2, r3
 8004890:	43db      	mvns	r3, r3
 8004892:	693a      	ldr	r2, [r7, #16]
 8004894:	4013      	ands	r3, r2
 8004896:	613b      	str	r3, [r7, #16]
 8004898:	683b      	ldr	r3, [r7, #0]
 800489a:	68da      	ldr	r2, [r3, #12]
 800489c:	697b      	ldr	r3, [r7, #20]
 800489e:	005b      	lsls	r3, r3, #1
 80048a0:	fa02 f303 	lsl.w	r3, r2, r3
 80048a4:	693a      	ldr	r2, [r7, #16]
 80048a6:	4313      	orrs	r3, r2
 80048a8:	613b      	str	r3, [r7, #16]
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	693a      	ldr	r2, [r7, #16]
 80048ae:	609a      	str	r2, [r3, #8]
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	685b      	ldr	r3, [r3, #4]
 80048b4:	613b      	str	r3, [r7, #16]
 80048b6:	2201      	movs	r2, #1
 80048b8:	697b      	ldr	r3, [r7, #20]
 80048ba:	fa02 f303 	lsl.w	r3, r2, r3
 80048be:	43db      	mvns	r3, r3
 80048c0:	693a      	ldr	r2, [r7, #16]
 80048c2:	4013      	ands	r3, r2
 80048c4:	613b      	str	r3, [r7, #16]
 80048c6:	683b      	ldr	r3, [r7, #0]
 80048c8:	685b      	ldr	r3, [r3, #4]
 80048ca:	091b      	lsrs	r3, r3, #4
 80048cc:	f003 0201 	and.w	r2, r3, #1
 80048d0:	697b      	ldr	r3, [r7, #20]
 80048d2:	fa02 f303 	lsl.w	r3, r2, r3
 80048d6:	693a      	ldr	r2, [r7, #16]
 80048d8:	4313      	orrs	r3, r2
 80048da:	613b      	str	r3, [r7, #16]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	693a      	ldr	r2, [r7, #16]
 80048e0:	605a      	str	r2, [r3, #4]
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	68db      	ldr	r3, [r3, #12]
 80048e6:	613b      	str	r3, [r7, #16]
 80048e8:	697b      	ldr	r3, [r7, #20]
 80048ea:	005b      	lsls	r3, r3, #1
 80048ec:	2203      	movs	r2, #3
 80048ee:	fa02 f303 	lsl.w	r3, r2, r3
 80048f2:	43db      	mvns	r3, r3
 80048f4:	693a      	ldr	r2, [r7, #16]
 80048f6:	4013      	ands	r3, r2
 80048f8:	613b      	str	r3, [r7, #16]
 80048fa:	683b      	ldr	r3, [r7, #0]
 80048fc:	689a      	ldr	r2, [r3, #8]
 80048fe:	697b      	ldr	r3, [r7, #20]
 8004900:	005b      	lsls	r3, r3, #1
 8004902:	fa02 f303 	lsl.w	r3, r2, r3
 8004906:	693a      	ldr	r2, [r7, #16]
 8004908:	4313      	orrs	r3, r2
 800490a:	613b      	str	r3, [r7, #16]
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	693a      	ldr	r2, [r7, #16]
 8004910:	60da      	str	r2, [r3, #12]
 8004912:	683b      	ldr	r3, [r7, #0]
 8004914:	685b      	ldr	r3, [r3, #4]
 8004916:	2b02      	cmp	r3, #2
 8004918:	d003      	beq.n	8004922 <HAL_GPIO_Init+0xea>
 800491a:	683b      	ldr	r3, [r7, #0]
 800491c:	685b      	ldr	r3, [r3, #4]
 800491e:	2b12      	cmp	r3, #18
 8004920:	d123      	bne.n	800496a <HAL_GPIO_Init+0x132>
 8004922:	697b      	ldr	r3, [r7, #20]
 8004924:	08da      	lsrs	r2, r3, #3
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	3208      	adds	r2, #8
 800492a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800492e:	613b      	str	r3, [r7, #16]
 8004930:	697b      	ldr	r3, [r7, #20]
 8004932:	f003 0307 	and.w	r3, r3, #7
 8004936:	009b      	lsls	r3, r3, #2
 8004938:	220f      	movs	r2, #15
 800493a:	fa02 f303 	lsl.w	r3, r2, r3
 800493e:	43db      	mvns	r3, r3
 8004940:	693a      	ldr	r2, [r7, #16]
 8004942:	4013      	ands	r3, r2
 8004944:	613b      	str	r3, [r7, #16]
 8004946:	683b      	ldr	r3, [r7, #0]
 8004948:	691a      	ldr	r2, [r3, #16]
 800494a:	697b      	ldr	r3, [r7, #20]
 800494c:	f003 0307 	and.w	r3, r3, #7
 8004950:	009b      	lsls	r3, r3, #2
 8004952:	fa02 f303 	lsl.w	r3, r2, r3
 8004956:	693a      	ldr	r2, [r7, #16]
 8004958:	4313      	orrs	r3, r2
 800495a:	613b      	str	r3, [r7, #16]
 800495c:	697b      	ldr	r3, [r7, #20]
 800495e:	08da      	lsrs	r2, r3, #3
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	3208      	adds	r2, #8
 8004964:	6939      	ldr	r1, [r7, #16]
 8004966:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	613b      	str	r3, [r7, #16]
 8004970:	697b      	ldr	r3, [r7, #20]
 8004972:	005b      	lsls	r3, r3, #1
 8004974:	2203      	movs	r2, #3
 8004976:	fa02 f303 	lsl.w	r3, r2, r3
 800497a:	43db      	mvns	r3, r3
 800497c:	693a      	ldr	r2, [r7, #16]
 800497e:	4013      	ands	r3, r2
 8004980:	613b      	str	r3, [r7, #16]
 8004982:	683b      	ldr	r3, [r7, #0]
 8004984:	685b      	ldr	r3, [r3, #4]
 8004986:	f003 0203 	and.w	r2, r3, #3
 800498a:	697b      	ldr	r3, [r7, #20]
 800498c:	005b      	lsls	r3, r3, #1
 800498e:	fa02 f303 	lsl.w	r3, r2, r3
 8004992:	693a      	ldr	r2, [r7, #16]
 8004994:	4313      	orrs	r3, r2
 8004996:	613b      	str	r3, [r7, #16]
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	693a      	ldr	r2, [r7, #16]
 800499c:	601a      	str	r2, [r3, #0]
 800499e:	683b      	ldr	r3, [r7, #0]
 80049a0:	685b      	ldr	r3, [r3, #4]
 80049a2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	f000 8094 	beq.w	8004ad4 <HAL_GPIO_Init+0x29c>
 80049ac:	4b52      	ldr	r3, [pc, #328]	; (8004af8 <HAL_GPIO_Init+0x2c0>)
 80049ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80049b0:	4a51      	ldr	r2, [pc, #324]	; (8004af8 <HAL_GPIO_Init+0x2c0>)
 80049b2:	f043 0301 	orr.w	r3, r3, #1
 80049b6:	6613      	str	r3, [r2, #96]	; 0x60
 80049b8:	4b4f      	ldr	r3, [pc, #316]	; (8004af8 <HAL_GPIO_Init+0x2c0>)
 80049ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80049bc:	f003 0301 	and.w	r3, r3, #1
 80049c0:	60bb      	str	r3, [r7, #8]
 80049c2:	68bb      	ldr	r3, [r7, #8]
 80049c4:	4a4d      	ldr	r2, [pc, #308]	; (8004afc <HAL_GPIO_Init+0x2c4>)
 80049c6:	697b      	ldr	r3, [r7, #20]
 80049c8:	089b      	lsrs	r3, r3, #2
 80049ca:	3302      	adds	r3, #2
 80049cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80049d0:	613b      	str	r3, [r7, #16]
 80049d2:	697b      	ldr	r3, [r7, #20]
 80049d4:	f003 0303 	and.w	r3, r3, #3
 80049d8:	009b      	lsls	r3, r3, #2
 80049da:	220f      	movs	r2, #15
 80049dc:	fa02 f303 	lsl.w	r3, r2, r3
 80049e0:	43db      	mvns	r3, r3
 80049e2:	693a      	ldr	r2, [r7, #16]
 80049e4:	4013      	ands	r3, r2
 80049e6:	613b      	str	r3, [r7, #16]
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80049ee:	d00d      	beq.n	8004a0c <HAL_GPIO_Init+0x1d4>
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	4a43      	ldr	r2, [pc, #268]	; (8004b00 <HAL_GPIO_Init+0x2c8>)
 80049f4:	4293      	cmp	r3, r2
 80049f6:	d007      	beq.n	8004a08 <HAL_GPIO_Init+0x1d0>
 80049f8:	687b      	ldr	r3, [r7, #4]
 80049fa:	4a42      	ldr	r2, [pc, #264]	; (8004b04 <HAL_GPIO_Init+0x2cc>)
 80049fc:	4293      	cmp	r3, r2
 80049fe:	d101      	bne.n	8004a04 <HAL_GPIO_Init+0x1cc>
 8004a00:	2302      	movs	r3, #2
 8004a02:	e004      	b.n	8004a0e <HAL_GPIO_Init+0x1d6>
 8004a04:	2307      	movs	r3, #7
 8004a06:	e002      	b.n	8004a0e <HAL_GPIO_Init+0x1d6>
 8004a08:	2301      	movs	r3, #1
 8004a0a:	e000      	b.n	8004a0e <HAL_GPIO_Init+0x1d6>
 8004a0c:	2300      	movs	r3, #0
 8004a0e:	697a      	ldr	r2, [r7, #20]
 8004a10:	f002 0203 	and.w	r2, r2, #3
 8004a14:	0092      	lsls	r2, r2, #2
 8004a16:	4093      	lsls	r3, r2
 8004a18:	693a      	ldr	r2, [r7, #16]
 8004a1a:	4313      	orrs	r3, r2
 8004a1c:	613b      	str	r3, [r7, #16]
 8004a1e:	4937      	ldr	r1, [pc, #220]	; (8004afc <HAL_GPIO_Init+0x2c4>)
 8004a20:	697b      	ldr	r3, [r7, #20]
 8004a22:	089b      	lsrs	r3, r3, #2
 8004a24:	3302      	adds	r3, #2
 8004a26:	693a      	ldr	r2, [r7, #16]
 8004a28:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004a2c:	4b36      	ldr	r3, [pc, #216]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	613b      	str	r3, [r7, #16]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	43db      	mvns	r3, r3
 8004a36:	693a      	ldr	r2, [r7, #16]
 8004a38:	4013      	ands	r3, r2
 8004a3a:	613b      	str	r3, [r7, #16]
 8004a3c:	683b      	ldr	r3, [r7, #0]
 8004a3e:	685b      	ldr	r3, [r3, #4]
 8004a40:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	d003      	beq.n	8004a50 <HAL_GPIO_Init+0x218>
 8004a48:	693a      	ldr	r2, [r7, #16]
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	4313      	orrs	r3, r2
 8004a4e:	613b      	str	r3, [r7, #16]
 8004a50:	4a2d      	ldr	r2, [pc, #180]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004a52:	693b      	ldr	r3, [r7, #16]
 8004a54:	6013      	str	r3, [r2, #0]
 8004a56:	4b2c      	ldr	r3, [pc, #176]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004a58:	685b      	ldr	r3, [r3, #4]
 8004a5a:	613b      	str	r3, [r7, #16]
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	43db      	mvns	r3, r3
 8004a60:	693a      	ldr	r2, [r7, #16]
 8004a62:	4013      	ands	r3, r2
 8004a64:	613b      	str	r3, [r7, #16]
 8004a66:	683b      	ldr	r3, [r7, #0]
 8004a68:	685b      	ldr	r3, [r3, #4]
 8004a6a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d003      	beq.n	8004a7a <HAL_GPIO_Init+0x242>
 8004a72:	693a      	ldr	r2, [r7, #16]
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	4313      	orrs	r3, r2
 8004a78:	613b      	str	r3, [r7, #16]
 8004a7a:	4a23      	ldr	r2, [pc, #140]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004a7c:	693b      	ldr	r3, [r7, #16]
 8004a7e:	6053      	str	r3, [r2, #4]
 8004a80:	4b21      	ldr	r3, [pc, #132]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004a82:	689b      	ldr	r3, [r3, #8]
 8004a84:	613b      	str	r3, [r7, #16]
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	43db      	mvns	r3, r3
 8004a8a:	693a      	ldr	r2, [r7, #16]
 8004a8c:	4013      	ands	r3, r2
 8004a8e:	613b      	str	r3, [r7, #16]
 8004a90:	683b      	ldr	r3, [r7, #0]
 8004a92:	685b      	ldr	r3, [r3, #4]
 8004a94:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004a98:	2b00      	cmp	r3, #0
 8004a9a:	d003      	beq.n	8004aa4 <HAL_GPIO_Init+0x26c>
 8004a9c:	693a      	ldr	r2, [r7, #16]
 8004a9e:	68fb      	ldr	r3, [r7, #12]
 8004aa0:	4313      	orrs	r3, r2
 8004aa2:	613b      	str	r3, [r7, #16]
 8004aa4:	4a18      	ldr	r2, [pc, #96]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004aa6:	693b      	ldr	r3, [r7, #16]
 8004aa8:	6093      	str	r3, [r2, #8]
 8004aaa:	4b17      	ldr	r3, [pc, #92]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004aac:	68db      	ldr	r3, [r3, #12]
 8004aae:	613b      	str	r3, [r7, #16]
 8004ab0:	68fb      	ldr	r3, [r7, #12]
 8004ab2:	43db      	mvns	r3, r3
 8004ab4:	693a      	ldr	r2, [r7, #16]
 8004ab6:	4013      	ands	r3, r2
 8004ab8:	613b      	str	r3, [r7, #16]
 8004aba:	683b      	ldr	r3, [r7, #0]
 8004abc:	685b      	ldr	r3, [r3, #4]
 8004abe:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004ac2:	2b00      	cmp	r3, #0
 8004ac4:	d003      	beq.n	8004ace <HAL_GPIO_Init+0x296>
 8004ac6:	693a      	ldr	r2, [r7, #16]
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	4313      	orrs	r3, r2
 8004acc:	613b      	str	r3, [r7, #16]
 8004ace:	4a0e      	ldr	r2, [pc, #56]	; (8004b08 <HAL_GPIO_Init+0x2d0>)
 8004ad0:	693b      	ldr	r3, [r7, #16]
 8004ad2:	60d3      	str	r3, [r2, #12]
 8004ad4:	697b      	ldr	r3, [r7, #20]
 8004ad6:	3301      	adds	r3, #1
 8004ad8:	617b      	str	r3, [r7, #20]
 8004ada:	683b      	ldr	r3, [r7, #0]
 8004adc:	681a      	ldr	r2, [r3, #0]
 8004ade:	697b      	ldr	r3, [r7, #20]
 8004ae0:	fa22 f303 	lsr.w	r3, r2, r3
 8004ae4:	2b00      	cmp	r3, #0
 8004ae6:	f47f aeaf 	bne.w	8004848 <HAL_GPIO_Init+0x10>
 8004aea:	bf00      	nop
 8004aec:	bf00      	nop
 8004aee:	371c      	adds	r7, #28
 8004af0:	46bd      	mov	sp, r7
 8004af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af6:	4770      	bx	lr
 8004af8:	40021000 	.word	0x40021000
 8004afc:	40010000 	.word	0x40010000
 8004b00:	48000400 	.word	0x48000400
 8004b04:	48000800 	.word	0x48000800
 8004b08:	40010400 	.word	0x40010400

08004b0c <HAL_GPIO_ReadPin>:
 8004b0c:	b480      	push	{r7}
 8004b0e:	b085      	sub	sp, #20
 8004b10:	af00      	add	r7, sp, #0
 8004b12:	6078      	str	r0, [r7, #4]
 8004b14:	460b      	mov	r3, r1
 8004b16:	807b      	strh	r3, [r7, #2]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	691a      	ldr	r2, [r3, #16]
 8004b1c:	887b      	ldrh	r3, [r7, #2]
 8004b1e:	4013      	ands	r3, r2
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d002      	beq.n	8004b2a <HAL_GPIO_ReadPin+0x1e>
 8004b24:	2301      	movs	r3, #1
 8004b26:	73fb      	strb	r3, [r7, #15]
 8004b28:	e001      	b.n	8004b2e <HAL_GPIO_ReadPin+0x22>
 8004b2a:	2300      	movs	r3, #0
 8004b2c:	73fb      	strb	r3, [r7, #15]
 8004b2e:	7bfb      	ldrb	r3, [r7, #15]
 8004b30:	4618      	mov	r0, r3
 8004b32:	3714      	adds	r7, #20
 8004b34:	46bd      	mov	sp, r7
 8004b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b3a:	4770      	bx	lr

08004b3c <HAL_GPIO_WritePin>:
 8004b3c:	b480      	push	{r7}
 8004b3e:	b083      	sub	sp, #12
 8004b40:	af00      	add	r7, sp, #0
 8004b42:	6078      	str	r0, [r7, #4]
 8004b44:	460b      	mov	r3, r1
 8004b46:	807b      	strh	r3, [r7, #2]
 8004b48:	4613      	mov	r3, r2
 8004b4a:	707b      	strb	r3, [r7, #1]
 8004b4c:	787b      	ldrb	r3, [r7, #1]
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d003      	beq.n	8004b5a <HAL_GPIO_WritePin+0x1e>
 8004b52:	887a      	ldrh	r2, [r7, #2]
 8004b54:	687b      	ldr	r3, [r7, #4]
 8004b56:	619a      	str	r2, [r3, #24]
 8004b58:	e002      	b.n	8004b60 <HAL_GPIO_WritePin+0x24>
 8004b5a:	887a      	ldrh	r2, [r7, #2]
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	629a      	str	r2, [r3, #40]	; 0x28
 8004b60:	bf00      	nop
 8004b62:	370c      	adds	r7, #12
 8004b64:	46bd      	mov	sp, r7
 8004b66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b6a:	4770      	bx	lr

08004b6c <HAL_GPIO_EXTI_IRQHandler>:
 8004b6c:	b580      	push	{r7, lr}
 8004b6e:	b082      	sub	sp, #8
 8004b70:	af00      	add	r7, sp, #0
 8004b72:	4603      	mov	r3, r0
 8004b74:	80fb      	strh	r3, [r7, #6]
 8004b76:	4b08      	ldr	r3, [pc, #32]	; (8004b98 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004b78:	695a      	ldr	r2, [r3, #20]
 8004b7a:	88fb      	ldrh	r3, [r7, #6]
 8004b7c:	4013      	ands	r3, r2
 8004b7e:	2b00      	cmp	r3, #0
 8004b80:	d006      	beq.n	8004b90 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004b82:	4a05      	ldr	r2, [pc, #20]	; (8004b98 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004b84:	88fb      	ldrh	r3, [r7, #6]
 8004b86:	6153      	str	r3, [r2, #20]
 8004b88:	88fb      	ldrh	r3, [r7, #6]
 8004b8a:	4618      	mov	r0, r3
 8004b8c:	f000 f806 	bl	8004b9c <HAL_GPIO_EXTI_Callback>
 8004b90:	bf00      	nop
 8004b92:	3708      	adds	r7, #8
 8004b94:	46bd      	mov	sp, r7
 8004b96:	bd80      	pop	{r7, pc}
 8004b98:	40010400 	.word	0x40010400

08004b9c <HAL_GPIO_EXTI_Callback>:
 8004b9c:	b480      	push	{r7}
 8004b9e:	b083      	sub	sp, #12
 8004ba0:	af00      	add	r7, sp, #0
 8004ba2:	4603      	mov	r3, r0
 8004ba4:	80fb      	strh	r3, [r7, #6]
 8004ba6:	bf00      	nop
 8004ba8:	370c      	adds	r7, #12
 8004baa:	46bd      	mov	sp, r7
 8004bac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb0:	4770      	bx	lr
	...

08004bb4 <HAL_PWREx_GetVoltageRange>:
 8004bb4:	b480      	push	{r7}
 8004bb6:	af00      	add	r7, sp, #0
 8004bb8:	4b04      	ldr	r3, [pc, #16]	; (8004bcc <HAL_PWREx_GetVoltageRange+0x18>)
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004bc0:	4618      	mov	r0, r3
 8004bc2:	46bd      	mov	sp, r7
 8004bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc8:	4770      	bx	lr
 8004bca:	bf00      	nop
 8004bcc:	40007000 	.word	0x40007000

08004bd0 <HAL_PWREx_ControlVoltageScaling>:
 8004bd0:	b480      	push	{r7}
 8004bd2:	b085      	sub	sp, #20
 8004bd4:	af00      	add	r7, sp, #0
 8004bd6:	6078      	str	r0, [r7, #4]
 8004bd8:	687b      	ldr	r3, [r7, #4]
 8004bda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004bde:	d130      	bne.n	8004c42 <HAL_PWREx_ControlVoltageScaling+0x72>
 8004be0:	4b23      	ldr	r3, [pc, #140]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004be8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004bec:	d038      	beq.n	8004c60 <HAL_PWREx_ControlVoltageScaling+0x90>
 8004bee:	4b20      	ldr	r3, [pc, #128]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004bf0:	681b      	ldr	r3, [r3, #0]
 8004bf2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004bf6:	4a1e      	ldr	r2, [pc, #120]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004bf8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004bfc:	6013      	str	r3, [r2, #0]
 8004bfe:	4b1d      	ldr	r3, [pc, #116]	; (8004c74 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	2232      	movs	r2, #50	; 0x32
 8004c04:	fb02 f303 	mul.w	r3, r2, r3
 8004c08:	4a1b      	ldr	r2, [pc, #108]	; (8004c78 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8004c0a:	fba2 2303 	umull	r2, r3, r2, r3
 8004c0e:	0c9b      	lsrs	r3, r3, #18
 8004c10:	3301      	adds	r3, #1
 8004c12:	60fb      	str	r3, [r7, #12]
 8004c14:	e002      	b.n	8004c1c <HAL_PWREx_ControlVoltageScaling+0x4c>
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	3b01      	subs	r3, #1
 8004c1a:	60fb      	str	r3, [r7, #12]
 8004c1c:	4b14      	ldr	r3, [pc, #80]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004c1e:	695b      	ldr	r3, [r3, #20]
 8004c20:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004c24:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004c28:	d102      	bne.n	8004c30 <HAL_PWREx_ControlVoltageScaling+0x60>
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d1f2      	bne.n	8004c16 <HAL_PWREx_ControlVoltageScaling+0x46>
 8004c30:	4b0f      	ldr	r3, [pc, #60]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004c32:	695b      	ldr	r3, [r3, #20]
 8004c34:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004c38:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004c3c:	d110      	bne.n	8004c60 <HAL_PWREx_ControlVoltageScaling+0x90>
 8004c3e:	2303      	movs	r3, #3
 8004c40:	e00f      	b.n	8004c62 <HAL_PWREx_ControlVoltageScaling+0x92>
 8004c42:	4b0b      	ldr	r3, [pc, #44]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004c4a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004c4e:	d007      	beq.n	8004c60 <HAL_PWREx_ControlVoltageScaling+0x90>
 8004c50:	4b07      	ldr	r3, [pc, #28]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004c58:	4a05      	ldr	r2, [pc, #20]	; (8004c70 <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004c5a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004c5e:	6013      	str	r3, [r2, #0]
 8004c60:	2300      	movs	r3, #0
 8004c62:	4618      	mov	r0, r3
 8004c64:	3714      	adds	r7, #20
 8004c66:	46bd      	mov	sp, r7
 8004c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c6c:	4770      	bx	lr
 8004c6e:	bf00      	nop
 8004c70:	40007000 	.word	0x40007000
 8004c74:	2000000c 	.word	0x2000000c
 8004c78:	431bde83 	.word	0x431bde83

08004c7c <HAL_RCC_OscConfig>:
 8004c7c:	b580      	push	{r7, lr}
 8004c7e:	b088      	sub	sp, #32
 8004c80:	af00      	add	r7, sp, #0
 8004c82:	6078      	str	r0, [r7, #4]
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d102      	bne.n	8004c90 <HAL_RCC_OscConfig+0x14>
 8004c8a:	2301      	movs	r3, #1
 8004c8c:	f000 bc11 	b.w	80054b2 <HAL_RCC_OscConfig+0x836>
 8004c90:	4ba0      	ldr	r3, [pc, #640]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004c92:	689b      	ldr	r3, [r3, #8]
 8004c94:	f003 030c 	and.w	r3, r3, #12
 8004c98:	61bb      	str	r3, [r7, #24]
 8004c9a:	4b9e      	ldr	r3, [pc, #632]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004c9c:	68db      	ldr	r3, [r3, #12]
 8004c9e:	f003 0303 	and.w	r3, r3, #3
 8004ca2:	617b      	str	r3, [r7, #20]
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	f003 0310 	and.w	r3, r3, #16
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	f000 80e4 	beq.w	8004e7a <HAL_RCC_OscConfig+0x1fe>
 8004cb2:	69bb      	ldr	r3, [r7, #24]
 8004cb4:	2b00      	cmp	r3, #0
 8004cb6:	d007      	beq.n	8004cc8 <HAL_RCC_OscConfig+0x4c>
 8004cb8:	69bb      	ldr	r3, [r7, #24]
 8004cba:	2b0c      	cmp	r3, #12
 8004cbc:	f040 808b 	bne.w	8004dd6 <HAL_RCC_OscConfig+0x15a>
 8004cc0:	697b      	ldr	r3, [r7, #20]
 8004cc2:	2b01      	cmp	r3, #1
 8004cc4:	f040 8087 	bne.w	8004dd6 <HAL_RCC_OscConfig+0x15a>
 8004cc8:	4b92      	ldr	r3, [pc, #584]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	f003 0302 	and.w	r3, r3, #2
 8004cd0:	2b00      	cmp	r3, #0
 8004cd2:	d005      	beq.n	8004ce0 <HAL_RCC_OscConfig+0x64>
 8004cd4:	687b      	ldr	r3, [r7, #4]
 8004cd6:	699b      	ldr	r3, [r3, #24]
 8004cd8:	2b00      	cmp	r3, #0
 8004cda:	d101      	bne.n	8004ce0 <HAL_RCC_OscConfig+0x64>
 8004cdc:	2301      	movs	r3, #1
 8004cde:	e3e8      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	6a1a      	ldr	r2, [r3, #32]
 8004ce4:	4b8b      	ldr	r3, [pc, #556]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ce6:	681b      	ldr	r3, [r3, #0]
 8004ce8:	f003 0308 	and.w	r3, r3, #8
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	d004      	beq.n	8004cfa <HAL_RCC_OscConfig+0x7e>
 8004cf0:	4b88      	ldr	r3, [pc, #544]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004cf8:	e005      	b.n	8004d06 <HAL_RCC_OscConfig+0x8a>
 8004cfa:	4b86      	ldr	r3, [pc, #536]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004cfc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004d00:	091b      	lsrs	r3, r3, #4
 8004d02:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004d06:	4293      	cmp	r3, r2
 8004d08:	d223      	bcs.n	8004d52 <HAL_RCC_OscConfig+0xd6>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	6a1b      	ldr	r3, [r3, #32]
 8004d0e:	4618      	mov	r0, r3
 8004d10:	f000 fd7a 	bl	8005808 <RCC_SetFlashLatencyFromMSIRange>
 8004d14:	4603      	mov	r3, r0
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d001      	beq.n	8004d1e <HAL_RCC_OscConfig+0xa2>
 8004d1a:	2301      	movs	r3, #1
 8004d1c:	e3c9      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004d1e:	4b7d      	ldr	r3, [pc, #500]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	4a7c      	ldr	r2, [pc, #496]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d24:	f043 0308 	orr.w	r3, r3, #8
 8004d28:	6013      	str	r3, [r2, #0]
 8004d2a:	4b7a      	ldr	r3, [pc, #488]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	6a1b      	ldr	r3, [r3, #32]
 8004d36:	4977      	ldr	r1, [pc, #476]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d38:	4313      	orrs	r3, r2
 8004d3a:	600b      	str	r3, [r1, #0]
 8004d3c:	4b75      	ldr	r3, [pc, #468]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d3e:	685b      	ldr	r3, [r3, #4]
 8004d40:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	69db      	ldr	r3, [r3, #28]
 8004d48:	021b      	lsls	r3, r3, #8
 8004d4a:	4972      	ldr	r1, [pc, #456]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d4c:	4313      	orrs	r3, r2
 8004d4e:	604b      	str	r3, [r1, #4]
 8004d50:	e025      	b.n	8004d9e <HAL_RCC_OscConfig+0x122>
 8004d52:	4b70      	ldr	r3, [pc, #448]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	4a6f      	ldr	r2, [pc, #444]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d58:	f043 0308 	orr.w	r3, r3, #8
 8004d5c:	6013      	str	r3, [r2, #0]
 8004d5e:	4b6d      	ldr	r3, [pc, #436]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d60:	681b      	ldr	r3, [r3, #0]
 8004d62:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	6a1b      	ldr	r3, [r3, #32]
 8004d6a:	496a      	ldr	r1, [pc, #424]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d6c:	4313      	orrs	r3, r2
 8004d6e:	600b      	str	r3, [r1, #0]
 8004d70:	4b68      	ldr	r3, [pc, #416]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d72:	685b      	ldr	r3, [r3, #4]
 8004d74:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	69db      	ldr	r3, [r3, #28]
 8004d7c:	021b      	lsls	r3, r3, #8
 8004d7e:	4965      	ldr	r1, [pc, #404]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004d80:	4313      	orrs	r3, r2
 8004d82:	604b      	str	r3, [r1, #4]
 8004d84:	69bb      	ldr	r3, [r7, #24]
 8004d86:	2b00      	cmp	r3, #0
 8004d88:	d109      	bne.n	8004d9e <HAL_RCC_OscConfig+0x122>
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	6a1b      	ldr	r3, [r3, #32]
 8004d8e:	4618      	mov	r0, r3
 8004d90:	f000 fd3a 	bl	8005808 <RCC_SetFlashLatencyFromMSIRange>
 8004d94:	4603      	mov	r3, r0
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d001      	beq.n	8004d9e <HAL_RCC_OscConfig+0x122>
 8004d9a:	2301      	movs	r3, #1
 8004d9c:	e389      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004d9e:	f000 fc6f 	bl	8005680 <HAL_RCC_GetSysClockFreq>
 8004da2:	4602      	mov	r2, r0
 8004da4:	4b5b      	ldr	r3, [pc, #364]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004da6:	689b      	ldr	r3, [r3, #8]
 8004da8:	091b      	lsrs	r3, r3, #4
 8004daa:	f003 030f 	and.w	r3, r3, #15
 8004dae:	495a      	ldr	r1, [pc, #360]	; (8004f18 <HAL_RCC_OscConfig+0x29c>)
 8004db0:	5ccb      	ldrb	r3, [r1, r3]
 8004db2:	f003 031f 	and.w	r3, r3, #31
 8004db6:	fa22 f303 	lsr.w	r3, r2, r3
 8004dba:	4a58      	ldr	r2, [pc, #352]	; (8004f1c <HAL_RCC_OscConfig+0x2a0>)
 8004dbc:	6013      	str	r3, [r2, #0]
 8004dbe:	4b58      	ldr	r3, [pc, #352]	; (8004f20 <HAL_RCC_OscConfig+0x2a4>)
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	4618      	mov	r0, r3
 8004dc4:	f7fe f86e 	bl	8002ea4 <HAL_InitTick>
 8004dc8:	4603      	mov	r3, r0
 8004dca:	73fb      	strb	r3, [r7, #15]
 8004dcc:	7bfb      	ldrb	r3, [r7, #15]
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	d052      	beq.n	8004e78 <HAL_RCC_OscConfig+0x1fc>
 8004dd2:	7bfb      	ldrb	r3, [r7, #15]
 8004dd4:	e36d      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	699b      	ldr	r3, [r3, #24]
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d032      	beq.n	8004e44 <HAL_RCC_OscConfig+0x1c8>
 8004dde:	4b4d      	ldr	r3, [pc, #308]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004de0:	681b      	ldr	r3, [r3, #0]
 8004de2:	4a4c      	ldr	r2, [pc, #304]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004de4:	f043 0301 	orr.w	r3, r3, #1
 8004de8:	6013      	str	r3, [r2, #0]
 8004dea:	f7fe f8ab 	bl	8002f44 <HAL_GetTick>
 8004dee:	6138      	str	r0, [r7, #16]
 8004df0:	e008      	b.n	8004e04 <HAL_RCC_OscConfig+0x188>
 8004df2:	f7fe f8a7 	bl	8002f44 <HAL_GetTick>
 8004df6:	4602      	mov	r2, r0
 8004df8:	693b      	ldr	r3, [r7, #16]
 8004dfa:	1ad3      	subs	r3, r2, r3
 8004dfc:	2b02      	cmp	r3, #2
 8004dfe:	d901      	bls.n	8004e04 <HAL_RCC_OscConfig+0x188>
 8004e00:	2303      	movs	r3, #3
 8004e02:	e356      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004e04:	4b43      	ldr	r3, [pc, #268]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	f003 0302 	and.w	r3, r3, #2
 8004e0c:	2b00      	cmp	r3, #0
 8004e0e:	d0f0      	beq.n	8004df2 <HAL_RCC_OscConfig+0x176>
 8004e10:	4b40      	ldr	r3, [pc, #256]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	4a3f      	ldr	r2, [pc, #252]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e16:	f043 0308 	orr.w	r3, r3, #8
 8004e1a:	6013      	str	r3, [r2, #0]
 8004e1c:	4b3d      	ldr	r3, [pc, #244]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004e24:	687b      	ldr	r3, [r7, #4]
 8004e26:	6a1b      	ldr	r3, [r3, #32]
 8004e28:	493a      	ldr	r1, [pc, #232]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e2a:	4313      	orrs	r3, r2
 8004e2c:	600b      	str	r3, [r1, #0]
 8004e2e:	4b39      	ldr	r3, [pc, #228]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e30:	685b      	ldr	r3, [r3, #4]
 8004e32:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	69db      	ldr	r3, [r3, #28]
 8004e3a:	021b      	lsls	r3, r3, #8
 8004e3c:	4935      	ldr	r1, [pc, #212]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e3e:	4313      	orrs	r3, r2
 8004e40:	604b      	str	r3, [r1, #4]
 8004e42:	e01a      	b.n	8004e7a <HAL_RCC_OscConfig+0x1fe>
 8004e44:	4b33      	ldr	r3, [pc, #204]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e46:	681b      	ldr	r3, [r3, #0]
 8004e48:	4a32      	ldr	r2, [pc, #200]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e4a:	f023 0301 	bic.w	r3, r3, #1
 8004e4e:	6013      	str	r3, [r2, #0]
 8004e50:	f7fe f878 	bl	8002f44 <HAL_GetTick>
 8004e54:	6138      	str	r0, [r7, #16]
 8004e56:	e008      	b.n	8004e6a <HAL_RCC_OscConfig+0x1ee>
 8004e58:	f7fe f874 	bl	8002f44 <HAL_GetTick>
 8004e5c:	4602      	mov	r2, r0
 8004e5e:	693b      	ldr	r3, [r7, #16]
 8004e60:	1ad3      	subs	r3, r2, r3
 8004e62:	2b02      	cmp	r3, #2
 8004e64:	d901      	bls.n	8004e6a <HAL_RCC_OscConfig+0x1ee>
 8004e66:	2303      	movs	r3, #3
 8004e68:	e323      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004e6a:	4b2a      	ldr	r3, [pc, #168]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f003 0302 	and.w	r3, r3, #2
 8004e72:	2b00      	cmp	r3, #0
 8004e74:	d1f0      	bne.n	8004e58 <HAL_RCC_OscConfig+0x1dc>
 8004e76:	e000      	b.n	8004e7a <HAL_RCC_OscConfig+0x1fe>
 8004e78:	bf00      	nop
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	f003 0301 	and.w	r3, r3, #1
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d073      	beq.n	8004f6e <HAL_RCC_OscConfig+0x2f2>
 8004e86:	69bb      	ldr	r3, [r7, #24]
 8004e88:	2b08      	cmp	r3, #8
 8004e8a:	d005      	beq.n	8004e98 <HAL_RCC_OscConfig+0x21c>
 8004e8c:	69bb      	ldr	r3, [r7, #24]
 8004e8e:	2b0c      	cmp	r3, #12
 8004e90:	d10e      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x234>
 8004e92:	697b      	ldr	r3, [r7, #20]
 8004e94:	2b03      	cmp	r3, #3
 8004e96:	d10b      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x234>
 8004e98:	4b1e      	ldr	r3, [pc, #120]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d063      	beq.n	8004f6c <HAL_RCC_OscConfig+0x2f0>
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	685b      	ldr	r3, [r3, #4]
 8004ea8:	2b00      	cmp	r3, #0
 8004eaa:	d15f      	bne.n	8004f6c <HAL_RCC_OscConfig+0x2f0>
 8004eac:	2301      	movs	r3, #1
 8004eae:	e300      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	685b      	ldr	r3, [r3, #4]
 8004eb4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004eb8:	d106      	bne.n	8004ec8 <HAL_RCC_OscConfig+0x24c>
 8004eba:	4b16      	ldr	r3, [pc, #88]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	4a15      	ldr	r2, [pc, #84]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ec0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004ec4:	6013      	str	r3, [r2, #0]
 8004ec6:	e01d      	b.n	8004f04 <HAL_RCC_OscConfig+0x288>
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	685b      	ldr	r3, [r3, #4]
 8004ecc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004ed0:	d10c      	bne.n	8004eec <HAL_RCC_OscConfig+0x270>
 8004ed2:	4b10      	ldr	r3, [pc, #64]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	4a0f      	ldr	r2, [pc, #60]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ed8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004edc:	6013      	str	r3, [r2, #0]
 8004ede:	4b0d      	ldr	r3, [pc, #52]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ee0:	681b      	ldr	r3, [r3, #0]
 8004ee2:	4a0c      	ldr	r2, [pc, #48]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ee4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004ee8:	6013      	str	r3, [r2, #0]
 8004eea:	e00b      	b.n	8004f04 <HAL_RCC_OscConfig+0x288>
 8004eec:	4b09      	ldr	r3, [pc, #36]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004eee:	681b      	ldr	r3, [r3, #0]
 8004ef0:	4a08      	ldr	r2, [pc, #32]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004ef2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004ef6:	6013      	str	r3, [r2, #0]
 8004ef8:	4b06      	ldr	r3, [pc, #24]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	4a05      	ldr	r2, [pc, #20]	; (8004f14 <HAL_RCC_OscConfig+0x298>)
 8004efe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004f02:	6013      	str	r3, [r2, #0]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	685b      	ldr	r3, [r3, #4]
 8004f08:	2b00      	cmp	r3, #0
 8004f0a:	d01b      	beq.n	8004f44 <HAL_RCC_OscConfig+0x2c8>
 8004f0c:	f7fe f81a 	bl	8002f44 <HAL_GetTick>
 8004f10:	6138      	str	r0, [r7, #16]
 8004f12:	e010      	b.n	8004f36 <HAL_RCC_OscConfig+0x2ba>
 8004f14:	40021000 	.word	0x40021000
 8004f18:	08008e98 	.word	0x08008e98
 8004f1c:	2000000c 	.word	0x2000000c
 8004f20:	20000010 	.word	0x20000010
 8004f24:	f7fe f80e 	bl	8002f44 <HAL_GetTick>
 8004f28:	4602      	mov	r2, r0
 8004f2a:	693b      	ldr	r3, [r7, #16]
 8004f2c:	1ad3      	subs	r3, r2, r3
 8004f2e:	2b64      	cmp	r3, #100	; 0x64
 8004f30:	d901      	bls.n	8004f36 <HAL_RCC_OscConfig+0x2ba>
 8004f32:	2303      	movs	r3, #3
 8004f34:	e2bd      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004f36:	4baf      	ldr	r3, [pc, #700]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004f38:	681b      	ldr	r3, [r3, #0]
 8004f3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d0f0      	beq.n	8004f24 <HAL_RCC_OscConfig+0x2a8>
 8004f42:	e014      	b.n	8004f6e <HAL_RCC_OscConfig+0x2f2>
 8004f44:	f7fd fffe 	bl	8002f44 <HAL_GetTick>
 8004f48:	6138      	str	r0, [r7, #16]
 8004f4a:	e008      	b.n	8004f5e <HAL_RCC_OscConfig+0x2e2>
 8004f4c:	f7fd fffa 	bl	8002f44 <HAL_GetTick>
 8004f50:	4602      	mov	r2, r0
 8004f52:	693b      	ldr	r3, [r7, #16]
 8004f54:	1ad3      	subs	r3, r2, r3
 8004f56:	2b64      	cmp	r3, #100	; 0x64
 8004f58:	d901      	bls.n	8004f5e <HAL_RCC_OscConfig+0x2e2>
 8004f5a:	2303      	movs	r3, #3
 8004f5c:	e2a9      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004f5e:	4ba5      	ldr	r3, [pc, #660]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004f66:	2b00      	cmp	r3, #0
 8004f68:	d1f0      	bne.n	8004f4c <HAL_RCC_OscConfig+0x2d0>
 8004f6a:	e000      	b.n	8004f6e <HAL_RCC_OscConfig+0x2f2>
 8004f6c:	bf00      	nop
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	f003 0302 	and.w	r3, r3, #2
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d060      	beq.n	800503c <HAL_RCC_OscConfig+0x3c0>
 8004f7a:	69bb      	ldr	r3, [r7, #24]
 8004f7c:	2b04      	cmp	r3, #4
 8004f7e:	d005      	beq.n	8004f8c <HAL_RCC_OscConfig+0x310>
 8004f80:	69bb      	ldr	r3, [r7, #24]
 8004f82:	2b0c      	cmp	r3, #12
 8004f84:	d119      	bne.n	8004fba <HAL_RCC_OscConfig+0x33e>
 8004f86:	697b      	ldr	r3, [r7, #20]
 8004f88:	2b02      	cmp	r3, #2
 8004f8a:	d116      	bne.n	8004fba <HAL_RCC_OscConfig+0x33e>
 8004f8c:	4b99      	ldr	r3, [pc, #612]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004f8e:	681b      	ldr	r3, [r3, #0]
 8004f90:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d005      	beq.n	8004fa4 <HAL_RCC_OscConfig+0x328>
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	68db      	ldr	r3, [r3, #12]
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d101      	bne.n	8004fa4 <HAL_RCC_OscConfig+0x328>
 8004fa0:	2301      	movs	r3, #1
 8004fa2:	e286      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004fa4:	4b93      	ldr	r3, [pc, #588]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004fa6:	685b      	ldr	r3, [r3, #4]
 8004fa8:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	691b      	ldr	r3, [r3, #16]
 8004fb0:	061b      	lsls	r3, r3, #24
 8004fb2:	4990      	ldr	r1, [pc, #576]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004fb4:	4313      	orrs	r3, r2
 8004fb6:	604b      	str	r3, [r1, #4]
 8004fb8:	e040      	b.n	800503c <HAL_RCC_OscConfig+0x3c0>
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	68db      	ldr	r3, [r3, #12]
 8004fbe:	2b00      	cmp	r3, #0
 8004fc0:	d023      	beq.n	800500a <HAL_RCC_OscConfig+0x38e>
 8004fc2:	4b8c      	ldr	r3, [pc, #560]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	4a8b      	ldr	r2, [pc, #556]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004fc8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004fcc:	6013      	str	r3, [r2, #0]
 8004fce:	f7fd ffb9 	bl	8002f44 <HAL_GetTick>
 8004fd2:	6138      	str	r0, [r7, #16]
 8004fd4:	e008      	b.n	8004fe8 <HAL_RCC_OscConfig+0x36c>
 8004fd6:	f7fd ffb5 	bl	8002f44 <HAL_GetTick>
 8004fda:	4602      	mov	r2, r0
 8004fdc:	693b      	ldr	r3, [r7, #16]
 8004fde:	1ad3      	subs	r3, r2, r3
 8004fe0:	2b02      	cmp	r3, #2
 8004fe2:	d901      	bls.n	8004fe8 <HAL_RCC_OscConfig+0x36c>
 8004fe4:	2303      	movs	r3, #3
 8004fe6:	e264      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8004fe8:	4b82      	ldr	r3, [pc, #520]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004fea:	681b      	ldr	r3, [r3, #0]
 8004fec:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004ff0:	2b00      	cmp	r3, #0
 8004ff2:	d0f0      	beq.n	8004fd6 <HAL_RCC_OscConfig+0x35a>
 8004ff4:	4b7f      	ldr	r3, [pc, #508]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8004ff6:	685b      	ldr	r3, [r3, #4]
 8004ff8:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	691b      	ldr	r3, [r3, #16]
 8005000:	061b      	lsls	r3, r3, #24
 8005002:	497c      	ldr	r1, [pc, #496]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005004:	4313      	orrs	r3, r2
 8005006:	604b      	str	r3, [r1, #4]
 8005008:	e018      	b.n	800503c <HAL_RCC_OscConfig+0x3c0>
 800500a:	4b7a      	ldr	r3, [pc, #488]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	4a79      	ldr	r2, [pc, #484]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005010:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005014:	6013      	str	r3, [r2, #0]
 8005016:	f7fd ff95 	bl	8002f44 <HAL_GetTick>
 800501a:	6138      	str	r0, [r7, #16]
 800501c:	e008      	b.n	8005030 <HAL_RCC_OscConfig+0x3b4>
 800501e:	f7fd ff91 	bl	8002f44 <HAL_GetTick>
 8005022:	4602      	mov	r2, r0
 8005024:	693b      	ldr	r3, [r7, #16]
 8005026:	1ad3      	subs	r3, r2, r3
 8005028:	2b02      	cmp	r3, #2
 800502a:	d901      	bls.n	8005030 <HAL_RCC_OscConfig+0x3b4>
 800502c:	2303      	movs	r3, #3
 800502e:	e240      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8005030:	4b70      	ldr	r3, [pc, #448]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005038:	2b00      	cmp	r3, #0
 800503a:	d1f0      	bne.n	800501e <HAL_RCC_OscConfig+0x3a2>
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	f003 0308 	and.w	r3, r3, #8
 8005044:	2b00      	cmp	r3, #0
 8005046:	d03c      	beq.n	80050c2 <HAL_RCC_OscConfig+0x446>
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	695b      	ldr	r3, [r3, #20]
 800504c:	2b00      	cmp	r3, #0
 800504e:	d01c      	beq.n	800508a <HAL_RCC_OscConfig+0x40e>
 8005050:	4b68      	ldr	r3, [pc, #416]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005052:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005056:	4a67      	ldr	r2, [pc, #412]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005058:	f043 0301 	orr.w	r3, r3, #1
 800505c:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8005060:	f7fd ff70 	bl	8002f44 <HAL_GetTick>
 8005064:	6138      	str	r0, [r7, #16]
 8005066:	e008      	b.n	800507a <HAL_RCC_OscConfig+0x3fe>
 8005068:	f7fd ff6c 	bl	8002f44 <HAL_GetTick>
 800506c:	4602      	mov	r2, r0
 800506e:	693b      	ldr	r3, [r7, #16]
 8005070:	1ad3      	subs	r3, r2, r3
 8005072:	2b02      	cmp	r3, #2
 8005074:	d901      	bls.n	800507a <HAL_RCC_OscConfig+0x3fe>
 8005076:	2303      	movs	r3, #3
 8005078:	e21b      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 800507a:	4b5e      	ldr	r3, [pc, #376]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800507c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005080:	f003 0302 	and.w	r3, r3, #2
 8005084:	2b00      	cmp	r3, #0
 8005086:	d0ef      	beq.n	8005068 <HAL_RCC_OscConfig+0x3ec>
 8005088:	e01b      	b.n	80050c2 <HAL_RCC_OscConfig+0x446>
 800508a:	4b5a      	ldr	r3, [pc, #360]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800508c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8005090:	4a58      	ldr	r2, [pc, #352]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005092:	f023 0301 	bic.w	r3, r3, #1
 8005096:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800509a:	f7fd ff53 	bl	8002f44 <HAL_GetTick>
 800509e:	6138      	str	r0, [r7, #16]
 80050a0:	e008      	b.n	80050b4 <HAL_RCC_OscConfig+0x438>
 80050a2:	f7fd ff4f 	bl	8002f44 <HAL_GetTick>
 80050a6:	4602      	mov	r2, r0
 80050a8:	693b      	ldr	r3, [r7, #16]
 80050aa:	1ad3      	subs	r3, r2, r3
 80050ac:	2b02      	cmp	r3, #2
 80050ae:	d901      	bls.n	80050b4 <HAL_RCC_OscConfig+0x438>
 80050b0:	2303      	movs	r3, #3
 80050b2:	e1fe      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80050b4:	4b4f      	ldr	r3, [pc, #316]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80050b6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80050ba:	f003 0302 	and.w	r3, r3, #2
 80050be:	2b00      	cmp	r3, #0
 80050c0:	d1ef      	bne.n	80050a2 <HAL_RCC_OscConfig+0x426>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	f003 0304 	and.w	r3, r3, #4
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	f000 80a6 	beq.w	800521c <HAL_RCC_OscConfig+0x5a0>
 80050d0:	2300      	movs	r3, #0
 80050d2:	77fb      	strb	r3, [r7, #31]
 80050d4:	4b47      	ldr	r3, [pc, #284]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80050d6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80050d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80050dc:	2b00      	cmp	r3, #0
 80050de:	d10d      	bne.n	80050fc <HAL_RCC_OscConfig+0x480>
 80050e0:	4b44      	ldr	r3, [pc, #272]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80050e2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80050e4:	4a43      	ldr	r2, [pc, #268]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80050e6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80050ea:	6593      	str	r3, [r2, #88]	; 0x58
 80050ec:	4b41      	ldr	r3, [pc, #260]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80050ee:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80050f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80050f4:	60bb      	str	r3, [r7, #8]
 80050f6:	68bb      	ldr	r3, [r7, #8]
 80050f8:	2301      	movs	r3, #1
 80050fa:	77fb      	strb	r3, [r7, #31]
 80050fc:	4b3e      	ldr	r3, [pc, #248]	; (80051f8 <HAL_RCC_OscConfig+0x57c>)
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005104:	2b00      	cmp	r3, #0
 8005106:	d118      	bne.n	800513a <HAL_RCC_OscConfig+0x4be>
 8005108:	4b3b      	ldr	r3, [pc, #236]	; (80051f8 <HAL_RCC_OscConfig+0x57c>)
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	4a3a      	ldr	r2, [pc, #232]	; (80051f8 <HAL_RCC_OscConfig+0x57c>)
 800510e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005112:	6013      	str	r3, [r2, #0]
 8005114:	f7fd ff16 	bl	8002f44 <HAL_GetTick>
 8005118:	6138      	str	r0, [r7, #16]
 800511a:	e008      	b.n	800512e <HAL_RCC_OscConfig+0x4b2>
 800511c:	f7fd ff12 	bl	8002f44 <HAL_GetTick>
 8005120:	4602      	mov	r2, r0
 8005122:	693b      	ldr	r3, [r7, #16]
 8005124:	1ad3      	subs	r3, r2, r3
 8005126:	2b02      	cmp	r3, #2
 8005128:	d901      	bls.n	800512e <HAL_RCC_OscConfig+0x4b2>
 800512a:	2303      	movs	r3, #3
 800512c:	e1c1      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 800512e:	4b32      	ldr	r3, [pc, #200]	; (80051f8 <HAL_RCC_OscConfig+0x57c>)
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005136:	2b00      	cmp	r3, #0
 8005138:	d0f0      	beq.n	800511c <HAL_RCC_OscConfig+0x4a0>
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	689b      	ldr	r3, [r3, #8]
 800513e:	2b01      	cmp	r3, #1
 8005140:	d108      	bne.n	8005154 <HAL_RCC_OscConfig+0x4d8>
 8005142:	4b2c      	ldr	r3, [pc, #176]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005144:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005148:	4a2a      	ldr	r2, [pc, #168]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800514a:	f043 0301 	orr.w	r3, r3, #1
 800514e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005152:	e024      	b.n	800519e <HAL_RCC_OscConfig+0x522>
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	689b      	ldr	r3, [r3, #8]
 8005158:	2b05      	cmp	r3, #5
 800515a:	d110      	bne.n	800517e <HAL_RCC_OscConfig+0x502>
 800515c:	4b25      	ldr	r3, [pc, #148]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800515e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005162:	4a24      	ldr	r2, [pc, #144]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005164:	f043 0304 	orr.w	r3, r3, #4
 8005168:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800516c:	4b21      	ldr	r3, [pc, #132]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 800516e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005172:	4a20      	ldr	r2, [pc, #128]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005174:	f043 0301 	orr.w	r3, r3, #1
 8005178:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800517c:	e00f      	b.n	800519e <HAL_RCC_OscConfig+0x522>
 800517e:	4b1d      	ldr	r3, [pc, #116]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005180:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005184:	4a1b      	ldr	r2, [pc, #108]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005186:	f023 0301 	bic.w	r3, r3, #1
 800518a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800518e:	4b19      	ldr	r3, [pc, #100]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005190:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005194:	4a17      	ldr	r2, [pc, #92]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 8005196:	f023 0304 	bic.w	r3, r3, #4
 800519a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	689b      	ldr	r3, [r3, #8]
 80051a2:	2b00      	cmp	r3, #0
 80051a4:	d016      	beq.n	80051d4 <HAL_RCC_OscConfig+0x558>
 80051a6:	f7fd fecd 	bl	8002f44 <HAL_GetTick>
 80051aa:	6138      	str	r0, [r7, #16]
 80051ac:	e00a      	b.n	80051c4 <HAL_RCC_OscConfig+0x548>
 80051ae:	f7fd fec9 	bl	8002f44 <HAL_GetTick>
 80051b2:	4602      	mov	r2, r0
 80051b4:	693b      	ldr	r3, [r7, #16]
 80051b6:	1ad3      	subs	r3, r2, r3
 80051b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80051bc:	4293      	cmp	r3, r2
 80051be:	d901      	bls.n	80051c4 <HAL_RCC_OscConfig+0x548>
 80051c0:	2303      	movs	r3, #3
 80051c2:	e176      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80051c4:	4b0b      	ldr	r3, [pc, #44]	; (80051f4 <HAL_RCC_OscConfig+0x578>)
 80051c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80051ca:	f003 0302 	and.w	r3, r3, #2
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d0ed      	beq.n	80051ae <HAL_RCC_OscConfig+0x532>
 80051d2:	e01a      	b.n	800520a <HAL_RCC_OscConfig+0x58e>
 80051d4:	f7fd feb6 	bl	8002f44 <HAL_GetTick>
 80051d8:	6138      	str	r0, [r7, #16]
 80051da:	e00f      	b.n	80051fc <HAL_RCC_OscConfig+0x580>
 80051dc:	f7fd feb2 	bl	8002f44 <HAL_GetTick>
 80051e0:	4602      	mov	r2, r0
 80051e2:	693b      	ldr	r3, [r7, #16]
 80051e4:	1ad3      	subs	r3, r2, r3
 80051e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80051ea:	4293      	cmp	r3, r2
 80051ec:	d906      	bls.n	80051fc <HAL_RCC_OscConfig+0x580>
 80051ee:	2303      	movs	r3, #3
 80051f0:	e15f      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80051f2:	bf00      	nop
 80051f4:	40021000 	.word	0x40021000
 80051f8:	40007000 	.word	0x40007000
 80051fc:	4baa      	ldr	r3, [pc, #680]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80051fe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005202:	f003 0302 	and.w	r3, r3, #2
 8005206:	2b00      	cmp	r3, #0
 8005208:	d1e8      	bne.n	80051dc <HAL_RCC_OscConfig+0x560>
 800520a:	7ffb      	ldrb	r3, [r7, #31]
 800520c:	2b01      	cmp	r3, #1
 800520e:	d105      	bne.n	800521c <HAL_RCC_OscConfig+0x5a0>
 8005210:	4ba5      	ldr	r3, [pc, #660]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005212:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005214:	4aa4      	ldr	r2, [pc, #656]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005216:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800521a:	6593      	str	r3, [r2, #88]	; 0x58
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	f003 0320 	and.w	r3, r3, #32
 8005224:	2b00      	cmp	r3, #0
 8005226:	d03c      	beq.n	80052a2 <HAL_RCC_OscConfig+0x626>
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800522c:	2b00      	cmp	r3, #0
 800522e:	d01c      	beq.n	800526a <HAL_RCC_OscConfig+0x5ee>
 8005230:	4b9d      	ldr	r3, [pc, #628]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005232:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005236:	4a9c      	ldr	r2, [pc, #624]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005238:	f043 0301 	orr.w	r3, r3, #1
 800523c:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8005240:	f7fd fe80 	bl	8002f44 <HAL_GetTick>
 8005244:	6138      	str	r0, [r7, #16]
 8005246:	e008      	b.n	800525a <HAL_RCC_OscConfig+0x5de>
 8005248:	f7fd fe7c 	bl	8002f44 <HAL_GetTick>
 800524c:	4602      	mov	r2, r0
 800524e:	693b      	ldr	r3, [r7, #16]
 8005250:	1ad3      	subs	r3, r2, r3
 8005252:	2b02      	cmp	r3, #2
 8005254:	d901      	bls.n	800525a <HAL_RCC_OscConfig+0x5de>
 8005256:	2303      	movs	r3, #3
 8005258:	e12b      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 800525a:	4b93      	ldr	r3, [pc, #588]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800525c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005260:	f003 0302 	and.w	r3, r3, #2
 8005264:	2b00      	cmp	r3, #0
 8005266:	d0ef      	beq.n	8005248 <HAL_RCC_OscConfig+0x5cc>
 8005268:	e01b      	b.n	80052a2 <HAL_RCC_OscConfig+0x626>
 800526a:	4b8f      	ldr	r3, [pc, #572]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800526c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8005270:	4a8d      	ldr	r2, [pc, #564]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005272:	f023 0301 	bic.w	r3, r3, #1
 8005276:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 800527a:	f7fd fe63 	bl	8002f44 <HAL_GetTick>
 800527e:	6138      	str	r0, [r7, #16]
 8005280:	e008      	b.n	8005294 <HAL_RCC_OscConfig+0x618>
 8005282:	f7fd fe5f 	bl	8002f44 <HAL_GetTick>
 8005286:	4602      	mov	r2, r0
 8005288:	693b      	ldr	r3, [r7, #16]
 800528a:	1ad3      	subs	r3, r2, r3
 800528c:	2b02      	cmp	r3, #2
 800528e:	d901      	bls.n	8005294 <HAL_RCC_OscConfig+0x618>
 8005290:	2303      	movs	r3, #3
 8005292:	e10e      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8005294:	4b84      	ldr	r3, [pc, #528]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005296:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800529a:	f003 0302 	and.w	r3, r3, #2
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d1ef      	bne.n	8005282 <HAL_RCC_OscConfig+0x606>
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	f000 8102 	beq.w	80054b0 <HAL_RCC_OscConfig+0x834>
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80052b0:	2b02      	cmp	r3, #2
 80052b2:	f040 80c5 	bne.w	8005440 <HAL_RCC_OscConfig+0x7c4>
 80052b6:	4b7c      	ldr	r3, [pc, #496]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80052b8:	68db      	ldr	r3, [r3, #12]
 80052ba:	617b      	str	r3, [r7, #20]
 80052bc:	697b      	ldr	r3, [r7, #20]
 80052be:	f003 0203 	and.w	r2, r3, #3
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80052c6:	429a      	cmp	r2, r3
 80052c8:	d12c      	bne.n	8005324 <HAL_RCC_OscConfig+0x6a8>
 80052ca:	697b      	ldr	r3, [r7, #20]
 80052cc:	f003 0270 	and.w	r2, r3, #112	; 0x70
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052d4:	3b01      	subs	r3, #1
 80052d6:	011b      	lsls	r3, r3, #4
 80052d8:	429a      	cmp	r2, r3
 80052da:	d123      	bne.n	8005324 <HAL_RCC_OscConfig+0x6a8>
 80052dc:	697b      	ldr	r3, [r7, #20]
 80052de:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 80052e2:	687b      	ldr	r3, [r7, #4]
 80052e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80052e6:	021b      	lsls	r3, r3, #8
 80052e8:	429a      	cmp	r2, r3
 80052ea:	d11b      	bne.n	8005324 <HAL_RCC_OscConfig+0x6a8>
 80052ec:	697b      	ldr	r3, [r7, #20]
 80052ee:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80052f6:	06db      	lsls	r3, r3, #27
 80052f8:	429a      	cmp	r2, r3
 80052fa:	d113      	bne.n	8005324 <HAL_RCC_OscConfig+0x6a8>
 80052fc:	697b      	ldr	r3, [r7, #20]
 80052fe:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005306:	085b      	lsrs	r3, r3, #1
 8005308:	3b01      	subs	r3, #1
 800530a:	055b      	lsls	r3, r3, #21
 800530c:	429a      	cmp	r2, r3
 800530e:	d109      	bne.n	8005324 <HAL_RCC_OscConfig+0x6a8>
 8005310:	697b      	ldr	r3, [r7, #20]
 8005312:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800531a:	085b      	lsrs	r3, r3, #1
 800531c:	3b01      	subs	r3, #1
 800531e:	065b      	lsls	r3, r3, #25
 8005320:	429a      	cmp	r2, r3
 8005322:	d067      	beq.n	80053f4 <HAL_RCC_OscConfig+0x778>
 8005324:	69bb      	ldr	r3, [r7, #24]
 8005326:	2b0c      	cmp	r3, #12
 8005328:	d062      	beq.n	80053f0 <HAL_RCC_OscConfig+0x774>
 800532a:	4b5f      	ldr	r3, [pc, #380]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800532c:	681b      	ldr	r3, [r3, #0]
 800532e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005332:	2b00      	cmp	r3, #0
 8005334:	d001      	beq.n	800533a <HAL_RCC_OscConfig+0x6be>
 8005336:	2301      	movs	r3, #1
 8005338:	e0bb      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 800533a:	4b5b      	ldr	r3, [pc, #364]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	4a5a      	ldr	r2, [pc, #360]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005340:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005344:	6013      	str	r3, [r2, #0]
 8005346:	f7fd fdfd 	bl	8002f44 <HAL_GetTick>
 800534a:	6138      	str	r0, [r7, #16]
 800534c:	e008      	b.n	8005360 <HAL_RCC_OscConfig+0x6e4>
 800534e:	f7fd fdf9 	bl	8002f44 <HAL_GetTick>
 8005352:	4602      	mov	r2, r0
 8005354:	693b      	ldr	r3, [r7, #16]
 8005356:	1ad3      	subs	r3, r2, r3
 8005358:	2b02      	cmp	r3, #2
 800535a:	d901      	bls.n	8005360 <HAL_RCC_OscConfig+0x6e4>
 800535c:	2303      	movs	r3, #3
 800535e:	e0a8      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8005360:	4b51      	ldr	r3, [pc, #324]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005368:	2b00      	cmp	r3, #0
 800536a:	d1f0      	bne.n	800534e <HAL_RCC_OscConfig+0x6d2>
 800536c:	4b4e      	ldr	r3, [pc, #312]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800536e:	68da      	ldr	r2, [r3, #12]
 8005370:	4b4e      	ldr	r3, [pc, #312]	; (80054ac <HAL_RCC_OscConfig+0x830>)
 8005372:	4013      	ands	r3, r2
 8005374:	687a      	ldr	r2, [r7, #4]
 8005376:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8005378:	687a      	ldr	r2, [r7, #4]
 800537a:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800537c:	3a01      	subs	r2, #1
 800537e:	0112      	lsls	r2, r2, #4
 8005380:	4311      	orrs	r1, r2
 8005382:	687a      	ldr	r2, [r7, #4]
 8005384:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8005386:	0212      	lsls	r2, r2, #8
 8005388:	4311      	orrs	r1, r2
 800538a:	687a      	ldr	r2, [r7, #4]
 800538c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800538e:	0852      	lsrs	r2, r2, #1
 8005390:	3a01      	subs	r2, #1
 8005392:	0552      	lsls	r2, r2, #21
 8005394:	4311      	orrs	r1, r2
 8005396:	687a      	ldr	r2, [r7, #4]
 8005398:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800539a:	0852      	lsrs	r2, r2, #1
 800539c:	3a01      	subs	r2, #1
 800539e:	0652      	lsls	r2, r2, #25
 80053a0:	4311      	orrs	r1, r2
 80053a2:	687a      	ldr	r2, [r7, #4]
 80053a4:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80053a6:	06d2      	lsls	r2, r2, #27
 80053a8:	430a      	orrs	r2, r1
 80053aa:	493f      	ldr	r1, [pc, #252]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053ac:	4313      	orrs	r3, r2
 80053ae:	60cb      	str	r3, [r1, #12]
 80053b0:	4b3d      	ldr	r3, [pc, #244]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053b2:	681b      	ldr	r3, [r3, #0]
 80053b4:	4a3c      	ldr	r2, [pc, #240]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80053ba:	6013      	str	r3, [r2, #0]
 80053bc:	4b3a      	ldr	r3, [pc, #232]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053be:	68db      	ldr	r3, [r3, #12]
 80053c0:	4a39      	ldr	r2, [pc, #228]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053c2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80053c6:	60d3      	str	r3, [r2, #12]
 80053c8:	f7fd fdbc 	bl	8002f44 <HAL_GetTick>
 80053cc:	6138      	str	r0, [r7, #16]
 80053ce:	e008      	b.n	80053e2 <HAL_RCC_OscConfig+0x766>
 80053d0:	f7fd fdb8 	bl	8002f44 <HAL_GetTick>
 80053d4:	4602      	mov	r2, r0
 80053d6:	693b      	ldr	r3, [r7, #16]
 80053d8:	1ad3      	subs	r3, r2, r3
 80053da:	2b02      	cmp	r3, #2
 80053dc:	d901      	bls.n	80053e2 <HAL_RCC_OscConfig+0x766>
 80053de:	2303      	movs	r3, #3
 80053e0:	e067      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80053e2:	4b31      	ldr	r3, [pc, #196]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d0f0      	beq.n	80053d0 <HAL_RCC_OscConfig+0x754>
 80053ee:	e05f      	b.n	80054b0 <HAL_RCC_OscConfig+0x834>
 80053f0:	2301      	movs	r3, #1
 80053f2:	e05e      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80053f4:	4b2c      	ldr	r3, [pc, #176]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80053fc:	2b00      	cmp	r3, #0
 80053fe:	d157      	bne.n	80054b0 <HAL_RCC_OscConfig+0x834>
 8005400:	4b29      	ldr	r3, [pc, #164]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	4a28      	ldr	r2, [pc, #160]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005406:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800540a:	6013      	str	r3, [r2, #0]
 800540c:	4b26      	ldr	r3, [pc, #152]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800540e:	68db      	ldr	r3, [r3, #12]
 8005410:	4a25      	ldr	r2, [pc, #148]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005412:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005416:	60d3      	str	r3, [r2, #12]
 8005418:	f7fd fd94 	bl	8002f44 <HAL_GetTick>
 800541c:	6138      	str	r0, [r7, #16]
 800541e:	e008      	b.n	8005432 <HAL_RCC_OscConfig+0x7b6>
 8005420:	f7fd fd90 	bl	8002f44 <HAL_GetTick>
 8005424:	4602      	mov	r2, r0
 8005426:	693b      	ldr	r3, [r7, #16]
 8005428:	1ad3      	subs	r3, r2, r3
 800542a:	2b02      	cmp	r3, #2
 800542c:	d901      	bls.n	8005432 <HAL_RCC_OscConfig+0x7b6>
 800542e:	2303      	movs	r3, #3
 8005430:	e03f      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8005432:	4b1d      	ldr	r3, [pc, #116]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800543a:	2b00      	cmp	r3, #0
 800543c:	d0f0      	beq.n	8005420 <HAL_RCC_OscConfig+0x7a4>
 800543e:	e037      	b.n	80054b0 <HAL_RCC_OscConfig+0x834>
 8005440:	69bb      	ldr	r3, [r7, #24]
 8005442:	2b0c      	cmp	r3, #12
 8005444:	d02d      	beq.n	80054a2 <HAL_RCC_OscConfig+0x826>
 8005446:	4b18      	ldr	r3, [pc, #96]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	4a17      	ldr	r2, [pc, #92]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800544c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005450:	6013      	str	r3, [r2, #0]
 8005452:	4b15      	ldr	r3, [pc, #84]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800545a:	2b00      	cmp	r3, #0
 800545c:	d105      	bne.n	800546a <HAL_RCC_OscConfig+0x7ee>
 800545e:	4b12      	ldr	r3, [pc, #72]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005460:	68db      	ldr	r3, [r3, #12]
 8005462:	4a11      	ldr	r2, [pc, #68]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005464:	f023 0303 	bic.w	r3, r3, #3
 8005468:	60d3      	str	r3, [r2, #12]
 800546a:	4b0f      	ldr	r3, [pc, #60]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 800546c:	68db      	ldr	r3, [r3, #12]
 800546e:	4a0e      	ldr	r2, [pc, #56]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005470:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 8005474:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005478:	60d3      	str	r3, [r2, #12]
 800547a:	f7fd fd63 	bl	8002f44 <HAL_GetTick>
 800547e:	6138      	str	r0, [r7, #16]
 8005480:	e008      	b.n	8005494 <HAL_RCC_OscConfig+0x818>
 8005482:	f7fd fd5f 	bl	8002f44 <HAL_GetTick>
 8005486:	4602      	mov	r2, r0
 8005488:	693b      	ldr	r3, [r7, #16]
 800548a:	1ad3      	subs	r3, r2, r3
 800548c:	2b02      	cmp	r3, #2
 800548e:	d901      	bls.n	8005494 <HAL_RCC_OscConfig+0x818>
 8005490:	2303      	movs	r3, #3
 8005492:	e00e      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 8005494:	4b04      	ldr	r3, [pc, #16]	; (80054a8 <HAL_RCC_OscConfig+0x82c>)
 8005496:	681b      	ldr	r3, [r3, #0]
 8005498:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800549c:	2b00      	cmp	r3, #0
 800549e:	d1f0      	bne.n	8005482 <HAL_RCC_OscConfig+0x806>
 80054a0:	e006      	b.n	80054b0 <HAL_RCC_OscConfig+0x834>
 80054a2:	2301      	movs	r3, #1
 80054a4:	e005      	b.n	80054b2 <HAL_RCC_OscConfig+0x836>
 80054a6:	bf00      	nop
 80054a8:	40021000 	.word	0x40021000
 80054ac:	019d808c 	.word	0x019d808c
 80054b0:	2300      	movs	r3, #0
 80054b2:	4618      	mov	r0, r3
 80054b4:	3720      	adds	r7, #32
 80054b6:	46bd      	mov	sp, r7
 80054b8:	bd80      	pop	{r7, pc}
 80054ba:	bf00      	nop

080054bc <HAL_RCC_ClockConfig>:
 80054bc:	b580      	push	{r7, lr}
 80054be:	b084      	sub	sp, #16
 80054c0:	af00      	add	r7, sp, #0
 80054c2:	6078      	str	r0, [r7, #4]
 80054c4:	6039      	str	r1, [r7, #0]
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	2b00      	cmp	r3, #0
 80054ca:	d101      	bne.n	80054d0 <HAL_RCC_ClockConfig+0x14>
 80054cc:	2301      	movs	r3, #1
 80054ce:	e0c8      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 80054d0:	4b66      	ldr	r3, [pc, #408]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80054d2:	681b      	ldr	r3, [r3, #0]
 80054d4:	f003 0307 	and.w	r3, r3, #7
 80054d8:	683a      	ldr	r2, [r7, #0]
 80054da:	429a      	cmp	r2, r3
 80054dc:	d910      	bls.n	8005500 <HAL_RCC_ClockConfig+0x44>
 80054de:	4b63      	ldr	r3, [pc, #396]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	f023 0207 	bic.w	r2, r3, #7
 80054e6:	4961      	ldr	r1, [pc, #388]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80054e8:	683b      	ldr	r3, [r7, #0]
 80054ea:	4313      	orrs	r3, r2
 80054ec:	600b      	str	r3, [r1, #0]
 80054ee:	4b5f      	ldr	r3, [pc, #380]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80054f0:	681b      	ldr	r3, [r3, #0]
 80054f2:	f003 0307 	and.w	r3, r3, #7
 80054f6:	683a      	ldr	r2, [r7, #0]
 80054f8:	429a      	cmp	r2, r3
 80054fa:	d001      	beq.n	8005500 <HAL_RCC_ClockConfig+0x44>
 80054fc:	2301      	movs	r3, #1
 80054fe:	e0b0      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	f003 0301 	and.w	r3, r3, #1
 8005508:	2b00      	cmp	r3, #0
 800550a:	d04c      	beq.n	80055a6 <HAL_RCC_ClockConfig+0xea>
 800550c:	687b      	ldr	r3, [r7, #4]
 800550e:	685b      	ldr	r3, [r3, #4]
 8005510:	2b03      	cmp	r3, #3
 8005512:	d107      	bne.n	8005524 <HAL_RCC_ClockConfig+0x68>
 8005514:	4b56      	ldr	r3, [pc, #344]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800551c:	2b00      	cmp	r3, #0
 800551e:	d121      	bne.n	8005564 <HAL_RCC_ClockConfig+0xa8>
 8005520:	2301      	movs	r3, #1
 8005522:	e09e      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	685b      	ldr	r3, [r3, #4]
 8005528:	2b02      	cmp	r3, #2
 800552a:	d107      	bne.n	800553c <HAL_RCC_ClockConfig+0x80>
 800552c:	4b50      	ldr	r3, [pc, #320]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005534:	2b00      	cmp	r3, #0
 8005536:	d115      	bne.n	8005564 <HAL_RCC_ClockConfig+0xa8>
 8005538:	2301      	movs	r3, #1
 800553a:	e092      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	685b      	ldr	r3, [r3, #4]
 8005540:	2b00      	cmp	r3, #0
 8005542:	d107      	bne.n	8005554 <HAL_RCC_ClockConfig+0x98>
 8005544:	4b4a      	ldr	r3, [pc, #296]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005546:	681b      	ldr	r3, [r3, #0]
 8005548:	f003 0302 	and.w	r3, r3, #2
 800554c:	2b00      	cmp	r3, #0
 800554e:	d109      	bne.n	8005564 <HAL_RCC_ClockConfig+0xa8>
 8005550:	2301      	movs	r3, #1
 8005552:	e086      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 8005554:	4b46      	ldr	r3, [pc, #280]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800555c:	2b00      	cmp	r3, #0
 800555e:	d101      	bne.n	8005564 <HAL_RCC_ClockConfig+0xa8>
 8005560:	2301      	movs	r3, #1
 8005562:	e07e      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 8005564:	4b42      	ldr	r3, [pc, #264]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005566:	689b      	ldr	r3, [r3, #8]
 8005568:	f023 0203 	bic.w	r2, r3, #3
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	685b      	ldr	r3, [r3, #4]
 8005570:	493f      	ldr	r1, [pc, #252]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005572:	4313      	orrs	r3, r2
 8005574:	608b      	str	r3, [r1, #8]
 8005576:	f7fd fce5 	bl	8002f44 <HAL_GetTick>
 800557a:	60f8      	str	r0, [r7, #12]
 800557c:	e00a      	b.n	8005594 <HAL_RCC_ClockConfig+0xd8>
 800557e:	f7fd fce1 	bl	8002f44 <HAL_GetTick>
 8005582:	4602      	mov	r2, r0
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	1ad3      	subs	r3, r2, r3
 8005588:	f241 3288 	movw	r2, #5000	; 0x1388
 800558c:	4293      	cmp	r3, r2
 800558e:	d901      	bls.n	8005594 <HAL_RCC_ClockConfig+0xd8>
 8005590:	2303      	movs	r3, #3
 8005592:	e066      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 8005594:	4b36      	ldr	r3, [pc, #216]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005596:	689b      	ldr	r3, [r3, #8]
 8005598:	f003 020c 	and.w	r2, r3, #12
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	685b      	ldr	r3, [r3, #4]
 80055a0:	009b      	lsls	r3, r3, #2
 80055a2:	429a      	cmp	r2, r3
 80055a4:	d1eb      	bne.n	800557e <HAL_RCC_ClockConfig+0xc2>
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	f003 0302 	and.w	r3, r3, #2
 80055ae:	2b00      	cmp	r3, #0
 80055b0:	d008      	beq.n	80055c4 <HAL_RCC_ClockConfig+0x108>
 80055b2:	4b2f      	ldr	r3, [pc, #188]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 80055b4:	689b      	ldr	r3, [r3, #8]
 80055b6:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	689b      	ldr	r3, [r3, #8]
 80055be:	492c      	ldr	r1, [pc, #176]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 80055c0:	4313      	orrs	r3, r2
 80055c2:	608b      	str	r3, [r1, #8]
 80055c4:	4b29      	ldr	r3, [pc, #164]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	f003 0307 	and.w	r3, r3, #7
 80055cc:	683a      	ldr	r2, [r7, #0]
 80055ce:	429a      	cmp	r2, r3
 80055d0:	d210      	bcs.n	80055f4 <HAL_RCC_ClockConfig+0x138>
 80055d2:	4b26      	ldr	r3, [pc, #152]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	f023 0207 	bic.w	r2, r3, #7
 80055da:	4924      	ldr	r1, [pc, #144]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80055dc:	683b      	ldr	r3, [r7, #0]
 80055de:	4313      	orrs	r3, r2
 80055e0:	600b      	str	r3, [r1, #0]
 80055e2:	4b22      	ldr	r3, [pc, #136]	; (800566c <HAL_RCC_ClockConfig+0x1b0>)
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	f003 0307 	and.w	r3, r3, #7
 80055ea:	683a      	ldr	r2, [r7, #0]
 80055ec:	429a      	cmp	r2, r3
 80055ee:	d001      	beq.n	80055f4 <HAL_RCC_ClockConfig+0x138>
 80055f0:	2301      	movs	r3, #1
 80055f2:	e036      	b.n	8005662 <HAL_RCC_ClockConfig+0x1a6>
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	f003 0304 	and.w	r3, r3, #4
 80055fc:	2b00      	cmp	r3, #0
 80055fe:	d008      	beq.n	8005612 <HAL_RCC_ClockConfig+0x156>
 8005600:	4b1b      	ldr	r3, [pc, #108]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005602:	689b      	ldr	r3, [r3, #8]
 8005604:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	68db      	ldr	r3, [r3, #12]
 800560c:	4918      	ldr	r1, [pc, #96]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 800560e:	4313      	orrs	r3, r2
 8005610:	608b      	str	r3, [r1, #8]
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	f003 0308 	and.w	r3, r3, #8
 800561a:	2b00      	cmp	r3, #0
 800561c:	d009      	beq.n	8005632 <HAL_RCC_ClockConfig+0x176>
 800561e:	4b14      	ldr	r3, [pc, #80]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 8005620:	689b      	ldr	r3, [r3, #8]
 8005622:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	691b      	ldr	r3, [r3, #16]
 800562a:	00db      	lsls	r3, r3, #3
 800562c:	4910      	ldr	r1, [pc, #64]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 800562e:	4313      	orrs	r3, r2
 8005630:	608b      	str	r3, [r1, #8]
 8005632:	f000 f825 	bl	8005680 <HAL_RCC_GetSysClockFreq>
 8005636:	4602      	mov	r2, r0
 8005638:	4b0d      	ldr	r3, [pc, #52]	; (8005670 <HAL_RCC_ClockConfig+0x1b4>)
 800563a:	689b      	ldr	r3, [r3, #8]
 800563c:	091b      	lsrs	r3, r3, #4
 800563e:	f003 030f 	and.w	r3, r3, #15
 8005642:	490c      	ldr	r1, [pc, #48]	; (8005674 <HAL_RCC_ClockConfig+0x1b8>)
 8005644:	5ccb      	ldrb	r3, [r1, r3]
 8005646:	f003 031f 	and.w	r3, r3, #31
 800564a:	fa22 f303 	lsr.w	r3, r2, r3
 800564e:	4a0a      	ldr	r2, [pc, #40]	; (8005678 <HAL_RCC_ClockConfig+0x1bc>)
 8005650:	6013      	str	r3, [r2, #0]
 8005652:	4b0a      	ldr	r3, [pc, #40]	; (800567c <HAL_RCC_ClockConfig+0x1c0>)
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	4618      	mov	r0, r3
 8005658:	f7fd fc24 	bl	8002ea4 <HAL_InitTick>
 800565c:	4603      	mov	r3, r0
 800565e:	72fb      	strb	r3, [r7, #11]
 8005660:	7afb      	ldrb	r3, [r7, #11]
 8005662:	4618      	mov	r0, r3
 8005664:	3710      	adds	r7, #16
 8005666:	46bd      	mov	sp, r7
 8005668:	bd80      	pop	{r7, pc}
 800566a:	bf00      	nop
 800566c:	40022000 	.word	0x40022000
 8005670:	40021000 	.word	0x40021000
 8005674:	08008e98 	.word	0x08008e98
 8005678:	2000000c 	.word	0x2000000c
 800567c:	20000010 	.word	0x20000010

08005680 <HAL_RCC_GetSysClockFreq>:
 8005680:	b480      	push	{r7}
 8005682:	b089      	sub	sp, #36	; 0x24
 8005684:	af00      	add	r7, sp, #0
 8005686:	2300      	movs	r3, #0
 8005688:	61fb      	str	r3, [r7, #28]
 800568a:	2300      	movs	r3, #0
 800568c:	61bb      	str	r3, [r7, #24]
 800568e:	4b3e      	ldr	r3, [pc, #248]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 8005690:	689b      	ldr	r3, [r3, #8]
 8005692:	f003 030c 	and.w	r3, r3, #12
 8005696:	613b      	str	r3, [r7, #16]
 8005698:	4b3b      	ldr	r3, [pc, #236]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 800569a:	68db      	ldr	r3, [r3, #12]
 800569c:	f003 0303 	and.w	r3, r3, #3
 80056a0:	60fb      	str	r3, [r7, #12]
 80056a2:	693b      	ldr	r3, [r7, #16]
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d005      	beq.n	80056b4 <HAL_RCC_GetSysClockFreq+0x34>
 80056a8:	693b      	ldr	r3, [r7, #16]
 80056aa:	2b0c      	cmp	r3, #12
 80056ac:	d121      	bne.n	80056f2 <HAL_RCC_GetSysClockFreq+0x72>
 80056ae:	68fb      	ldr	r3, [r7, #12]
 80056b0:	2b01      	cmp	r3, #1
 80056b2:	d11e      	bne.n	80056f2 <HAL_RCC_GetSysClockFreq+0x72>
 80056b4:	4b34      	ldr	r3, [pc, #208]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	f003 0308 	and.w	r3, r3, #8
 80056bc:	2b00      	cmp	r3, #0
 80056be:	d107      	bne.n	80056d0 <HAL_RCC_GetSysClockFreq+0x50>
 80056c0:	4b31      	ldr	r3, [pc, #196]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 80056c2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80056c6:	0a1b      	lsrs	r3, r3, #8
 80056c8:	f003 030f 	and.w	r3, r3, #15
 80056cc:	61fb      	str	r3, [r7, #28]
 80056ce:	e005      	b.n	80056dc <HAL_RCC_GetSysClockFreq+0x5c>
 80056d0:	4b2d      	ldr	r3, [pc, #180]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	091b      	lsrs	r3, r3, #4
 80056d6:	f003 030f 	and.w	r3, r3, #15
 80056da:	61fb      	str	r3, [r7, #28]
 80056dc:	4a2b      	ldr	r2, [pc, #172]	; (800578c <HAL_RCC_GetSysClockFreq+0x10c>)
 80056de:	69fb      	ldr	r3, [r7, #28]
 80056e0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80056e4:	61fb      	str	r3, [r7, #28]
 80056e6:	693b      	ldr	r3, [r7, #16]
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d10d      	bne.n	8005708 <HAL_RCC_GetSysClockFreq+0x88>
 80056ec:	69fb      	ldr	r3, [r7, #28]
 80056ee:	61bb      	str	r3, [r7, #24]
 80056f0:	e00a      	b.n	8005708 <HAL_RCC_GetSysClockFreq+0x88>
 80056f2:	693b      	ldr	r3, [r7, #16]
 80056f4:	2b04      	cmp	r3, #4
 80056f6:	d102      	bne.n	80056fe <HAL_RCC_GetSysClockFreq+0x7e>
 80056f8:	4b25      	ldr	r3, [pc, #148]	; (8005790 <HAL_RCC_GetSysClockFreq+0x110>)
 80056fa:	61bb      	str	r3, [r7, #24]
 80056fc:	e004      	b.n	8005708 <HAL_RCC_GetSysClockFreq+0x88>
 80056fe:	693b      	ldr	r3, [r7, #16]
 8005700:	2b08      	cmp	r3, #8
 8005702:	d101      	bne.n	8005708 <HAL_RCC_GetSysClockFreq+0x88>
 8005704:	4b23      	ldr	r3, [pc, #140]	; (8005794 <HAL_RCC_GetSysClockFreq+0x114>)
 8005706:	61bb      	str	r3, [r7, #24]
 8005708:	693b      	ldr	r3, [r7, #16]
 800570a:	2b0c      	cmp	r3, #12
 800570c:	d134      	bne.n	8005778 <HAL_RCC_GetSysClockFreq+0xf8>
 800570e:	4b1e      	ldr	r3, [pc, #120]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 8005710:	68db      	ldr	r3, [r3, #12]
 8005712:	f003 0303 	and.w	r3, r3, #3
 8005716:	60bb      	str	r3, [r7, #8]
 8005718:	68bb      	ldr	r3, [r7, #8]
 800571a:	2b02      	cmp	r3, #2
 800571c:	d003      	beq.n	8005726 <HAL_RCC_GetSysClockFreq+0xa6>
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	2b03      	cmp	r3, #3
 8005722:	d003      	beq.n	800572c <HAL_RCC_GetSysClockFreq+0xac>
 8005724:	e005      	b.n	8005732 <HAL_RCC_GetSysClockFreq+0xb2>
 8005726:	4b1a      	ldr	r3, [pc, #104]	; (8005790 <HAL_RCC_GetSysClockFreq+0x110>)
 8005728:	617b      	str	r3, [r7, #20]
 800572a:	e005      	b.n	8005738 <HAL_RCC_GetSysClockFreq+0xb8>
 800572c:	4b19      	ldr	r3, [pc, #100]	; (8005794 <HAL_RCC_GetSysClockFreq+0x114>)
 800572e:	617b      	str	r3, [r7, #20]
 8005730:	e002      	b.n	8005738 <HAL_RCC_GetSysClockFreq+0xb8>
 8005732:	69fb      	ldr	r3, [r7, #28]
 8005734:	617b      	str	r3, [r7, #20]
 8005736:	bf00      	nop
 8005738:	4b13      	ldr	r3, [pc, #76]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 800573a:	68db      	ldr	r3, [r3, #12]
 800573c:	091b      	lsrs	r3, r3, #4
 800573e:	f003 0307 	and.w	r3, r3, #7
 8005742:	3301      	adds	r3, #1
 8005744:	607b      	str	r3, [r7, #4]
 8005746:	4b10      	ldr	r3, [pc, #64]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 8005748:	68db      	ldr	r3, [r3, #12]
 800574a:	0a1b      	lsrs	r3, r3, #8
 800574c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8005750:	697a      	ldr	r2, [r7, #20]
 8005752:	fb02 f203 	mul.w	r2, r2, r3
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	fbb2 f3f3 	udiv	r3, r2, r3
 800575c:	617b      	str	r3, [r7, #20]
 800575e:	4b0a      	ldr	r3, [pc, #40]	; (8005788 <HAL_RCC_GetSysClockFreq+0x108>)
 8005760:	68db      	ldr	r3, [r3, #12]
 8005762:	0e5b      	lsrs	r3, r3, #25
 8005764:	f003 0303 	and.w	r3, r3, #3
 8005768:	3301      	adds	r3, #1
 800576a:	005b      	lsls	r3, r3, #1
 800576c:	603b      	str	r3, [r7, #0]
 800576e:	697a      	ldr	r2, [r7, #20]
 8005770:	683b      	ldr	r3, [r7, #0]
 8005772:	fbb2 f3f3 	udiv	r3, r2, r3
 8005776:	61bb      	str	r3, [r7, #24]
 8005778:	69bb      	ldr	r3, [r7, #24]
 800577a:	4618      	mov	r0, r3
 800577c:	3724      	adds	r7, #36	; 0x24
 800577e:	46bd      	mov	sp, r7
 8005780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005784:	4770      	bx	lr
 8005786:	bf00      	nop
 8005788:	40021000 	.word	0x40021000
 800578c:	08008eb0 	.word	0x08008eb0
 8005790:	00f42400 	.word	0x00f42400
 8005794:	007a1200 	.word	0x007a1200

08005798 <HAL_RCC_GetHCLKFreq>:
 8005798:	b480      	push	{r7}
 800579a:	af00      	add	r7, sp, #0
 800579c:	4b03      	ldr	r3, [pc, #12]	; (80057ac <HAL_RCC_GetHCLKFreq+0x14>)
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	4618      	mov	r0, r3
 80057a2:	46bd      	mov	sp, r7
 80057a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057a8:	4770      	bx	lr
 80057aa:	bf00      	nop
 80057ac:	2000000c 	.word	0x2000000c

080057b0 <HAL_RCC_GetPCLK1Freq>:
 80057b0:	b580      	push	{r7, lr}
 80057b2:	af00      	add	r7, sp, #0
 80057b4:	f7ff fff0 	bl	8005798 <HAL_RCC_GetHCLKFreq>
 80057b8:	4602      	mov	r2, r0
 80057ba:	4b06      	ldr	r3, [pc, #24]	; (80057d4 <HAL_RCC_GetPCLK1Freq+0x24>)
 80057bc:	689b      	ldr	r3, [r3, #8]
 80057be:	0a1b      	lsrs	r3, r3, #8
 80057c0:	f003 0307 	and.w	r3, r3, #7
 80057c4:	4904      	ldr	r1, [pc, #16]	; (80057d8 <HAL_RCC_GetPCLK1Freq+0x28>)
 80057c6:	5ccb      	ldrb	r3, [r1, r3]
 80057c8:	f003 031f 	and.w	r3, r3, #31
 80057cc:	fa22 f303 	lsr.w	r3, r2, r3
 80057d0:	4618      	mov	r0, r3
 80057d2:	bd80      	pop	{r7, pc}
 80057d4:	40021000 	.word	0x40021000
 80057d8:	08008ea8 	.word	0x08008ea8

080057dc <HAL_RCC_GetPCLK2Freq>:
 80057dc:	b580      	push	{r7, lr}
 80057de:	af00      	add	r7, sp, #0
 80057e0:	f7ff ffda 	bl	8005798 <HAL_RCC_GetHCLKFreq>
 80057e4:	4602      	mov	r2, r0
 80057e6:	4b06      	ldr	r3, [pc, #24]	; (8005800 <HAL_RCC_GetPCLK2Freq+0x24>)
 80057e8:	689b      	ldr	r3, [r3, #8]
 80057ea:	0adb      	lsrs	r3, r3, #11
 80057ec:	f003 0307 	and.w	r3, r3, #7
 80057f0:	4904      	ldr	r1, [pc, #16]	; (8005804 <HAL_RCC_GetPCLK2Freq+0x28>)
 80057f2:	5ccb      	ldrb	r3, [r1, r3]
 80057f4:	f003 031f 	and.w	r3, r3, #31
 80057f8:	fa22 f303 	lsr.w	r3, r2, r3
 80057fc:	4618      	mov	r0, r3
 80057fe:	bd80      	pop	{r7, pc}
 8005800:	40021000 	.word	0x40021000
 8005804:	08008ea8 	.word	0x08008ea8

08005808 <RCC_SetFlashLatencyFromMSIRange>:
 8005808:	b580      	push	{r7, lr}
 800580a:	b086      	sub	sp, #24
 800580c:	af00      	add	r7, sp, #0
 800580e:	6078      	str	r0, [r7, #4]
 8005810:	2300      	movs	r3, #0
 8005812:	613b      	str	r3, [r7, #16]
 8005814:	4b2a      	ldr	r3, [pc, #168]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005816:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005818:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800581c:	2b00      	cmp	r3, #0
 800581e:	d003      	beq.n	8005828 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8005820:	f7ff f9c8 	bl	8004bb4 <HAL_PWREx_GetVoltageRange>
 8005824:	6178      	str	r0, [r7, #20]
 8005826:	e014      	b.n	8005852 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8005828:	4b25      	ldr	r3, [pc, #148]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800582a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800582c:	4a24      	ldr	r2, [pc, #144]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800582e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005832:	6593      	str	r3, [r2, #88]	; 0x58
 8005834:	4b22      	ldr	r3, [pc, #136]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005836:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005838:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800583c:	60fb      	str	r3, [r7, #12]
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	f7ff f9b8 	bl	8004bb4 <HAL_PWREx_GetVoltageRange>
 8005844:	6178      	str	r0, [r7, #20]
 8005846:	4b1e      	ldr	r3, [pc, #120]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8005848:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800584a:	4a1d      	ldr	r2, [pc, #116]	; (80058c0 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800584c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005850:	6593      	str	r3, [r2, #88]	; 0x58
 8005852:	697b      	ldr	r3, [r7, #20]
 8005854:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005858:	d10b      	bne.n	8005872 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	2b80      	cmp	r3, #128	; 0x80
 800585e:	d919      	bls.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	2ba0      	cmp	r3, #160	; 0xa0
 8005864:	d902      	bls.n	800586c <RCC_SetFlashLatencyFromMSIRange+0x64>
 8005866:	2302      	movs	r3, #2
 8005868:	613b      	str	r3, [r7, #16]
 800586a:	e013      	b.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800586c:	2301      	movs	r3, #1
 800586e:	613b      	str	r3, [r7, #16]
 8005870:	e010      	b.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	2b80      	cmp	r3, #128	; 0x80
 8005876:	d902      	bls.n	800587e <RCC_SetFlashLatencyFromMSIRange+0x76>
 8005878:	2303      	movs	r3, #3
 800587a:	613b      	str	r3, [r7, #16]
 800587c:	e00a      	b.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	2b80      	cmp	r3, #128	; 0x80
 8005882:	d102      	bne.n	800588a <RCC_SetFlashLatencyFromMSIRange+0x82>
 8005884:	2302      	movs	r3, #2
 8005886:	613b      	str	r3, [r7, #16]
 8005888:	e004      	b.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	2b70      	cmp	r3, #112	; 0x70
 800588e:	d101      	bne.n	8005894 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8005890:	2301      	movs	r3, #1
 8005892:	613b      	str	r3, [r7, #16]
 8005894:	4b0b      	ldr	r3, [pc, #44]	; (80058c4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	f023 0207 	bic.w	r2, r3, #7
 800589c:	4909      	ldr	r1, [pc, #36]	; (80058c4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800589e:	693b      	ldr	r3, [r7, #16]
 80058a0:	4313      	orrs	r3, r2
 80058a2:	600b      	str	r3, [r1, #0]
 80058a4:	4b07      	ldr	r3, [pc, #28]	; (80058c4 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	f003 0307 	and.w	r3, r3, #7
 80058ac:	693a      	ldr	r2, [r7, #16]
 80058ae:	429a      	cmp	r2, r3
 80058b0:	d001      	beq.n	80058b6 <RCC_SetFlashLatencyFromMSIRange+0xae>
 80058b2:	2301      	movs	r3, #1
 80058b4:	e000      	b.n	80058b8 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80058b6:	2300      	movs	r3, #0
 80058b8:	4618      	mov	r0, r3
 80058ba:	3718      	adds	r7, #24
 80058bc:	46bd      	mov	sp, r7
 80058be:	bd80      	pop	{r7, pc}
 80058c0:	40021000 	.word	0x40021000
 80058c4:	40022000 	.word	0x40022000

080058c8 <HAL_RCCEx_PeriphCLKConfig>:
 80058c8:	b580      	push	{r7, lr}
 80058ca:	b086      	sub	sp, #24
 80058cc:	af00      	add	r7, sp, #0
 80058ce:	6078      	str	r0, [r7, #4]
 80058d0:	2300      	movs	r3, #0
 80058d2:	74fb      	strb	r3, [r7, #19]
 80058d4:	2300      	movs	r3, #0
 80058d6:	74bb      	strb	r3, [r7, #18]
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	681b      	ldr	r3, [r3, #0]
 80058dc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80058e0:	2b00      	cmp	r3, #0
 80058e2:	d031      	beq.n	8005948 <HAL_RCCEx_PeriphCLKConfig+0x80>
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058e8:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 80058ec:	d01a      	beq.n	8005924 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 80058ee:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 80058f2:	d814      	bhi.n	800591e <HAL_RCCEx_PeriphCLKConfig+0x56>
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d009      	beq.n	800590c <HAL_RCCEx_PeriphCLKConfig+0x44>
 80058f8:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80058fc:	d10f      	bne.n	800591e <HAL_RCCEx_PeriphCLKConfig+0x56>
 80058fe:	4bac      	ldr	r3, [pc, #688]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005900:	68db      	ldr	r3, [r3, #12]
 8005902:	4aab      	ldr	r2, [pc, #684]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005904:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005908:	60d3      	str	r3, [r2, #12]
 800590a:	e00c      	b.n	8005926 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	3304      	adds	r3, #4
 8005910:	2100      	movs	r1, #0
 8005912:	4618      	mov	r0, r3
 8005914:	f000 f9cc 	bl	8005cb0 <RCCEx_PLLSAI1_Config>
 8005918:	4603      	mov	r3, r0
 800591a:	74fb      	strb	r3, [r7, #19]
 800591c:	e003      	b.n	8005926 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800591e:	2301      	movs	r3, #1
 8005920:	74fb      	strb	r3, [r7, #19]
 8005922:	e000      	b.n	8005926 <HAL_RCCEx_PeriphCLKConfig+0x5e>
 8005924:	bf00      	nop
 8005926:	7cfb      	ldrb	r3, [r7, #19]
 8005928:	2b00      	cmp	r3, #0
 800592a:	d10b      	bne.n	8005944 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800592c:	4ba0      	ldr	r3, [pc, #640]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800592e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005932:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800593a:	499d      	ldr	r1, [pc, #628]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800593c:	4313      	orrs	r3, r2
 800593e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005942:	e001      	b.n	8005948 <HAL_RCCEx_PeriphCLKConfig+0x80>
 8005944:	7cfb      	ldrb	r3, [r7, #19]
 8005946:	74bb      	strb	r3, [r7, #18]
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005950:	2b00      	cmp	r3, #0
 8005952:	f000 8099 	beq.w	8005a88 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8005956:	2300      	movs	r3, #0
 8005958:	747b      	strb	r3, [r7, #17]
 800595a:	4b95      	ldr	r3, [pc, #596]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800595c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800595e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005962:	2b00      	cmp	r3, #0
 8005964:	d101      	bne.n	800596a <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8005966:	2301      	movs	r3, #1
 8005968:	e000      	b.n	800596c <HAL_RCCEx_PeriphCLKConfig+0xa4>
 800596a:	2300      	movs	r3, #0
 800596c:	2b00      	cmp	r3, #0
 800596e:	d00d      	beq.n	800598c <HAL_RCCEx_PeriphCLKConfig+0xc4>
 8005970:	4b8f      	ldr	r3, [pc, #572]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005972:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005974:	4a8e      	ldr	r2, [pc, #568]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005976:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800597a:	6593      	str	r3, [r2, #88]	; 0x58
 800597c:	4b8c      	ldr	r3, [pc, #560]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 800597e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005980:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005984:	60bb      	str	r3, [r7, #8]
 8005986:	68bb      	ldr	r3, [r7, #8]
 8005988:	2301      	movs	r3, #1
 800598a:	747b      	strb	r3, [r7, #17]
 800598c:	4b89      	ldr	r3, [pc, #548]	; (8005bb4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	4a88      	ldr	r2, [pc, #544]	; (8005bb4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8005992:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005996:	6013      	str	r3, [r2, #0]
 8005998:	f7fd fad4 	bl	8002f44 <HAL_GetTick>
 800599c:	60f8      	str	r0, [r7, #12]
 800599e:	e009      	b.n	80059b4 <HAL_RCCEx_PeriphCLKConfig+0xec>
 80059a0:	f7fd fad0 	bl	8002f44 <HAL_GetTick>
 80059a4:	4602      	mov	r2, r0
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	1ad3      	subs	r3, r2, r3
 80059aa:	2b02      	cmp	r3, #2
 80059ac:	d902      	bls.n	80059b4 <HAL_RCCEx_PeriphCLKConfig+0xec>
 80059ae:	2303      	movs	r3, #3
 80059b0:	74fb      	strb	r3, [r7, #19]
 80059b2:	e005      	b.n	80059c0 <HAL_RCCEx_PeriphCLKConfig+0xf8>
 80059b4:	4b7f      	ldr	r3, [pc, #508]	; (8005bb4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80059b6:	681b      	ldr	r3, [r3, #0]
 80059b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80059bc:	2b00      	cmp	r3, #0
 80059be:	d0ef      	beq.n	80059a0 <HAL_RCCEx_PeriphCLKConfig+0xd8>
 80059c0:	7cfb      	ldrb	r3, [r7, #19]
 80059c2:	2b00      	cmp	r3, #0
 80059c4:	d155      	bne.n	8005a72 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80059c6:	4b7a      	ldr	r3, [pc, #488]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80059c8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80059cc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80059d0:	617b      	str	r3, [r7, #20]
 80059d2:	697b      	ldr	r3, [r7, #20]
 80059d4:	2b00      	cmp	r3, #0
 80059d6:	d01e      	beq.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80059dc:	697a      	ldr	r2, [r7, #20]
 80059de:	429a      	cmp	r2, r3
 80059e0:	d019      	beq.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80059e2:	4b73      	ldr	r3, [pc, #460]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80059e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80059e8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80059ec:	617b      	str	r3, [r7, #20]
 80059ee:	4b70      	ldr	r3, [pc, #448]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80059f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80059f4:	4a6e      	ldr	r2, [pc, #440]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 80059f6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80059fa:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80059fe:	4b6c      	ldr	r3, [pc, #432]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a00:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005a04:	4a6a      	ldr	r2, [pc, #424]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a06:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005a0a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005a0e:	4a68      	ldr	r2, [pc, #416]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a10:	697b      	ldr	r3, [r7, #20]
 8005a12:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8005a16:	697b      	ldr	r3, [r7, #20]
 8005a18:	f003 0301 	and.w	r3, r3, #1
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	d016      	beq.n	8005a4e <HAL_RCCEx_PeriphCLKConfig+0x186>
 8005a20:	f7fd fa90 	bl	8002f44 <HAL_GetTick>
 8005a24:	60f8      	str	r0, [r7, #12]
 8005a26:	e00b      	b.n	8005a40 <HAL_RCCEx_PeriphCLKConfig+0x178>
 8005a28:	f7fd fa8c 	bl	8002f44 <HAL_GetTick>
 8005a2c:	4602      	mov	r2, r0
 8005a2e:	68fb      	ldr	r3, [r7, #12]
 8005a30:	1ad3      	subs	r3, r2, r3
 8005a32:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a36:	4293      	cmp	r3, r2
 8005a38:	d902      	bls.n	8005a40 <HAL_RCCEx_PeriphCLKConfig+0x178>
 8005a3a:	2303      	movs	r3, #3
 8005a3c:	74fb      	strb	r3, [r7, #19]
 8005a3e:	e006      	b.n	8005a4e <HAL_RCCEx_PeriphCLKConfig+0x186>
 8005a40:	4b5b      	ldr	r3, [pc, #364]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005a46:	f003 0302 	and.w	r3, r3, #2
 8005a4a:	2b00      	cmp	r3, #0
 8005a4c:	d0ec      	beq.n	8005a28 <HAL_RCCEx_PeriphCLKConfig+0x160>
 8005a4e:	7cfb      	ldrb	r3, [r7, #19]
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	d10b      	bne.n	8005a6c <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8005a54:	4b56      	ldr	r3, [pc, #344]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a56:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005a5a:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005a62:	4953      	ldr	r1, [pc, #332]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a64:	4313      	orrs	r3, r2
 8005a66:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8005a6a:	e004      	b.n	8005a76 <HAL_RCCEx_PeriphCLKConfig+0x1ae>
 8005a6c:	7cfb      	ldrb	r3, [r7, #19]
 8005a6e:	74bb      	strb	r3, [r7, #18]
 8005a70:	e001      	b.n	8005a76 <HAL_RCCEx_PeriphCLKConfig+0x1ae>
 8005a72:	7cfb      	ldrb	r3, [r7, #19]
 8005a74:	74bb      	strb	r3, [r7, #18]
 8005a76:	7c7b      	ldrb	r3, [r7, #17]
 8005a78:	2b01      	cmp	r3, #1
 8005a7a:	d105      	bne.n	8005a88 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8005a7c:	4b4c      	ldr	r3, [pc, #304]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a7e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005a80:	4a4b      	ldr	r2, [pc, #300]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a82:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005a86:	6593      	str	r3, [r2, #88]	; 0x58
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	f003 0301 	and.w	r3, r3, #1
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	d00a      	beq.n	8005aaa <HAL_RCCEx_PeriphCLKConfig+0x1e2>
 8005a94:	4b46      	ldr	r3, [pc, #280]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005a96:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005a9a:	f023 0203 	bic.w	r2, r3, #3
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	6a1b      	ldr	r3, [r3, #32]
 8005aa2:	4943      	ldr	r1, [pc, #268]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005aa4:	4313      	orrs	r3, r2
 8005aa6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	f003 0302 	and.w	r3, r3, #2
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d00a      	beq.n	8005acc <HAL_RCCEx_PeriphCLKConfig+0x204>
 8005ab6:	4b3e      	ldr	r3, [pc, #248]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ab8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005abc:	f023 020c 	bic.w	r2, r3, #12
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac4:	493a      	ldr	r1, [pc, #232]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ac6:	4313      	orrs	r3, r2
 8005ac8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	f003 0320 	and.w	r3, r3, #32
 8005ad4:	2b00      	cmp	r3, #0
 8005ad6:	d00a      	beq.n	8005aee <HAL_RCCEx_PeriphCLKConfig+0x226>
 8005ad8:	4b35      	ldr	r3, [pc, #212]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ada:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005ade:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ae6:	4932      	ldr	r1, [pc, #200]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ae8:	4313      	orrs	r3, r2
 8005aea:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005aee:	687b      	ldr	r3, [r7, #4]
 8005af0:	681b      	ldr	r3, [r3, #0]
 8005af2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005af6:	2b00      	cmp	r3, #0
 8005af8:	d00a      	beq.n	8005b10 <HAL_RCCEx_PeriphCLKConfig+0x248>
 8005afa:	4b2d      	ldr	r3, [pc, #180]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005afc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005b00:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005b08:	4929      	ldr	r1, [pc, #164]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b0a:	4313      	orrs	r3, r2
 8005b0c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005b18:	2b00      	cmp	r3, #0
 8005b1a:	d00a      	beq.n	8005b32 <HAL_RCCEx_PeriphCLKConfig+0x26a>
 8005b1c:	4b24      	ldr	r3, [pc, #144]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005b22:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005b2a:	4921      	ldr	r1, [pc, #132]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b2c:	4313      	orrs	r3, r2
 8005b2e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005b3a:	2b00      	cmp	r3, #0
 8005b3c:	d00a      	beq.n	8005b54 <HAL_RCCEx_PeriphCLKConfig+0x28c>
 8005b3e:	4b1c      	ldr	r3, [pc, #112]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b40:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005b44:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005b4c:	4918      	ldr	r1, [pc, #96]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b4e:	4313      	orrs	r3, r2
 8005b50:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	681b      	ldr	r3, [r3, #0]
 8005b58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005b5c:	2b00      	cmp	r3, #0
 8005b5e:	d00a      	beq.n	8005b76 <HAL_RCCEx_PeriphCLKConfig+0x2ae>
 8005b60:	4b13      	ldr	r3, [pc, #76]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b62:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005b66:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005b6e:	4910      	ldr	r1, [pc, #64]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b70:	4313      	orrs	r3, r2
 8005b72:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d02c      	beq.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x314>
 8005b82:	4b0b      	ldr	r3, [pc, #44]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b84:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005b88:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005b90:	4907      	ldr	r1, [pc, #28]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005b92:	4313      	orrs	r3, r2
 8005b94:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005b9c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005ba0:	d10a      	bne.n	8005bb8 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8005ba2:	4b03      	ldr	r3, [pc, #12]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ba4:	68db      	ldr	r3, [r3, #12]
 8005ba6:	4a02      	ldr	r2, [pc, #8]	; (8005bb0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
 8005ba8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005bac:	60d3      	str	r3, [r2, #12]
 8005bae:	e015      	b.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x314>
 8005bb0:	40021000 	.word	0x40021000
 8005bb4:	40007000 	.word	0x40007000
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005bbc:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8005bc0:	d10c      	bne.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x314>
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	3304      	adds	r3, #4
 8005bc6:	2101      	movs	r1, #1
 8005bc8:	4618      	mov	r0, r3
 8005bca:	f000 f871 	bl	8005cb0 <RCCEx_PLLSAI1_Config>
 8005bce:	4603      	mov	r3, r0
 8005bd0:	74fb      	strb	r3, [r7, #19]
 8005bd2:	7cfb      	ldrb	r3, [r7, #19]
 8005bd4:	2b00      	cmp	r3, #0
 8005bd6:	d001      	beq.n	8005bdc <HAL_RCCEx_PeriphCLKConfig+0x314>
 8005bd8:	7cfb      	ldrb	r3, [r7, #19]
 8005bda:	74bb      	strb	r3, [r7, #18]
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	681b      	ldr	r3, [r3, #0]
 8005be0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005be4:	2b00      	cmp	r3, #0
 8005be6:	d028      	beq.n	8005c3a <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005be8:	4b30      	ldr	r3, [pc, #192]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005bea:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005bee:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005bf6:	492d      	ldr	r1, [pc, #180]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005bf8:	4313      	orrs	r3, r2
 8005bfa:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005bfe:	687b      	ldr	r3, [r7, #4]
 8005c00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c02:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005c06:	d106      	bne.n	8005c16 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8005c08:	4b28      	ldr	r3, [pc, #160]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c0a:	68db      	ldr	r3, [r3, #12]
 8005c0c:	4a27      	ldr	r2, [pc, #156]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c0e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005c12:	60d3      	str	r3, [r2, #12]
 8005c14:	e011      	b.n	8005c3a <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c1a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8005c1e:	d10c      	bne.n	8005c3a <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	3304      	adds	r3, #4
 8005c24:	2101      	movs	r1, #1
 8005c26:	4618      	mov	r0, r3
 8005c28:	f000 f842 	bl	8005cb0 <RCCEx_PLLSAI1_Config>
 8005c2c:	4603      	mov	r3, r0
 8005c2e:	74fb      	strb	r3, [r7, #19]
 8005c30:	7cfb      	ldrb	r3, [r7, #19]
 8005c32:	2b00      	cmp	r3, #0
 8005c34:	d001      	beq.n	8005c3a <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c36:	7cfb      	ldrb	r3, [r7, #19]
 8005c38:	74bb      	strb	r3, [r7, #18]
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d01c      	beq.n	8005c80 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 8005c46:	4b19      	ldr	r3, [pc, #100]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c48:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c4c:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005c54:	4915      	ldr	r1, [pc, #84]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c56:	4313      	orrs	r3, r2
 8005c58:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005c60:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005c64:	d10c      	bne.n	8005c80 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 8005c66:	687b      	ldr	r3, [r7, #4]
 8005c68:	3304      	adds	r3, #4
 8005c6a:	2102      	movs	r1, #2
 8005c6c:	4618      	mov	r0, r3
 8005c6e:	f000 f81f 	bl	8005cb0 <RCCEx_PLLSAI1_Config>
 8005c72:	4603      	mov	r3, r0
 8005c74:	74fb      	strb	r3, [r7, #19]
 8005c76:	7cfb      	ldrb	r3, [r7, #19]
 8005c78:	2b00      	cmp	r3, #0
 8005c7a:	d001      	beq.n	8005c80 <HAL_RCCEx_PeriphCLKConfig+0x3b8>
 8005c7c:	7cfb      	ldrb	r3, [r7, #19]
 8005c7e:	74bb      	strb	r3, [r7, #18]
 8005c80:	687b      	ldr	r3, [r7, #4]
 8005c82:	681b      	ldr	r3, [r3, #0]
 8005c84:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005c88:	2b00      	cmp	r3, #0
 8005c8a:	d00a      	beq.n	8005ca2 <HAL_RCCEx_PeriphCLKConfig+0x3da>
 8005c8c:	4b07      	ldr	r3, [pc, #28]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005c92:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005c9a:	4904      	ldr	r1, [pc, #16]	; (8005cac <HAL_RCCEx_PeriphCLKConfig+0x3e4>)
 8005c9c:	4313      	orrs	r3, r2
 8005c9e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8005ca2:	7cbb      	ldrb	r3, [r7, #18]
 8005ca4:	4618      	mov	r0, r3
 8005ca6:	3718      	adds	r7, #24
 8005ca8:	46bd      	mov	sp, r7
 8005caa:	bd80      	pop	{r7, pc}
 8005cac:	40021000 	.word	0x40021000

08005cb0 <RCCEx_PLLSAI1_Config>:
 8005cb0:	b580      	push	{r7, lr}
 8005cb2:	b084      	sub	sp, #16
 8005cb4:	af00      	add	r7, sp, #0
 8005cb6:	6078      	str	r0, [r7, #4]
 8005cb8:	6039      	str	r1, [r7, #0]
 8005cba:	2300      	movs	r3, #0
 8005cbc:	73fb      	strb	r3, [r7, #15]
 8005cbe:	4b74      	ldr	r3, [pc, #464]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005cc0:	68db      	ldr	r3, [r3, #12]
 8005cc2:	f003 0303 	and.w	r3, r3, #3
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d018      	beq.n	8005cfc <RCCEx_PLLSAI1_Config+0x4c>
 8005cca:	4b71      	ldr	r3, [pc, #452]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005ccc:	68db      	ldr	r3, [r3, #12]
 8005cce:	f003 0203 	and.w	r2, r3, #3
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	681b      	ldr	r3, [r3, #0]
 8005cd6:	429a      	cmp	r2, r3
 8005cd8:	d10d      	bne.n	8005cf6 <RCCEx_PLLSAI1_Config+0x46>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d009      	beq.n	8005cf6 <RCCEx_PLLSAI1_Config+0x46>
 8005ce2:	4b6b      	ldr	r3, [pc, #428]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005ce4:	68db      	ldr	r3, [r3, #12]
 8005ce6:	091b      	lsrs	r3, r3, #4
 8005ce8:	f003 0307 	and.w	r3, r3, #7
 8005cec:	1c5a      	adds	r2, r3, #1
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	685b      	ldr	r3, [r3, #4]
 8005cf2:	429a      	cmp	r2, r3
 8005cf4:	d047      	beq.n	8005d86 <RCCEx_PLLSAI1_Config+0xd6>
 8005cf6:	2301      	movs	r3, #1
 8005cf8:	73fb      	strb	r3, [r7, #15]
 8005cfa:	e044      	b.n	8005d86 <RCCEx_PLLSAI1_Config+0xd6>
 8005cfc:	687b      	ldr	r3, [r7, #4]
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	2b03      	cmp	r3, #3
 8005d02:	d018      	beq.n	8005d36 <RCCEx_PLLSAI1_Config+0x86>
 8005d04:	2b03      	cmp	r3, #3
 8005d06:	d825      	bhi.n	8005d54 <RCCEx_PLLSAI1_Config+0xa4>
 8005d08:	2b01      	cmp	r3, #1
 8005d0a:	d002      	beq.n	8005d12 <RCCEx_PLLSAI1_Config+0x62>
 8005d0c:	2b02      	cmp	r3, #2
 8005d0e:	d009      	beq.n	8005d24 <RCCEx_PLLSAI1_Config+0x74>
 8005d10:	e020      	b.n	8005d54 <RCCEx_PLLSAI1_Config+0xa4>
 8005d12:	4b5f      	ldr	r3, [pc, #380]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	f003 0302 	and.w	r3, r3, #2
 8005d1a:	2b00      	cmp	r3, #0
 8005d1c:	d11d      	bne.n	8005d5a <RCCEx_PLLSAI1_Config+0xaa>
 8005d1e:	2301      	movs	r3, #1
 8005d20:	73fb      	strb	r3, [r7, #15]
 8005d22:	e01a      	b.n	8005d5a <RCCEx_PLLSAI1_Config+0xaa>
 8005d24:	4b5a      	ldr	r3, [pc, #360]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005d2c:	2b00      	cmp	r3, #0
 8005d2e:	d116      	bne.n	8005d5e <RCCEx_PLLSAI1_Config+0xae>
 8005d30:	2301      	movs	r3, #1
 8005d32:	73fb      	strb	r3, [r7, #15]
 8005d34:	e013      	b.n	8005d5e <RCCEx_PLLSAI1_Config+0xae>
 8005d36:	4b56      	ldr	r3, [pc, #344]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d10f      	bne.n	8005d62 <RCCEx_PLLSAI1_Config+0xb2>
 8005d42:	4b53      	ldr	r3, [pc, #332]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d109      	bne.n	8005d62 <RCCEx_PLLSAI1_Config+0xb2>
 8005d4e:	2301      	movs	r3, #1
 8005d50:	73fb      	strb	r3, [r7, #15]
 8005d52:	e006      	b.n	8005d62 <RCCEx_PLLSAI1_Config+0xb2>
 8005d54:	2301      	movs	r3, #1
 8005d56:	73fb      	strb	r3, [r7, #15]
 8005d58:	e004      	b.n	8005d64 <RCCEx_PLLSAI1_Config+0xb4>
 8005d5a:	bf00      	nop
 8005d5c:	e002      	b.n	8005d64 <RCCEx_PLLSAI1_Config+0xb4>
 8005d5e:	bf00      	nop
 8005d60:	e000      	b.n	8005d64 <RCCEx_PLLSAI1_Config+0xb4>
 8005d62:	bf00      	nop
 8005d64:	7bfb      	ldrb	r3, [r7, #15]
 8005d66:	2b00      	cmp	r3, #0
 8005d68:	d10d      	bne.n	8005d86 <RCCEx_PLLSAI1_Config+0xd6>
 8005d6a:	4b49      	ldr	r3, [pc, #292]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d6c:	68db      	ldr	r3, [r3, #12]
 8005d6e:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	6819      	ldr	r1, [r3, #0]
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	685b      	ldr	r3, [r3, #4]
 8005d7a:	3b01      	subs	r3, #1
 8005d7c:	011b      	lsls	r3, r3, #4
 8005d7e:	430b      	orrs	r3, r1
 8005d80:	4943      	ldr	r1, [pc, #268]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d82:	4313      	orrs	r3, r2
 8005d84:	60cb      	str	r3, [r1, #12]
 8005d86:	7bfb      	ldrb	r3, [r7, #15]
 8005d88:	2b00      	cmp	r3, #0
 8005d8a:	d17c      	bne.n	8005e86 <RCCEx_PLLSAI1_Config+0x1d6>
 8005d8c:	4b40      	ldr	r3, [pc, #256]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d8e:	681b      	ldr	r3, [r3, #0]
 8005d90:	4a3f      	ldr	r2, [pc, #252]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005d92:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005d96:	6013      	str	r3, [r2, #0]
 8005d98:	f7fd f8d4 	bl	8002f44 <HAL_GetTick>
 8005d9c:	60b8      	str	r0, [r7, #8]
 8005d9e:	e009      	b.n	8005db4 <RCCEx_PLLSAI1_Config+0x104>
 8005da0:	f7fd f8d0 	bl	8002f44 <HAL_GetTick>
 8005da4:	4602      	mov	r2, r0
 8005da6:	68bb      	ldr	r3, [r7, #8]
 8005da8:	1ad3      	subs	r3, r2, r3
 8005daa:	2b02      	cmp	r3, #2
 8005dac:	d902      	bls.n	8005db4 <RCCEx_PLLSAI1_Config+0x104>
 8005dae:	2303      	movs	r3, #3
 8005db0:	73fb      	strb	r3, [r7, #15]
 8005db2:	e005      	b.n	8005dc0 <RCCEx_PLLSAI1_Config+0x110>
 8005db4:	4b36      	ldr	r3, [pc, #216]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d1ef      	bne.n	8005da0 <RCCEx_PLLSAI1_Config+0xf0>
 8005dc0:	7bfb      	ldrb	r3, [r7, #15]
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d15f      	bne.n	8005e86 <RCCEx_PLLSAI1_Config+0x1d6>
 8005dc6:	683b      	ldr	r3, [r7, #0]
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d110      	bne.n	8005dee <RCCEx_PLLSAI1_Config+0x13e>
 8005dcc:	4b30      	ldr	r3, [pc, #192]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005dce:	691b      	ldr	r3, [r3, #16]
 8005dd0:	f023 4378 	bic.w	r3, r3, #4160749568	; 0xf8000000
 8005dd4:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005dd8:	687a      	ldr	r2, [r7, #4]
 8005dda:	6892      	ldr	r2, [r2, #8]
 8005ddc:	0211      	lsls	r1, r2, #8
 8005dde:	687a      	ldr	r2, [r7, #4]
 8005de0:	68d2      	ldr	r2, [r2, #12]
 8005de2:	06d2      	lsls	r2, r2, #27
 8005de4:	430a      	orrs	r2, r1
 8005de6:	492a      	ldr	r1, [pc, #168]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005de8:	4313      	orrs	r3, r2
 8005dea:	610b      	str	r3, [r1, #16]
 8005dec:	e027      	b.n	8005e3e <RCCEx_PLLSAI1_Config+0x18e>
 8005dee:	683b      	ldr	r3, [r7, #0]
 8005df0:	2b01      	cmp	r3, #1
 8005df2:	d112      	bne.n	8005e1a <RCCEx_PLLSAI1_Config+0x16a>
 8005df4:	4b26      	ldr	r3, [pc, #152]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005df6:	691b      	ldr	r3, [r3, #16]
 8005df8:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8005dfc:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005e00:	687a      	ldr	r2, [r7, #4]
 8005e02:	6892      	ldr	r2, [r2, #8]
 8005e04:	0211      	lsls	r1, r2, #8
 8005e06:	687a      	ldr	r2, [r7, #4]
 8005e08:	6912      	ldr	r2, [r2, #16]
 8005e0a:	0852      	lsrs	r2, r2, #1
 8005e0c:	3a01      	subs	r2, #1
 8005e0e:	0552      	lsls	r2, r2, #21
 8005e10:	430a      	orrs	r2, r1
 8005e12:	491f      	ldr	r1, [pc, #124]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e14:	4313      	orrs	r3, r2
 8005e16:	610b      	str	r3, [r1, #16]
 8005e18:	e011      	b.n	8005e3e <RCCEx_PLLSAI1_Config+0x18e>
 8005e1a:	4b1d      	ldr	r3, [pc, #116]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e1c:	691b      	ldr	r3, [r3, #16]
 8005e1e:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8005e22:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005e26:	687a      	ldr	r2, [r7, #4]
 8005e28:	6892      	ldr	r2, [r2, #8]
 8005e2a:	0211      	lsls	r1, r2, #8
 8005e2c:	687a      	ldr	r2, [r7, #4]
 8005e2e:	6952      	ldr	r2, [r2, #20]
 8005e30:	0852      	lsrs	r2, r2, #1
 8005e32:	3a01      	subs	r2, #1
 8005e34:	0652      	lsls	r2, r2, #25
 8005e36:	430a      	orrs	r2, r1
 8005e38:	4915      	ldr	r1, [pc, #84]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e3a:	4313      	orrs	r3, r2
 8005e3c:	610b      	str	r3, [r1, #16]
 8005e3e:	4b14      	ldr	r3, [pc, #80]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	4a13      	ldr	r2, [pc, #76]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e44:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005e48:	6013      	str	r3, [r2, #0]
 8005e4a:	f7fd f87b 	bl	8002f44 <HAL_GetTick>
 8005e4e:	60b8      	str	r0, [r7, #8]
 8005e50:	e009      	b.n	8005e66 <RCCEx_PLLSAI1_Config+0x1b6>
 8005e52:	f7fd f877 	bl	8002f44 <HAL_GetTick>
 8005e56:	4602      	mov	r2, r0
 8005e58:	68bb      	ldr	r3, [r7, #8]
 8005e5a:	1ad3      	subs	r3, r2, r3
 8005e5c:	2b02      	cmp	r3, #2
 8005e5e:	d902      	bls.n	8005e66 <RCCEx_PLLSAI1_Config+0x1b6>
 8005e60:	2303      	movs	r3, #3
 8005e62:	73fb      	strb	r3, [r7, #15]
 8005e64:	e005      	b.n	8005e72 <RCCEx_PLLSAI1_Config+0x1c2>
 8005e66:	4b0a      	ldr	r3, [pc, #40]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d0ef      	beq.n	8005e52 <RCCEx_PLLSAI1_Config+0x1a2>
 8005e72:	7bfb      	ldrb	r3, [r7, #15]
 8005e74:	2b00      	cmp	r3, #0
 8005e76:	d106      	bne.n	8005e86 <RCCEx_PLLSAI1_Config+0x1d6>
 8005e78:	4b05      	ldr	r3, [pc, #20]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e7a:	691a      	ldr	r2, [r3, #16]
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	699b      	ldr	r3, [r3, #24]
 8005e80:	4903      	ldr	r1, [pc, #12]	; (8005e90 <RCCEx_PLLSAI1_Config+0x1e0>)
 8005e82:	4313      	orrs	r3, r2
 8005e84:	610b      	str	r3, [r1, #16]
 8005e86:	7bfb      	ldrb	r3, [r7, #15]
 8005e88:	4618      	mov	r0, r3
 8005e8a:	3710      	adds	r7, #16
 8005e8c:	46bd      	mov	sp, r7
 8005e8e:	bd80      	pop	{r7, pc}
 8005e90:	40021000 	.word	0x40021000

08005e94 <HAL_TIM_Base_Init>:
 8005e94:	b580      	push	{r7, lr}
 8005e96:	b082      	sub	sp, #8
 8005e98:	af00      	add	r7, sp, #0
 8005e9a:	6078      	str	r0, [r7, #4]
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	2b00      	cmp	r3, #0
 8005ea0:	d101      	bne.n	8005ea6 <HAL_TIM_Base_Init+0x12>
 8005ea2:	2301      	movs	r3, #1
 8005ea4:	e049      	b.n	8005f3a <HAL_TIM_Base_Init+0xa6>
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005eac:	b2db      	uxtb	r3, r3
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	d106      	bne.n	8005ec0 <HAL_TIM_Base_Init+0x2c>
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005eba:	6878      	ldr	r0, [r7, #4]
 8005ebc:	f7fc fdd8 	bl	8002a70 <HAL_TIM_Base_MspInit>
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	2202      	movs	r2, #2
 8005ec4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	681a      	ldr	r2, [r3, #0]
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	3304      	adds	r3, #4
 8005ed0:	4619      	mov	r1, r3
 8005ed2:	4610      	mov	r0, r2
 8005ed4:	f000 fcee 	bl	80068b4 <TIM_Base_SetConfig>
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	2201      	movs	r2, #1
 8005edc:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	2201      	movs	r2, #1
 8005ee4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	2201      	movs	r2, #1
 8005eec:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005ef0:	687b      	ldr	r3, [r7, #4]
 8005ef2:	2201      	movs	r2, #1
 8005ef4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005ef8:	687b      	ldr	r3, [r7, #4]
 8005efa:	2201      	movs	r2, #1
 8005efc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	2201      	movs	r2, #1
 8005f04:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	2201      	movs	r2, #1
 8005f0c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	2201      	movs	r2, #1
 8005f14:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	2201      	movs	r2, #1
 8005f1c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005f20:	687b      	ldr	r3, [r7, #4]
 8005f22:	2201      	movs	r2, #1
 8005f24:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	2201      	movs	r2, #1
 8005f2c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	2201      	movs	r2, #1
 8005f34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f38:	2300      	movs	r3, #0
 8005f3a:	4618      	mov	r0, r3
 8005f3c:	3708      	adds	r7, #8
 8005f3e:	46bd      	mov	sp, r7
 8005f40:	bd80      	pop	{r7, pc}
	...

08005f44 <HAL_TIM_Base_Start_IT>:
 8005f44:	b480      	push	{r7}
 8005f46:	b085      	sub	sp, #20
 8005f48:	af00      	add	r7, sp, #0
 8005f4a:	6078      	str	r0, [r7, #4]
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005f52:	b2db      	uxtb	r3, r3
 8005f54:	2b01      	cmp	r3, #1
 8005f56:	d001      	beq.n	8005f5c <HAL_TIM_Base_Start_IT+0x18>
 8005f58:	2301      	movs	r3, #1
 8005f5a:	e03b      	b.n	8005fd4 <HAL_TIM_Base_Start_IT+0x90>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	2202      	movs	r2, #2
 8005f60:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005f64:	687b      	ldr	r3, [r7, #4]
 8005f66:	681b      	ldr	r3, [r3, #0]
 8005f68:	68da      	ldr	r2, [r3, #12]
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	681b      	ldr	r3, [r3, #0]
 8005f6e:	f042 0201 	orr.w	r2, r2, #1
 8005f72:	60da      	str	r2, [r3, #12]
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	681b      	ldr	r3, [r3, #0]
 8005f78:	4a19      	ldr	r2, [pc, #100]	; (8005fe0 <HAL_TIM_Base_Start_IT+0x9c>)
 8005f7a:	4293      	cmp	r3, r2
 8005f7c:	d009      	beq.n	8005f92 <HAL_TIM_Base_Start_IT+0x4e>
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005f86:	d004      	beq.n	8005f92 <HAL_TIM_Base_Start_IT+0x4e>
 8005f88:	687b      	ldr	r3, [r7, #4]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	4a15      	ldr	r2, [pc, #84]	; (8005fe4 <HAL_TIM_Base_Start_IT+0xa0>)
 8005f8e:	4293      	cmp	r3, r2
 8005f90:	d115      	bne.n	8005fbe <HAL_TIM_Base_Start_IT+0x7a>
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	689a      	ldr	r2, [r3, #8]
 8005f98:	4b13      	ldr	r3, [pc, #76]	; (8005fe8 <HAL_TIM_Base_Start_IT+0xa4>)
 8005f9a:	4013      	ands	r3, r2
 8005f9c:	60fb      	str	r3, [r7, #12]
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	2b06      	cmp	r3, #6
 8005fa2:	d015      	beq.n	8005fd0 <HAL_TIM_Base_Start_IT+0x8c>
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005faa:	d011      	beq.n	8005fd0 <HAL_TIM_Base_Start_IT+0x8c>
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	681b      	ldr	r3, [r3, #0]
 8005fb0:	681a      	ldr	r2, [r3, #0]
 8005fb2:	687b      	ldr	r3, [r7, #4]
 8005fb4:	681b      	ldr	r3, [r3, #0]
 8005fb6:	f042 0201 	orr.w	r2, r2, #1
 8005fba:	601a      	str	r2, [r3, #0]
 8005fbc:	e008      	b.n	8005fd0 <HAL_TIM_Base_Start_IT+0x8c>
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	681a      	ldr	r2, [r3, #0]
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	f042 0201 	orr.w	r2, r2, #1
 8005fcc:	601a      	str	r2, [r3, #0]
 8005fce:	e000      	b.n	8005fd2 <HAL_TIM_Base_Start_IT+0x8e>
 8005fd0:	bf00      	nop
 8005fd2:	2300      	movs	r3, #0
 8005fd4:	4618      	mov	r0, r3
 8005fd6:	3714      	adds	r7, #20
 8005fd8:	46bd      	mov	sp, r7
 8005fda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fde:	4770      	bx	lr
 8005fe0:	40012c00 	.word	0x40012c00
 8005fe4:	40014000 	.word	0x40014000
 8005fe8:	00010007 	.word	0x00010007

08005fec <HAL_TIM_OC_Init>:
 8005fec:	b580      	push	{r7, lr}
 8005fee:	b082      	sub	sp, #8
 8005ff0:	af00      	add	r7, sp, #0
 8005ff2:	6078      	str	r0, [r7, #4]
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	2b00      	cmp	r3, #0
 8005ff8:	d101      	bne.n	8005ffe <HAL_TIM_OC_Init+0x12>
 8005ffa:	2301      	movs	r3, #1
 8005ffc:	e049      	b.n	8006092 <HAL_TIM_OC_Init+0xa6>
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006004:	b2db      	uxtb	r3, r3
 8006006:	2b00      	cmp	r3, #0
 8006008:	d106      	bne.n	8006018 <HAL_TIM_OC_Init+0x2c>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	2200      	movs	r2, #0
 800600e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006012:	6878      	ldr	r0, [r7, #4]
 8006014:	f7fc fd08 	bl	8002a28 <HAL_TIM_OC_MspInit>
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	2202      	movs	r2, #2
 800601c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	681a      	ldr	r2, [r3, #0]
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	3304      	adds	r3, #4
 8006028:	4619      	mov	r1, r3
 800602a:	4610      	mov	r0, r2
 800602c:	f000 fc42 	bl	80068b4 <TIM_Base_SetConfig>
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	2201      	movs	r2, #1
 8006034:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	2201      	movs	r2, #1
 800603c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	2201      	movs	r2, #1
 8006044:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006048:	687b      	ldr	r3, [r7, #4]
 800604a:	2201      	movs	r2, #1
 800604c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	2201      	movs	r2, #1
 8006054:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	2201      	movs	r2, #1
 800605c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	2201      	movs	r2, #1
 8006064:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	2201      	movs	r2, #1
 800606c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	2201      	movs	r2, #1
 8006074:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	2201      	movs	r2, #1
 800607c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	2201      	movs	r2, #1
 8006084:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8006088:	687b      	ldr	r3, [r7, #4]
 800608a:	2201      	movs	r2, #1
 800608c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006090:	2300      	movs	r3, #0
 8006092:	4618      	mov	r0, r3
 8006094:	3708      	adds	r7, #8
 8006096:	46bd      	mov	sp, r7
 8006098:	bd80      	pop	{r7, pc}

0800609a <HAL_TIM_PWM_Init>:
 800609a:	b580      	push	{r7, lr}
 800609c:	b082      	sub	sp, #8
 800609e:	af00      	add	r7, sp, #0
 80060a0:	6078      	str	r0, [r7, #4]
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d101      	bne.n	80060ac <HAL_TIM_PWM_Init+0x12>
 80060a8:	2301      	movs	r3, #1
 80060aa:	e049      	b.n	8006140 <HAL_TIM_PWM_Init+0xa6>
 80060ac:	687b      	ldr	r3, [r7, #4]
 80060ae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80060b2:	b2db      	uxtb	r3, r3
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d106      	bne.n	80060c6 <HAL_TIM_PWM_Init+0x2c>
 80060b8:	687b      	ldr	r3, [r7, #4]
 80060ba:	2200      	movs	r2, #0
 80060bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80060c0:	6878      	ldr	r0, [r7, #4]
 80060c2:	f7fc fc91 	bl	80029e8 <HAL_TIM_PWM_MspInit>
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	2202      	movs	r2, #2
 80060ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80060ce:	687b      	ldr	r3, [r7, #4]
 80060d0:	681a      	ldr	r2, [r3, #0]
 80060d2:	687b      	ldr	r3, [r7, #4]
 80060d4:	3304      	adds	r3, #4
 80060d6:	4619      	mov	r1, r3
 80060d8:	4610      	mov	r0, r2
 80060da:	f000 fbeb 	bl	80068b4 <TIM_Base_SetConfig>
 80060de:	687b      	ldr	r3, [r7, #4]
 80060e0:	2201      	movs	r2, #1
 80060e2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	2201      	movs	r2, #1
 80060ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	2201      	movs	r2, #1
 80060f2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	2201      	movs	r2, #1
 80060fa:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80060fe:	687b      	ldr	r3, [r7, #4]
 8006100:	2201      	movs	r2, #1
 8006102:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	2201      	movs	r2, #1
 800610a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	2201      	movs	r2, #1
 8006112:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	2201      	movs	r2, #1
 800611a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	2201      	movs	r2, #1
 8006122:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	2201      	movs	r2, #1
 800612a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800612e:	687b      	ldr	r3, [r7, #4]
 8006130:	2201      	movs	r2, #1
 8006132:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	2201      	movs	r2, #1
 800613a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800613e:	2300      	movs	r3, #0
 8006140:	4618      	mov	r0, r3
 8006142:	3708      	adds	r7, #8
 8006144:	46bd      	mov	sp, r7
 8006146:	bd80      	pop	{r7, pc}

08006148 <HAL_TIM_PWM_Start>:
 8006148:	b580      	push	{r7, lr}
 800614a:	b084      	sub	sp, #16
 800614c:	af00      	add	r7, sp, #0
 800614e:	6078      	str	r0, [r7, #4]
 8006150:	6039      	str	r1, [r7, #0]
 8006152:	683b      	ldr	r3, [r7, #0]
 8006154:	2b00      	cmp	r3, #0
 8006156:	d109      	bne.n	800616c <HAL_TIM_PWM_Start+0x24>
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800615e:	b2db      	uxtb	r3, r3
 8006160:	2b01      	cmp	r3, #1
 8006162:	bf14      	ite	ne
 8006164:	2301      	movne	r3, #1
 8006166:	2300      	moveq	r3, #0
 8006168:	b2db      	uxtb	r3, r3
 800616a:	e03c      	b.n	80061e6 <HAL_TIM_PWM_Start+0x9e>
 800616c:	683b      	ldr	r3, [r7, #0]
 800616e:	2b04      	cmp	r3, #4
 8006170:	d109      	bne.n	8006186 <HAL_TIM_PWM_Start+0x3e>
 8006172:	687b      	ldr	r3, [r7, #4]
 8006174:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006178:	b2db      	uxtb	r3, r3
 800617a:	2b01      	cmp	r3, #1
 800617c:	bf14      	ite	ne
 800617e:	2301      	movne	r3, #1
 8006180:	2300      	moveq	r3, #0
 8006182:	b2db      	uxtb	r3, r3
 8006184:	e02f      	b.n	80061e6 <HAL_TIM_PWM_Start+0x9e>
 8006186:	683b      	ldr	r3, [r7, #0]
 8006188:	2b08      	cmp	r3, #8
 800618a:	d109      	bne.n	80061a0 <HAL_TIM_PWM_Start+0x58>
 800618c:	687b      	ldr	r3, [r7, #4]
 800618e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006192:	b2db      	uxtb	r3, r3
 8006194:	2b01      	cmp	r3, #1
 8006196:	bf14      	ite	ne
 8006198:	2301      	movne	r3, #1
 800619a:	2300      	moveq	r3, #0
 800619c:	b2db      	uxtb	r3, r3
 800619e:	e022      	b.n	80061e6 <HAL_TIM_PWM_Start+0x9e>
 80061a0:	683b      	ldr	r3, [r7, #0]
 80061a2:	2b0c      	cmp	r3, #12
 80061a4:	d109      	bne.n	80061ba <HAL_TIM_PWM_Start+0x72>
 80061a6:	687b      	ldr	r3, [r7, #4]
 80061a8:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80061ac:	b2db      	uxtb	r3, r3
 80061ae:	2b01      	cmp	r3, #1
 80061b0:	bf14      	ite	ne
 80061b2:	2301      	movne	r3, #1
 80061b4:	2300      	moveq	r3, #0
 80061b6:	b2db      	uxtb	r3, r3
 80061b8:	e015      	b.n	80061e6 <HAL_TIM_PWM_Start+0x9e>
 80061ba:	683b      	ldr	r3, [r7, #0]
 80061bc:	2b10      	cmp	r3, #16
 80061be:	d109      	bne.n	80061d4 <HAL_TIM_PWM_Start+0x8c>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80061c6:	b2db      	uxtb	r3, r3
 80061c8:	2b01      	cmp	r3, #1
 80061ca:	bf14      	ite	ne
 80061cc:	2301      	movne	r3, #1
 80061ce:	2300      	moveq	r3, #0
 80061d0:	b2db      	uxtb	r3, r3
 80061d2:	e008      	b.n	80061e6 <HAL_TIM_PWM_Start+0x9e>
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 80061da:	b2db      	uxtb	r3, r3
 80061dc:	2b01      	cmp	r3, #1
 80061de:	bf14      	ite	ne
 80061e0:	2301      	movne	r3, #1
 80061e2:	2300      	moveq	r3, #0
 80061e4:	b2db      	uxtb	r3, r3
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d001      	beq.n	80061ee <HAL_TIM_PWM_Start+0xa6>
 80061ea:	2301      	movs	r3, #1
 80061ec:	e07e      	b.n	80062ec <HAL_TIM_PWM_Start+0x1a4>
 80061ee:	683b      	ldr	r3, [r7, #0]
 80061f0:	2b00      	cmp	r3, #0
 80061f2:	d104      	bne.n	80061fe <HAL_TIM_PWM_Start+0xb6>
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	2202      	movs	r2, #2
 80061f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80061fc:	e023      	b.n	8006246 <HAL_TIM_PWM_Start+0xfe>
 80061fe:	683b      	ldr	r3, [r7, #0]
 8006200:	2b04      	cmp	r3, #4
 8006202:	d104      	bne.n	800620e <HAL_TIM_PWM_Start+0xc6>
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	2202      	movs	r2, #2
 8006208:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800620c:	e01b      	b.n	8006246 <HAL_TIM_PWM_Start+0xfe>
 800620e:	683b      	ldr	r3, [r7, #0]
 8006210:	2b08      	cmp	r3, #8
 8006212:	d104      	bne.n	800621e <HAL_TIM_PWM_Start+0xd6>
 8006214:	687b      	ldr	r3, [r7, #4]
 8006216:	2202      	movs	r2, #2
 8006218:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800621c:	e013      	b.n	8006246 <HAL_TIM_PWM_Start+0xfe>
 800621e:	683b      	ldr	r3, [r7, #0]
 8006220:	2b0c      	cmp	r3, #12
 8006222:	d104      	bne.n	800622e <HAL_TIM_PWM_Start+0xe6>
 8006224:	687b      	ldr	r3, [r7, #4]
 8006226:	2202      	movs	r2, #2
 8006228:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800622c:	e00b      	b.n	8006246 <HAL_TIM_PWM_Start+0xfe>
 800622e:	683b      	ldr	r3, [r7, #0]
 8006230:	2b10      	cmp	r3, #16
 8006232:	d104      	bne.n	800623e <HAL_TIM_PWM_Start+0xf6>
 8006234:	687b      	ldr	r3, [r7, #4]
 8006236:	2202      	movs	r2, #2
 8006238:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800623c:	e003      	b.n	8006246 <HAL_TIM_PWM_Start+0xfe>
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	2202      	movs	r2, #2
 8006242:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	2201      	movs	r2, #1
 800624c:	6839      	ldr	r1, [r7, #0]
 800624e:	4618      	mov	r0, r3
 8006250:	f000 fe12 	bl	8006e78 <TIM_CCxChannelCmd>
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	4a26      	ldr	r2, [pc, #152]	; (80062f4 <HAL_TIM_PWM_Start+0x1ac>)
 800625a:	4293      	cmp	r3, r2
 800625c:	d009      	beq.n	8006272 <HAL_TIM_PWM_Start+0x12a>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	4a25      	ldr	r2, [pc, #148]	; (80062f8 <HAL_TIM_PWM_Start+0x1b0>)
 8006264:	4293      	cmp	r3, r2
 8006266:	d004      	beq.n	8006272 <HAL_TIM_PWM_Start+0x12a>
 8006268:	687b      	ldr	r3, [r7, #4]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	4a23      	ldr	r2, [pc, #140]	; (80062fc <HAL_TIM_PWM_Start+0x1b4>)
 800626e:	4293      	cmp	r3, r2
 8006270:	d101      	bne.n	8006276 <HAL_TIM_PWM_Start+0x12e>
 8006272:	2301      	movs	r3, #1
 8006274:	e000      	b.n	8006278 <HAL_TIM_PWM_Start+0x130>
 8006276:	2300      	movs	r3, #0
 8006278:	2b00      	cmp	r3, #0
 800627a:	d007      	beq.n	800628c <HAL_TIM_PWM_Start+0x144>
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800628a:	645a      	str	r2, [r3, #68]	; 0x44
 800628c:	687b      	ldr	r3, [r7, #4]
 800628e:	681b      	ldr	r3, [r3, #0]
 8006290:	4a18      	ldr	r2, [pc, #96]	; (80062f4 <HAL_TIM_PWM_Start+0x1ac>)
 8006292:	4293      	cmp	r3, r2
 8006294:	d009      	beq.n	80062aa <HAL_TIM_PWM_Start+0x162>
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800629e:	d004      	beq.n	80062aa <HAL_TIM_PWM_Start+0x162>
 80062a0:	687b      	ldr	r3, [r7, #4]
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	4a14      	ldr	r2, [pc, #80]	; (80062f8 <HAL_TIM_PWM_Start+0x1b0>)
 80062a6:	4293      	cmp	r3, r2
 80062a8:	d115      	bne.n	80062d6 <HAL_TIM_PWM_Start+0x18e>
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	689a      	ldr	r2, [r3, #8]
 80062b0:	4b13      	ldr	r3, [pc, #76]	; (8006300 <HAL_TIM_PWM_Start+0x1b8>)
 80062b2:	4013      	ands	r3, r2
 80062b4:	60fb      	str	r3, [r7, #12]
 80062b6:	68fb      	ldr	r3, [r7, #12]
 80062b8:	2b06      	cmp	r3, #6
 80062ba:	d015      	beq.n	80062e8 <HAL_TIM_PWM_Start+0x1a0>
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80062c2:	d011      	beq.n	80062e8 <HAL_TIM_PWM_Start+0x1a0>
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	681a      	ldr	r2, [r3, #0]
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	f042 0201 	orr.w	r2, r2, #1
 80062d2:	601a      	str	r2, [r3, #0]
 80062d4:	e008      	b.n	80062e8 <HAL_TIM_PWM_Start+0x1a0>
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	681a      	ldr	r2, [r3, #0]
 80062dc:	687b      	ldr	r3, [r7, #4]
 80062de:	681b      	ldr	r3, [r3, #0]
 80062e0:	f042 0201 	orr.w	r2, r2, #1
 80062e4:	601a      	str	r2, [r3, #0]
 80062e6:	e000      	b.n	80062ea <HAL_TIM_PWM_Start+0x1a2>
 80062e8:	bf00      	nop
 80062ea:	2300      	movs	r3, #0
 80062ec:	4618      	mov	r0, r3
 80062ee:	3710      	adds	r7, #16
 80062f0:	46bd      	mov	sp, r7
 80062f2:	bd80      	pop	{r7, pc}
 80062f4:	40012c00 	.word	0x40012c00
 80062f8:	40014000 	.word	0x40014000
 80062fc:	40014400 	.word	0x40014400
 8006300:	00010007 	.word	0x00010007

08006304 <HAL_TIM_IRQHandler>:
 8006304:	b580      	push	{r7, lr}
 8006306:	b082      	sub	sp, #8
 8006308:	af00      	add	r7, sp, #0
 800630a:	6078      	str	r0, [r7, #4]
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	691b      	ldr	r3, [r3, #16]
 8006312:	f003 0302 	and.w	r3, r3, #2
 8006316:	2b02      	cmp	r3, #2
 8006318:	d122      	bne.n	8006360 <HAL_TIM_IRQHandler+0x5c>
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	68db      	ldr	r3, [r3, #12]
 8006320:	f003 0302 	and.w	r3, r3, #2
 8006324:	2b02      	cmp	r3, #2
 8006326:	d11b      	bne.n	8006360 <HAL_TIM_IRQHandler+0x5c>
 8006328:	687b      	ldr	r3, [r7, #4]
 800632a:	681b      	ldr	r3, [r3, #0]
 800632c:	f06f 0202 	mvn.w	r2, #2
 8006330:	611a      	str	r2, [r3, #16]
 8006332:	687b      	ldr	r3, [r7, #4]
 8006334:	2201      	movs	r2, #1
 8006336:	771a      	strb	r2, [r3, #28]
 8006338:	687b      	ldr	r3, [r7, #4]
 800633a:	681b      	ldr	r3, [r3, #0]
 800633c:	699b      	ldr	r3, [r3, #24]
 800633e:	f003 0303 	and.w	r3, r3, #3
 8006342:	2b00      	cmp	r3, #0
 8006344:	d003      	beq.n	800634e <HAL_TIM_IRQHandler+0x4a>
 8006346:	6878      	ldr	r0, [r7, #4]
 8006348:	f000 fa96 	bl	8006878 <HAL_TIM_IC_CaptureCallback>
 800634c:	e005      	b.n	800635a <HAL_TIM_IRQHandler+0x56>
 800634e:	6878      	ldr	r0, [r7, #4]
 8006350:	f000 fa88 	bl	8006864 <HAL_TIM_OC_DelayElapsedCallback>
 8006354:	6878      	ldr	r0, [r7, #4]
 8006356:	f000 fa99 	bl	800688c <HAL_TIM_PWM_PulseFinishedCallback>
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	2200      	movs	r2, #0
 800635e:	771a      	strb	r2, [r3, #28]
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	681b      	ldr	r3, [r3, #0]
 8006364:	691b      	ldr	r3, [r3, #16]
 8006366:	f003 0304 	and.w	r3, r3, #4
 800636a:	2b04      	cmp	r3, #4
 800636c:	d122      	bne.n	80063b4 <HAL_TIM_IRQHandler+0xb0>
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	68db      	ldr	r3, [r3, #12]
 8006374:	f003 0304 	and.w	r3, r3, #4
 8006378:	2b04      	cmp	r3, #4
 800637a:	d11b      	bne.n	80063b4 <HAL_TIM_IRQHandler+0xb0>
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	f06f 0204 	mvn.w	r2, #4
 8006384:	611a      	str	r2, [r3, #16]
 8006386:	687b      	ldr	r3, [r7, #4]
 8006388:	2202      	movs	r2, #2
 800638a:	771a      	strb	r2, [r3, #28]
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	699b      	ldr	r3, [r3, #24]
 8006392:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006396:	2b00      	cmp	r3, #0
 8006398:	d003      	beq.n	80063a2 <HAL_TIM_IRQHandler+0x9e>
 800639a:	6878      	ldr	r0, [r7, #4]
 800639c:	f000 fa6c 	bl	8006878 <HAL_TIM_IC_CaptureCallback>
 80063a0:	e005      	b.n	80063ae <HAL_TIM_IRQHandler+0xaa>
 80063a2:	6878      	ldr	r0, [r7, #4]
 80063a4:	f000 fa5e 	bl	8006864 <HAL_TIM_OC_DelayElapsedCallback>
 80063a8:	6878      	ldr	r0, [r7, #4]
 80063aa:	f000 fa6f 	bl	800688c <HAL_TIM_PWM_PulseFinishedCallback>
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	2200      	movs	r2, #0
 80063b2:	771a      	strb	r2, [r3, #28]
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	691b      	ldr	r3, [r3, #16]
 80063ba:	f003 0308 	and.w	r3, r3, #8
 80063be:	2b08      	cmp	r3, #8
 80063c0:	d122      	bne.n	8006408 <HAL_TIM_IRQHandler+0x104>
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	68db      	ldr	r3, [r3, #12]
 80063c8:	f003 0308 	and.w	r3, r3, #8
 80063cc:	2b08      	cmp	r3, #8
 80063ce:	d11b      	bne.n	8006408 <HAL_TIM_IRQHandler+0x104>
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	f06f 0208 	mvn.w	r2, #8
 80063d8:	611a      	str	r2, [r3, #16]
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	2204      	movs	r2, #4
 80063de:	771a      	strb	r2, [r3, #28]
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	681b      	ldr	r3, [r3, #0]
 80063e4:	69db      	ldr	r3, [r3, #28]
 80063e6:	f003 0303 	and.w	r3, r3, #3
 80063ea:	2b00      	cmp	r3, #0
 80063ec:	d003      	beq.n	80063f6 <HAL_TIM_IRQHandler+0xf2>
 80063ee:	6878      	ldr	r0, [r7, #4]
 80063f0:	f000 fa42 	bl	8006878 <HAL_TIM_IC_CaptureCallback>
 80063f4:	e005      	b.n	8006402 <HAL_TIM_IRQHandler+0xfe>
 80063f6:	6878      	ldr	r0, [r7, #4]
 80063f8:	f000 fa34 	bl	8006864 <HAL_TIM_OC_DelayElapsedCallback>
 80063fc:	6878      	ldr	r0, [r7, #4]
 80063fe:	f000 fa45 	bl	800688c <HAL_TIM_PWM_PulseFinishedCallback>
 8006402:	687b      	ldr	r3, [r7, #4]
 8006404:	2200      	movs	r2, #0
 8006406:	771a      	strb	r2, [r3, #28]
 8006408:	687b      	ldr	r3, [r7, #4]
 800640a:	681b      	ldr	r3, [r3, #0]
 800640c:	691b      	ldr	r3, [r3, #16]
 800640e:	f003 0310 	and.w	r3, r3, #16
 8006412:	2b10      	cmp	r3, #16
 8006414:	d122      	bne.n	800645c <HAL_TIM_IRQHandler+0x158>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	68db      	ldr	r3, [r3, #12]
 800641c:	f003 0310 	and.w	r3, r3, #16
 8006420:	2b10      	cmp	r3, #16
 8006422:	d11b      	bne.n	800645c <HAL_TIM_IRQHandler+0x158>
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	f06f 0210 	mvn.w	r2, #16
 800642c:	611a      	str	r2, [r3, #16]
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	2208      	movs	r2, #8
 8006432:	771a      	strb	r2, [r3, #28]
 8006434:	687b      	ldr	r3, [r7, #4]
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	69db      	ldr	r3, [r3, #28]
 800643a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800643e:	2b00      	cmp	r3, #0
 8006440:	d003      	beq.n	800644a <HAL_TIM_IRQHandler+0x146>
 8006442:	6878      	ldr	r0, [r7, #4]
 8006444:	f000 fa18 	bl	8006878 <HAL_TIM_IC_CaptureCallback>
 8006448:	e005      	b.n	8006456 <HAL_TIM_IRQHandler+0x152>
 800644a:	6878      	ldr	r0, [r7, #4]
 800644c:	f000 fa0a 	bl	8006864 <HAL_TIM_OC_DelayElapsedCallback>
 8006450:	6878      	ldr	r0, [r7, #4]
 8006452:	f000 fa1b 	bl	800688c <HAL_TIM_PWM_PulseFinishedCallback>
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	2200      	movs	r2, #0
 800645a:	771a      	strb	r2, [r3, #28]
 800645c:	687b      	ldr	r3, [r7, #4]
 800645e:	681b      	ldr	r3, [r3, #0]
 8006460:	691b      	ldr	r3, [r3, #16]
 8006462:	f003 0301 	and.w	r3, r3, #1
 8006466:	2b01      	cmp	r3, #1
 8006468:	d10e      	bne.n	8006488 <HAL_TIM_IRQHandler+0x184>
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	68db      	ldr	r3, [r3, #12]
 8006470:	f003 0301 	and.w	r3, r3, #1
 8006474:	2b01      	cmp	r3, #1
 8006476:	d107      	bne.n	8006488 <HAL_TIM_IRQHandler+0x184>
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	f06f 0201 	mvn.w	r2, #1
 8006480:	611a      	str	r2, [r3, #16]
 8006482:	6878      	ldr	r0, [r7, #4]
 8006484:	f000 f9e4 	bl	8006850 <HAL_TIM_PeriodElapsedCallback>
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	681b      	ldr	r3, [r3, #0]
 800648c:	691b      	ldr	r3, [r3, #16]
 800648e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006492:	2b80      	cmp	r3, #128	; 0x80
 8006494:	d10e      	bne.n	80064b4 <HAL_TIM_IRQHandler+0x1b0>
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	681b      	ldr	r3, [r3, #0]
 800649a:	68db      	ldr	r3, [r3, #12]
 800649c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064a0:	2b80      	cmp	r3, #128	; 0x80
 80064a2:	d107      	bne.n	80064b4 <HAL_TIM_IRQHandler+0x1b0>
 80064a4:	687b      	ldr	r3, [r7, #4]
 80064a6:	681b      	ldr	r3, [r3, #0]
 80064a8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80064ac:	611a      	str	r2, [r3, #16]
 80064ae:	6878      	ldr	r0, [r7, #4]
 80064b0:	f000 fdf0 	bl	8007094 <HAL_TIMEx_BreakCallback>
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	691b      	ldr	r3, [r3, #16]
 80064ba:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80064be:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80064c2:	d10e      	bne.n	80064e2 <HAL_TIM_IRQHandler+0x1de>
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	68db      	ldr	r3, [r3, #12]
 80064ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064ce:	2b80      	cmp	r3, #128	; 0x80
 80064d0:	d107      	bne.n	80064e2 <HAL_TIM_IRQHandler+0x1de>
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80064da:	611a      	str	r2, [r3, #16]
 80064dc:	6878      	ldr	r0, [r7, #4]
 80064de:	f000 fde3 	bl	80070a8 <HAL_TIMEx_Break2Callback>
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	691b      	ldr	r3, [r3, #16]
 80064e8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80064ec:	2b40      	cmp	r3, #64	; 0x40
 80064ee:	d10e      	bne.n	800650e <HAL_TIM_IRQHandler+0x20a>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	68db      	ldr	r3, [r3, #12]
 80064f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80064fa:	2b40      	cmp	r3, #64	; 0x40
 80064fc:	d107      	bne.n	800650e <HAL_TIM_IRQHandler+0x20a>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	681b      	ldr	r3, [r3, #0]
 8006502:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006506:	611a      	str	r2, [r3, #16]
 8006508:	6878      	ldr	r0, [r7, #4]
 800650a:	f000 f9c9 	bl	80068a0 <HAL_TIM_TriggerCallback>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	681b      	ldr	r3, [r3, #0]
 8006512:	691b      	ldr	r3, [r3, #16]
 8006514:	f003 0320 	and.w	r3, r3, #32
 8006518:	2b20      	cmp	r3, #32
 800651a:	d10e      	bne.n	800653a <HAL_TIM_IRQHandler+0x236>
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	681b      	ldr	r3, [r3, #0]
 8006520:	68db      	ldr	r3, [r3, #12]
 8006522:	f003 0320 	and.w	r3, r3, #32
 8006526:	2b20      	cmp	r3, #32
 8006528:	d107      	bne.n	800653a <HAL_TIM_IRQHandler+0x236>
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	f06f 0220 	mvn.w	r2, #32
 8006532:	611a      	str	r2, [r3, #16]
 8006534:	6878      	ldr	r0, [r7, #4]
 8006536:	f000 fda3 	bl	8007080 <HAL_TIMEx_CommutCallback>
 800653a:	bf00      	nop
 800653c:	3708      	adds	r7, #8
 800653e:	46bd      	mov	sp, r7
 8006540:	bd80      	pop	{r7, pc}
	...

08006544 <HAL_TIM_OC_ConfigChannel>:
 8006544:	b580      	push	{r7, lr}
 8006546:	b084      	sub	sp, #16
 8006548:	af00      	add	r7, sp, #0
 800654a:	60f8      	str	r0, [r7, #12]
 800654c:	60b9      	str	r1, [r7, #8]
 800654e:	607a      	str	r2, [r7, #4]
 8006550:	68fb      	ldr	r3, [r7, #12]
 8006552:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006556:	2b01      	cmp	r3, #1
 8006558:	d101      	bne.n	800655e <HAL_TIM_OC_ConfigChannel+0x1a>
 800655a:	2302      	movs	r3, #2
 800655c:	e064      	b.n	8006628 <HAL_TIM_OC_ConfigChannel+0xe4>
 800655e:	68fb      	ldr	r3, [r7, #12]
 8006560:	2201      	movs	r2, #1
 8006562:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	2b14      	cmp	r3, #20
 800656a:	d857      	bhi.n	800661c <HAL_TIM_OC_ConfigChannel+0xd8>
 800656c:	a201      	add	r2, pc, #4	; (adr r2, 8006574 <HAL_TIM_OC_ConfigChannel+0x30>)
 800656e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006572:	bf00      	nop
 8006574:	080065c9 	.word	0x080065c9
 8006578:	0800661d 	.word	0x0800661d
 800657c:	0800661d 	.word	0x0800661d
 8006580:	0800661d 	.word	0x0800661d
 8006584:	080065d7 	.word	0x080065d7
 8006588:	0800661d 	.word	0x0800661d
 800658c:	0800661d 	.word	0x0800661d
 8006590:	0800661d 	.word	0x0800661d
 8006594:	080065e5 	.word	0x080065e5
 8006598:	0800661d 	.word	0x0800661d
 800659c:	0800661d 	.word	0x0800661d
 80065a0:	0800661d 	.word	0x0800661d
 80065a4:	080065f3 	.word	0x080065f3
 80065a8:	0800661d 	.word	0x0800661d
 80065ac:	0800661d 	.word	0x0800661d
 80065b0:	0800661d 	.word	0x0800661d
 80065b4:	08006601 	.word	0x08006601
 80065b8:	0800661d 	.word	0x0800661d
 80065bc:	0800661d 	.word	0x0800661d
 80065c0:	0800661d 	.word	0x0800661d
 80065c4:	0800660f 	.word	0x0800660f
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	681b      	ldr	r3, [r3, #0]
 80065cc:	68b9      	ldr	r1, [r7, #8]
 80065ce:	4618      	mov	r0, r3
 80065d0:	f000 f9d4 	bl	800697c <TIM_OC1_SetConfig>
 80065d4:	e023      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	68b9      	ldr	r1, [r7, #8]
 80065dc:	4618      	mov	r0, r3
 80065de:	f000 fa49 	bl	8006a74 <TIM_OC2_SetConfig>
 80065e2:	e01c      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 80065e4:	68fb      	ldr	r3, [r7, #12]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	68b9      	ldr	r1, [r7, #8]
 80065ea:	4618      	mov	r0, r3
 80065ec:	f000 fabc 	bl	8006b68 <TIM_OC3_SetConfig>
 80065f0:	e015      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 80065f2:	68fb      	ldr	r3, [r7, #12]
 80065f4:	681b      	ldr	r3, [r3, #0]
 80065f6:	68b9      	ldr	r1, [r7, #8]
 80065f8:	4618      	mov	r0, r3
 80065fa:	f000 fb2d 	bl	8006c58 <TIM_OC4_SetConfig>
 80065fe:	e00e      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 8006600:	68fb      	ldr	r3, [r7, #12]
 8006602:	681b      	ldr	r3, [r3, #0]
 8006604:	68b9      	ldr	r1, [r7, #8]
 8006606:	4618      	mov	r0, r3
 8006608:	f000 fb84 	bl	8006d14 <TIM_OC5_SetConfig>
 800660c:	e007      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 800660e:	68fb      	ldr	r3, [r7, #12]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	68b9      	ldr	r1, [r7, #8]
 8006614:	4618      	mov	r0, r3
 8006616:	f000 fbd5 	bl	8006dc4 <TIM_OC6_SetConfig>
 800661a:	e000      	b.n	800661e <HAL_TIM_OC_ConfigChannel+0xda>
 800661c:	bf00      	nop
 800661e:	68fb      	ldr	r3, [r7, #12]
 8006620:	2200      	movs	r2, #0
 8006622:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006626:	2300      	movs	r3, #0
 8006628:	4618      	mov	r0, r3
 800662a:	3710      	adds	r7, #16
 800662c:	46bd      	mov	sp, r7
 800662e:	bd80      	pop	{r7, pc}

08006630 <HAL_TIM_PWM_ConfigChannel>:
 8006630:	b580      	push	{r7, lr}
 8006632:	b084      	sub	sp, #16
 8006634:	af00      	add	r7, sp, #0
 8006636:	60f8      	str	r0, [r7, #12]
 8006638:	60b9      	str	r1, [r7, #8]
 800663a:	607a      	str	r2, [r7, #4]
 800663c:	68fb      	ldr	r3, [r7, #12]
 800663e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006642:	2b01      	cmp	r3, #1
 8006644:	d101      	bne.n	800664a <HAL_TIM_PWM_ConfigChannel+0x1a>
 8006646:	2302      	movs	r3, #2
 8006648:	e0fd      	b.n	8006846 <HAL_TIM_PWM_ConfigChannel+0x216>
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	2201      	movs	r2, #1
 800664e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006652:	687b      	ldr	r3, [r7, #4]
 8006654:	2b14      	cmp	r3, #20
 8006656:	f200 80f0 	bhi.w	800683a <HAL_TIM_PWM_ConfigChannel+0x20a>
 800665a:	a201      	add	r2, pc, #4	; (adr r2, 8006660 <HAL_TIM_PWM_ConfigChannel+0x30>)
 800665c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006660:	080066b5 	.word	0x080066b5
 8006664:	0800683b 	.word	0x0800683b
 8006668:	0800683b 	.word	0x0800683b
 800666c:	0800683b 	.word	0x0800683b
 8006670:	080066f5 	.word	0x080066f5
 8006674:	0800683b 	.word	0x0800683b
 8006678:	0800683b 	.word	0x0800683b
 800667c:	0800683b 	.word	0x0800683b
 8006680:	08006737 	.word	0x08006737
 8006684:	0800683b 	.word	0x0800683b
 8006688:	0800683b 	.word	0x0800683b
 800668c:	0800683b 	.word	0x0800683b
 8006690:	08006777 	.word	0x08006777
 8006694:	0800683b 	.word	0x0800683b
 8006698:	0800683b 	.word	0x0800683b
 800669c:	0800683b 	.word	0x0800683b
 80066a0:	080067b9 	.word	0x080067b9
 80066a4:	0800683b 	.word	0x0800683b
 80066a8:	0800683b 	.word	0x0800683b
 80066ac:	0800683b 	.word	0x0800683b
 80066b0:	080067f9 	.word	0x080067f9
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	68b9      	ldr	r1, [r7, #8]
 80066ba:	4618      	mov	r0, r3
 80066bc:	f000 f95e 	bl	800697c <TIM_OC1_SetConfig>
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	699a      	ldr	r2, [r3, #24]
 80066c6:	68fb      	ldr	r3, [r7, #12]
 80066c8:	681b      	ldr	r3, [r3, #0]
 80066ca:	f042 0208 	orr.w	r2, r2, #8
 80066ce:	619a      	str	r2, [r3, #24]
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	681b      	ldr	r3, [r3, #0]
 80066d4:	699a      	ldr	r2, [r3, #24]
 80066d6:	68fb      	ldr	r3, [r7, #12]
 80066d8:	681b      	ldr	r3, [r3, #0]
 80066da:	f022 0204 	bic.w	r2, r2, #4
 80066de:	619a      	str	r2, [r3, #24]
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	6999      	ldr	r1, [r3, #24]
 80066e6:	68bb      	ldr	r3, [r7, #8]
 80066e8:	691a      	ldr	r2, [r3, #16]
 80066ea:	68fb      	ldr	r3, [r7, #12]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	430a      	orrs	r2, r1
 80066f0:	619a      	str	r2, [r3, #24]
 80066f2:	e0a3      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	68b9      	ldr	r1, [r7, #8]
 80066fa:	4618      	mov	r0, r3
 80066fc:	f000 f9ba 	bl	8006a74 <TIM_OC2_SetConfig>
 8006700:	68fb      	ldr	r3, [r7, #12]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	699a      	ldr	r2, [r3, #24]
 8006706:	68fb      	ldr	r3, [r7, #12]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800670e:	619a      	str	r2, [r3, #24]
 8006710:	68fb      	ldr	r3, [r7, #12]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	699a      	ldr	r2, [r3, #24]
 8006716:	68fb      	ldr	r3, [r7, #12]
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800671e:	619a      	str	r2, [r3, #24]
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	681b      	ldr	r3, [r3, #0]
 8006724:	6999      	ldr	r1, [r3, #24]
 8006726:	68bb      	ldr	r3, [r7, #8]
 8006728:	691b      	ldr	r3, [r3, #16]
 800672a:	021a      	lsls	r2, r3, #8
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	430a      	orrs	r2, r1
 8006732:	619a      	str	r2, [r3, #24]
 8006734:	e082      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 8006736:	68fb      	ldr	r3, [r7, #12]
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	68b9      	ldr	r1, [r7, #8]
 800673c:	4618      	mov	r0, r3
 800673e:	f000 fa13 	bl	8006b68 <TIM_OC3_SetConfig>
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	681b      	ldr	r3, [r3, #0]
 8006746:	69da      	ldr	r2, [r3, #28]
 8006748:	68fb      	ldr	r3, [r7, #12]
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	f042 0208 	orr.w	r2, r2, #8
 8006750:	61da      	str	r2, [r3, #28]
 8006752:	68fb      	ldr	r3, [r7, #12]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	69da      	ldr	r2, [r3, #28]
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	681b      	ldr	r3, [r3, #0]
 800675c:	f022 0204 	bic.w	r2, r2, #4
 8006760:	61da      	str	r2, [r3, #28]
 8006762:	68fb      	ldr	r3, [r7, #12]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	69d9      	ldr	r1, [r3, #28]
 8006768:	68bb      	ldr	r3, [r7, #8]
 800676a:	691a      	ldr	r2, [r3, #16]
 800676c:	68fb      	ldr	r3, [r7, #12]
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	430a      	orrs	r2, r1
 8006772:	61da      	str	r2, [r3, #28]
 8006774:	e062      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 8006776:	68fb      	ldr	r3, [r7, #12]
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	68b9      	ldr	r1, [r7, #8]
 800677c:	4618      	mov	r0, r3
 800677e:	f000 fa6b 	bl	8006c58 <TIM_OC4_SetConfig>
 8006782:	68fb      	ldr	r3, [r7, #12]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	69da      	ldr	r2, [r3, #28]
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	681b      	ldr	r3, [r3, #0]
 800678c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006790:	61da      	str	r2, [r3, #28]
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	681b      	ldr	r3, [r3, #0]
 8006796:	69da      	ldr	r2, [r3, #28]
 8006798:	68fb      	ldr	r3, [r7, #12]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80067a0:	61da      	str	r2, [r3, #28]
 80067a2:	68fb      	ldr	r3, [r7, #12]
 80067a4:	681b      	ldr	r3, [r3, #0]
 80067a6:	69d9      	ldr	r1, [r3, #28]
 80067a8:	68bb      	ldr	r3, [r7, #8]
 80067aa:	691b      	ldr	r3, [r3, #16]
 80067ac:	021a      	lsls	r2, r3, #8
 80067ae:	68fb      	ldr	r3, [r7, #12]
 80067b0:	681b      	ldr	r3, [r3, #0]
 80067b2:	430a      	orrs	r2, r1
 80067b4:	61da      	str	r2, [r3, #28]
 80067b6:	e041      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 80067b8:	68fb      	ldr	r3, [r7, #12]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	68b9      	ldr	r1, [r7, #8]
 80067be:	4618      	mov	r0, r3
 80067c0:	f000 faa8 	bl	8006d14 <TIM_OC5_SetConfig>
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80067ca:	68fb      	ldr	r3, [r7, #12]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	f042 0208 	orr.w	r2, r2, #8
 80067d2:	655a      	str	r2, [r3, #84]	; 0x54
 80067d4:	68fb      	ldr	r3, [r7, #12]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	681b      	ldr	r3, [r3, #0]
 80067de:	f022 0204 	bic.w	r2, r2, #4
 80067e2:	655a      	str	r2, [r3, #84]	; 0x54
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80067ea:	68bb      	ldr	r3, [r7, #8]
 80067ec:	691a      	ldr	r2, [r3, #16]
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	430a      	orrs	r2, r1
 80067f4:	655a      	str	r2, [r3, #84]	; 0x54
 80067f6:	e021      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	68b9      	ldr	r1, [r7, #8]
 80067fe:	4618      	mov	r0, r3
 8006800:	f000 fae0 	bl	8006dc4 <TIM_OC6_SetConfig>
 8006804:	68fb      	ldr	r3, [r7, #12]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006812:	655a      	str	r2, [r3, #84]	; 0x54
 8006814:	68fb      	ldr	r3, [r7, #12]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800681a:	68fb      	ldr	r3, [r7, #12]
 800681c:	681b      	ldr	r3, [r3, #0]
 800681e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006822:	655a      	str	r2, [r3, #84]	; 0x54
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800682a:	68bb      	ldr	r3, [r7, #8]
 800682c:	691b      	ldr	r3, [r3, #16]
 800682e:	021a      	lsls	r2, r3, #8
 8006830:	68fb      	ldr	r3, [r7, #12]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	430a      	orrs	r2, r1
 8006836:	655a      	str	r2, [r3, #84]	; 0x54
 8006838:	e000      	b.n	800683c <HAL_TIM_PWM_ConfigChannel+0x20c>
 800683a:	bf00      	nop
 800683c:	68fb      	ldr	r3, [r7, #12]
 800683e:	2200      	movs	r2, #0
 8006840:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006844:	2300      	movs	r3, #0
 8006846:	4618      	mov	r0, r3
 8006848:	3710      	adds	r7, #16
 800684a:	46bd      	mov	sp, r7
 800684c:	bd80      	pop	{r7, pc}
 800684e:	bf00      	nop

08006850 <HAL_TIM_PeriodElapsedCallback>:
 8006850:	b480      	push	{r7}
 8006852:	b083      	sub	sp, #12
 8006854:	af00      	add	r7, sp, #0
 8006856:	6078      	str	r0, [r7, #4]
 8006858:	bf00      	nop
 800685a:	370c      	adds	r7, #12
 800685c:	46bd      	mov	sp, r7
 800685e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006862:	4770      	bx	lr

08006864 <HAL_TIM_OC_DelayElapsedCallback>:
 8006864:	b480      	push	{r7}
 8006866:	b083      	sub	sp, #12
 8006868:	af00      	add	r7, sp, #0
 800686a:	6078      	str	r0, [r7, #4]
 800686c:	bf00      	nop
 800686e:	370c      	adds	r7, #12
 8006870:	46bd      	mov	sp, r7
 8006872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006876:	4770      	bx	lr

08006878 <HAL_TIM_IC_CaptureCallback>:
 8006878:	b480      	push	{r7}
 800687a:	b083      	sub	sp, #12
 800687c:	af00      	add	r7, sp, #0
 800687e:	6078      	str	r0, [r7, #4]
 8006880:	bf00      	nop
 8006882:	370c      	adds	r7, #12
 8006884:	46bd      	mov	sp, r7
 8006886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800688a:	4770      	bx	lr

0800688c <HAL_TIM_PWM_PulseFinishedCallback>:
 800688c:	b480      	push	{r7}
 800688e:	b083      	sub	sp, #12
 8006890:	af00      	add	r7, sp, #0
 8006892:	6078      	str	r0, [r7, #4]
 8006894:	bf00      	nop
 8006896:	370c      	adds	r7, #12
 8006898:	46bd      	mov	sp, r7
 800689a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800689e:	4770      	bx	lr

080068a0 <HAL_TIM_TriggerCallback>:
 80068a0:	b480      	push	{r7}
 80068a2:	b083      	sub	sp, #12
 80068a4:	af00      	add	r7, sp, #0
 80068a6:	6078      	str	r0, [r7, #4]
 80068a8:	bf00      	nop
 80068aa:	370c      	adds	r7, #12
 80068ac:	46bd      	mov	sp, r7
 80068ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068b2:	4770      	bx	lr

080068b4 <TIM_Base_SetConfig>:
 80068b4:	b480      	push	{r7}
 80068b6:	b085      	sub	sp, #20
 80068b8:	af00      	add	r7, sp, #0
 80068ba:	6078      	str	r0, [r7, #4]
 80068bc:	6039      	str	r1, [r7, #0]
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	681b      	ldr	r3, [r3, #0]
 80068c2:	60fb      	str	r3, [r7, #12]
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	4a2a      	ldr	r2, [pc, #168]	; (8006970 <TIM_Base_SetConfig+0xbc>)
 80068c8:	4293      	cmp	r3, r2
 80068ca:	d003      	beq.n	80068d4 <TIM_Base_SetConfig+0x20>
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80068d2:	d108      	bne.n	80068e6 <TIM_Base_SetConfig+0x32>
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80068da:	60fb      	str	r3, [r7, #12]
 80068dc:	683b      	ldr	r3, [r7, #0]
 80068de:	685b      	ldr	r3, [r3, #4]
 80068e0:	68fa      	ldr	r2, [r7, #12]
 80068e2:	4313      	orrs	r3, r2
 80068e4:	60fb      	str	r3, [r7, #12]
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	4a21      	ldr	r2, [pc, #132]	; (8006970 <TIM_Base_SetConfig+0xbc>)
 80068ea:	4293      	cmp	r3, r2
 80068ec:	d00b      	beq.n	8006906 <TIM_Base_SetConfig+0x52>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80068f4:	d007      	beq.n	8006906 <TIM_Base_SetConfig+0x52>
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	4a1e      	ldr	r2, [pc, #120]	; (8006974 <TIM_Base_SetConfig+0xc0>)
 80068fa:	4293      	cmp	r3, r2
 80068fc:	d003      	beq.n	8006906 <TIM_Base_SetConfig+0x52>
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	4a1d      	ldr	r2, [pc, #116]	; (8006978 <TIM_Base_SetConfig+0xc4>)
 8006902:	4293      	cmp	r3, r2
 8006904:	d108      	bne.n	8006918 <TIM_Base_SetConfig+0x64>
 8006906:	68fb      	ldr	r3, [r7, #12]
 8006908:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800690c:	60fb      	str	r3, [r7, #12]
 800690e:	683b      	ldr	r3, [r7, #0]
 8006910:	68db      	ldr	r3, [r3, #12]
 8006912:	68fa      	ldr	r2, [r7, #12]
 8006914:	4313      	orrs	r3, r2
 8006916:	60fb      	str	r3, [r7, #12]
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800691e:	683b      	ldr	r3, [r7, #0]
 8006920:	695b      	ldr	r3, [r3, #20]
 8006922:	4313      	orrs	r3, r2
 8006924:	60fb      	str	r3, [r7, #12]
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	68fa      	ldr	r2, [r7, #12]
 800692a:	601a      	str	r2, [r3, #0]
 800692c:	683b      	ldr	r3, [r7, #0]
 800692e:	689a      	ldr	r2, [r3, #8]
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	62da      	str	r2, [r3, #44]	; 0x2c
 8006934:	683b      	ldr	r3, [r7, #0]
 8006936:	681a      	ldr	r2, [r3, #0]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	629a      	str	r2, [r3, #40]	; 0x28
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	4a0c      	ldr	r2, [pc, #48]	; (8006970 <TIM_Base_SetConfig+0xbc>)
 8006940:	4293      	cmp	r3, r2
 8006942:	d007      	beq.n	8006954 <TIM_Base_SetConfig+0xa0>
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	4a0b      	ldr	r2, [pc, #44]	; (8006974 <TIM_Base_SetConfig+0xc0>)
 8006948:	4293      	cmp	r3, r2
 800694a:	d003      	beq.n	8006954 <TIM_Base_SetConfig+0xa0>
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	4a0a      	ldr	r2, [pc, #40]	; (8006978 <TIM_Base_SetConfig+0xc4>)
 8006950:	4293      	cmp	r3, r2
 8006952:	d103      	bne.n	800695c <TIM_Base_SetConfig+0xa8>
 8006954:	683b      	ldr	r3, [r7, #0]
 8006956:	691a      	ldr	r2, [r3, #16]
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	631a      	str	r2, [r3, #48]	; 0x30
 800695c:	687b      	ldr	r3, [r7, #4]
 800695e:	2201      	movs	r2, #1
 8006960:	615a      	str	r2, [r3, #20]
 8006962:	bf00      	nop
 8006964:	3714      	adds	r7, #20
 8006966:	46bd      	mov	sp, r7
 8006968:	f85d 7b04 	ldr.w	r7, [sp], #4
 800696c:	4770      	bx	lr
 800696e:	bf00      	nop
 8006970:	40012c00 	.word	0x40012c00
 8006974:	40014000 	.word	0x40014000
 8006978:	40014400 	.word	0x40014400

0800697c <TIM_OC1_SetConfig>:
 800697c:	b480      	push	{r7}
 800697e:	b087      	sub	sp, #28
 8006980:	af00      	add	r7, sp, #0
 8006982:	6078      	str	r0, [r7, #4]
 8006984:	6039      	str	r1, [r7, #0]
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	6a1b      	ldr	r3, [r3, #32]
 800698a:	f023 0201 	bic.w	r2, r3, #1
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	621a      	str	r2, [r3, #32]
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	6a1b      	ldr	r3, [r3, #32]
 8006996:	617b      	str	r3, [r7, #20]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	685b      	ldr	r3, [r3, #4]
 800699c:	613b      	str	r3, [r7, #16]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	699b      	ldr	r3, [r3, #24]
 80069a2:	60fb      	str	r3, [r7, #12]
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80069aa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80069ae:	60fb      	str	r3, [r7, #12]
 80069b0:	68fb      	ldr	r3, [r7, #12]
 80069b2:	f023 0303 	bic.w	r3, r3, #3
 80069b6:	60fb      	str	r3, [r7, #12]
 80069b8:	683b      	ldr	r3, [r7, #0]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	68fa      	ldr	r2, [r7, #12]
 80069be:	4313      	orrs	r3, r2
 80069c0:	60fb      	str	r3, [r7, #12]
 80069c2:	697b      	ldr	r3, [r7, #20]
 80069c4:	f023 0302 	bic.w	r3, r3, #2
 80069c8:	617b      	str	r3, [r7, #20]
 80069ca:	683b      	ldr	r3, [r7, #0]
 80069cc:	689b      	ldr	r3, [r3, #8]
 80069ce:	697a      	ldr	r2, [r7, #20]
 80069d0:	4313      	orrs	r3, r2
 80069d2:	617b      	str	r3, [r7, #20]
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	4a24      	ldr	r2, [pc, #144]	; (8006a68 <TIM_OC1_SetConfig+0xec>)
 80069d8:	4293      	cmp	r3, r2
 80069da:	d007      	beq.n	80069ec <TIM_OC1_SetConfig+0x70>
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	4a23      	ldr	r2, [pc, #140]	; (8006a6c <TIM_OC1_SetConfig+0xf0>)
 80069e0:	4293      	cmp	r3, r2
 80069e2:	d003      	beq.n	80069ec <TIM_OC1_SetConfig+0x70>
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	4a22      	ldr	r2, [pc, #136]	; (8006a70 <TIM_OC1_SetConfig+0xf4>)
 80069e8:	4293      	cmp	r3, r2
 80069ea:	d10c      	bne.n	8006a06 <TIM_OC1_SetConfig+0x8a>
 80069ec:	697b      	ldr	r3, [r7, #20]
 80069ee:	f023 0308 	bic.w	r3, r3, #8
 80069f2:	617b      	str	r3, [r7, #20]
 80069f4:	683b      	ldr	r3, [r7, #0]
 80069f6:	68db      	ldr	r3, [r3, #12]
 80069f8:	697a      	ldr	r2, [r7, #20]
 80069fa:	4313      	orrs	r3, r2
 80069fc:	617b      	str	r3, [r7, #20]
 80069fe:	697b      	ldr	r3, [r7, #20]
 8006a00:	f023 0304 	bic.w	r3, r3, #4
 8006a04:	617b      	str	r3, [r7, #20]
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	4a17      	ldr	r2, [pc, #92]	; (8006a68 <TIM_OC1_SetConfig+0xec>)
 8006a0a:	4293      	cmp	r3, r2
 8006a0c:	d007      	beq.n	8006a1e <TIM_OC1_SetConfig+0xa2>
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	4a16      	ldr	r2, [pc, #88]	; (8006a6c <TIM_OC1_SetConfig+0xf0>)
 8006a12:	4293      	cmp	r3, r2
 8006a14:	d003      	beq.n	8006a1e <TIM_OC1_SetConfig+0xa2>
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	4a15      	ldr	r2, [pc, #84]	; (8006a70 <TIM_OC1_SetConfig+0xf4>)
 8006a1a:	4293      	cmp	r3, r2
 8006a1c:	d111      	bne.n	8006a42 <TIM_OC1_SetConfig+0xc6>
 8006a1e:	693b      	ldr	r3, [r7, #16]
 8006a20:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006a24:	613b      	str	r3, [r7, #16]
 8006a26:	693b      	ldr	r3, [r7, #16]
 8006a28:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006a2c:	613b      	str	r3, [r7, #16]
 8006a2e:	683b      	ldr	r3, [r7, #0]
 8006a30:	695b      	ldr	r3, [r3, #20]
 8006a32:	693a      	ldr	r2, [r7, #16]
 8006a34:	4313      	orrs	r3, r2
 8006a36:	613b      	str	r3, [r7, #16]
 8006a38:	683b      	ldr	r3, [r7, #0]
 8006a3a:	699b      	ldr	r3, [r3, #24]
 8006a3c:	693a      	ldr	r2, [r7, #16]
 8006a3e:	4313      	orrs	r3, r2
 8006a40:	613b      	str	r3, [r7, #16]
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	693a      	ldr	r2, [r7, #16]
 8006a46:	605a      	str	r2, [r3, #4]
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	68fa      	ldr	r2, [r7, #12]
 8006a4c:	619a      	str	r2, [r3, #24]
 8006a4e:	683b      	ldr	r3, [r7, #0]
 8006a50:	685a      	ldr	r2, [r3, #4]
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	635a      	str	r2, [r3, #52]	; 0x34
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	697a      	ldr	r2, [r7, #20]
 8006a5a:	621a      	str	r2, [r3, #32]
 8006a5c:	bf00      	nop
 8006a5e:	371c      	adds	r7, #28
 8006a60:	46bd      	mov	sp, r7
 8006a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a66:	4770      	bx	lr
 8006a68:	40012c00 	.word	0x40012c00
 8006a6c:	40014000 	.word	0x40014000
 8006a70:	40014400 	.word	0x40014400

08006a74 <TIM_OC2_SetConfig>:
 8006a74:	b480      	push	{r7}
 8006a76:	b087      	sub	sp, #28
 8006a78:	af00      	add	r7, sp, #0
 8006a7a:	6078      	str	r0, [r7, #4]
 8006a7c:	6039      	str	r1, [r7, #0]
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	6a1b      	ldr	r3, [r3, #32]
 8006a82:	f023 0210 	bic.w	r2, r3, #16
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	621a      	str	r2, [r3, #32]
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	6a1b      	ldr	r3, [r3, #32]
 8006a8e:	617b      	str	r3, [r7, #20]
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	685b      	ldr	r3, [r3, #4]
 8006a94:	613b      	str	r3, [r7, #16]
 8006a96:	687b      	ldr	r3, [r7, #4]
 8006a98:	699b      	ldr	r3, [r3, #24]
 8006a9a:	60fb      	str	r3, [r7, #12]
 8006a9c:	68fb      	ldr	r3, [r7, #12]
 8006a9e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006aa2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006aa6:	60fb      	str	r3, [r7, #12]
 8006aa8:	68fb      	ldr	r3, [r7, #12]
 8006aaa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006aae:	60fb      	str	r3, [r7, #12]
 8006ab0:	683b      	ldr	r3, [r7, #0]
 8006ab2:	681b      	ldr	r3, [r3, #0]
 8006ab4:	021b      	lsls	r3, r3, #8
 8006ab6:	68fa      	ldr	r2, [r7, #12]
 8006ab8:	4313      	orrs	r3, r2
 8006aba:	60fb      	str	r3, [r7, #12]
 8006abc:	697b      	ldr	r3, [r7, #20]
 8006abe:	f023 0320 	bic.w	r3, r3, #32
 8006ac2:	617b      	str	r3, [r7, #20]
 8006ac4:	683b      	ldr	r3, [r7, #0]
 8006ac6:	689b      	ldr	r3, [r3, #8]
 8006ac8:	011b      	lsls	r3, r3, #4
 8006aca:	697a      	ldr	r2, [r7, #20]
 8006acc:	4313      	orrs	r3, r2
 8006ace:	617b      	str	r3, [r7, #20]
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	4a22      	ldr	r2, [pc, #136]	; (8006b5c <TIM_OC2_SetConfig+0xe8>)
 8006ad4:	4293      	cmp	r3, r2
 8006ad6:	d10d      	bne.n	8006af4 <TIM_OC2_SetConfig+0x80>
 8006ad8:	697b      	ldr	r3, [r7, #20]
 8006ada:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006ade:	617b      	str	r3, [r7, #20]
 8006ae0:	683b      	ldr	r3, [r7, #0]
 8006ae2:	68db      	ldr	r3, [r3, #12]
 8006ae4:	011b      	lsls	r3, r3, #4
 8006ae6:	697a      	ldr	r2, [r7, #20]
 8006ae8:	4313      	orrs	r3, r2
 8006aea:	617b      	str	r3, [r7, #20]
 8006aec:	697b      	ldr	r3, [r7, #20]
 8006aee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006af2:	617b      	str	r3, [r7, #20]
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	4a19      	ldr	r2, [pc, #100]	; (8006b5c <TIM_OC2_SetConfig+0xe8>)
 8006af8:	4293      	cmp	r3, r2
 8006afa:	d007      	beq.n	8006b0c <TIM_OC2_SetConfig+0x98>
 8006afc:	687b      	ldr	r3, [r7, #4]
 8006afe:	4a18      	ldr	r2, [pc, #96]	; (8006b60 <TIM_OC2_SetConfig+0xec>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d003      	beq.n	8006b0c <TIM_OC2_SetConfig+0x98>
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	4a17      	ldr	r2, [pc, #92]	; (8006b64 <TIM_OC2_SetConfig+0xf0>)
 8006b08:	4293      	cmp	r3, r2
 8006b0a:	d113      	bne.n	8006b34 <TIM_OC2_SetConfig+0xc0>
 8006b0c:	693b      	ldr	r3, [r7, #16]
 8006b0e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006b12:	613b      	str	r3, [r7, #16]
 8006b14:	693b      	ldr	r3, [r7, #16]
 8006b16:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b1a:	613b      	str	r3, [r7, #16]
 8006b1c:	683b      	ldr	r3, [r7, #0]
 8006b1e:	695b      	ldr	r3, [r3, #20]
 8006b20:	009b      	lsls	r3, r3, #2
 8006b22:	693a      	ldr	r2, [r7, #16]
 8006b24:	4313      	orrs	r3, r2
 8006b26:	613b      	str	r3, [r7, #16]
 8006b28:	683b      	ldr	r3, [r7, #0]
 8006b2a:	699b      	ldr	r3, [r3, #24]
 8006b2c:	009b      	lsls	r3, r3, #2
 8006b2e:	693a      	ldr	r2, [r7, #16]
 8006b30:	4313      	orrs	r3, r2
 8006b32:	613b      	str	r3, [r7, #16]
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	693a      	ldr	r2, [r7, #16]
 8006b38:	605a      	str	r2, [r3, #4]
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	68fa      	ldr	r2, [r7, #12]
 8006b3e:	619a      	str	r2, [r3, #24]
 8006b40:	683b      	ldr	r3, [r7, #0]
 8006b42:	685a      	ldr	r2, [r3, #4]
 8006b44:	687b      	ldr	r3, [r7, #4]
 8006b46:	639a      	str	r2, [r3, #56]	; 0x38
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	697a      	ldr	r2, [r7, #20]
 8006b4c:	621a      	str	r2, [r3, #32]
 8006b4e:	bf00      	nop
 8006b50:	371c      	adds	r7, #28
 8006b52:	46bd      	mov	sp, r7
 8006b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b58:	4770      	bx	lr
 8006b5a:	bf00      	nop
 8006b5c:	40012c00 	.word	0x40012c00
 8006b60:	40014000 	.word	0x40014000
 8006b64:	40014400 	.word	0x40014400

08006b68 <TIM_OC3_SetConfig>:
 8006b68:	b480      	push	{r7}
 8006b6a:	b087      	sub	sp, #28
 8006b6c:	af00      	add	r7, sp, #0
 8006b6e:	6078      	str	r0, [r7, #4]
 8006b70:	6039      	str	r1, [r7, #0]
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	6a1b      	ldr	r3, [r3, #32]
 8006b76:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	621a      	str	r2, [r3, #32]
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	6a1b      	ldr	r3, [r3, #32]
 8006b82:	617b      	str	r3, [r7, #20]
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	685b      	ldr	r3, [r3, #4]
 8006b88:	613b      	str	r3, [r7, #16]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	69db      	ldr	r3, [r3, #28]
 8006b8e:	60fb      	str	r3, [r7, #12]
 8006b90:	68fb      	ldr	r3, [r7, #12]
 8006b92:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006b96:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006b9a:	60fb      	str	r3, [r7, #12]
 8006b9c:	68fb      	ldr	r3, [r7, #12]
 8006b9e:	f023 0303 	bic.w	r3, r3, #3
 8006ba2:	60fb      	str	r3, [r7, #12]
 8006ba4:	683b      	ldr	r3, [r7, #0]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	68fa      	ldr	r2, [r7, #12]
 8006baa:	4313      	orrs	r3, r2
 8006bac:	60fb      	str	r3, [r7, #12]
 8006bae:	697b      	ldr	r3, [r7, #20]
 8006bb0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006bb4:	617b      	str	r3, [r7, #20]
 8006bb6:	683b      	ldr	r3, [r7, #0]
 8006bb8:	689b      	ldr	r3, [r3, #8]
 8006bba:	021b      	lsls	r3, r3, #8
 8006bbc:	697a      	ldr	r2, [r7, #20]
 8006bbe:	4313      	orrs	r3, r2
 8006bc0:	617b      	str	r3, [r7, #20]
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	4a21      	ldr	r2, [pc, #132]	; (8006c4c <TIM_OC3_SetConfig+0xe4>)
 8006bc6:	4293      	cmp	r3, r2
 8006bc8:	d10d      	bne.n	8006be6 <TIM_OC3_SetConfig+0x7e>
 8006bca:	697b      	ldr	r3, [r7, #20]
 8006bcc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006bd0:	617b      	str	r3, [r7, #20]
 8006bd2:	683b      	ldr	r3, [r7, #0]
 8006bd4:	68db      	ldr	r3, [r3, #12]
 8006bd6:	021b      	lsls	r3, r3, #8
 8006bd8:	697a      	ldr	r2, [r7, #20]
 8006bda:	4313      	orrs	r3, r2
 8006bdc:	617b      	str	r3, [r7, #20]
 8006bde:	697b      	ldr	r3, [r7, #20]
 8006be0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006be4:	617b      	str	r3, [r7, #20]
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	4a18      	ldr	r2, [pc, #96]	; (8006c4c <TIM_OC3_SetConfig+0xe4>)
 8006bea:	4293      	cmp	r3, r2
 8006bec:	d007      	beq.n	8006bfe <TIM_OC3_SetConfig+0x96>
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	4a17      	ldr	r2, [pc, #92]	; (8006c50 <TIM_OC3_SetConfig+0xe8>)
 8006bf2:	4293      	cmp	r3, r2
 8006bf4:	d003      	beq.n	8006bfe <TIM_OC3_SetConfig+0x96>
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	4a16      	ldr	r2, [pc, #88]	; (8006c54 <TIM_OC3_SetConfig+0xec>)
 8006bfa:	4293      	cmp	r3, r2
 8006bfc:	d113      	bne.n	8006c26 <TIM_OC3_SetConfig+0xbe>
 8006bfe:	693b      	ldr	r3, [r7, #16]
 8006c00:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006c04:	613b      	str	r3, [r7, #16]
 8006c06:	693b      	ldr	r3, [r7, #16]
 8006c08:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006c0c:	613b      	str	r3, [r7, #16]
 8006c0e:	683b      	ldr	r3, [r7, #0]
 8006c10:	695b      	ldr	r3, [r3, #20]
 8006c12:	011b      	lsls	r3, r3, #4
 8006c14:	693a      	ldr	r2, [r7, #16]
 8006c16:	4313      	orrs	r3, r2
 8006c18:	613b      	str	r3, [r7, #16]
 8006c1a:	683b      	ldr	r3, [r7, #0]
 8006c1c:	699b      	ldr	r3, [r3, #24]
 8006c1e:	011b      	lsls	r3, r3, #4
 8006c20:	693a      	ldr	r2, [r7, #16]
 8006c22:	4313      	orrs	r3, r2
 8006c24:	613b      	str	r3, [r7, #16]
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	693a      	ldr	r2, [r7, #16]
 8006c2a:	605a      	str	r2, [r3, #4]
 8006c2c:	687b      	ldr	r3, [r7, #4]
 8006c2e:	68fa      	ldr	r2, [r7, #12]
 8006c30:	61da      	str	r2, [r3, #28]
 8006c32:	683b      	ldr	r3, [r7, #0]
 8006c34:	685a      	ldr	r2, [r3, #4]
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	63da      	str	r2, [r3, #60]	; 0x3c
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	697a      	ldr	r2, [r7, #20]
 8006c3e:	621a      	str	r2, [r3, #32]
 8006c40:	bf00      	nop
 8006c42:	371c      	adds	r7, #28
 8006c44:	46bd      	mov	sp, r7
 8006c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c4a:	4770      	bx	lr
 8006c4c:	40012c00 	.word	0x40012c00
 8006c50:	40014000 	.word	0x40014000
 8006c54:	40014400 	.word	0x40014400

08006c58 <TIM_OC4_SetConfig>:
 8006c58:	b480      	push	{r7}
 8006c5a:	b087      	sub	sp, #28
 8006c5c:	af00      	add	r7, sp, #0
 8006c5e:	6078      	str	r0, [r7, #4]
 8006c60:	6039      	str	r1, [r7, #0]
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	6a1b      	ldr	r3, [r3, #32]
 8006c66:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	621a      	str	r2, [r3, #32]
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	6a1b      	ldr	r3, [r3, #32]
 8006c72:	613b      	str	r3, [r7, #16]
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	685b      	ldr	r3, [r3, #4]
 8006c78:	617b      	str	r3, [r7, #20]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	69db      	ldr	r3, [r3, #28]
 8006c7e:	60fb      	str	r3, [r7, #12]
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006c86:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006c8a:	60fb      	str	r3, [r7, #12]
 8006c8c:	68fb      	ldr	r3, [r7, #12]
 8006c8e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006c92:	60fb      	str	r3, [r7, #12]
 8006c94:	683b      	ldr	r3, [r7, #0]
 8006c96:	681b      	ldr	r3, [r3, #0]
 8006c98:	021b      	lsls	r3, r3, #8
 8006c9a:	68fa      	ldr	r2, [r7, #12]
 8006c9c:	4313      	orrs	r3, r2
 8006c9e:	60fb      	str	r3, [r7, #12]
 8006ca0:	693b      	ldr	r3, [r7, #16]
 8006ca2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006ca6:	613b      	str	r3, [r7, #16]
 8006ca8:	683b      	ldr	r3, [r7, #0]
 8006caa:	689b      	ldr	r3, [r3, #8]
 8006cac:	031b      	lsls	r3, r3, #12
 8006cae:	693a      	ldr	r2, [r7, #16]
 8006cb0:	4313      	orrs	r3, r2
 8006cb2:	613b      	str	r3, [r7, #16]
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	4a14      	ldr	r2, [pc, #80]	; (8006d08 <TIM_OC4_SetConfig+0xb0>)
 8006cb8:	4293      	cmp	r3, r2
 8006cba:	d007      	beq.n	8006ccc <TIM_OC4_SetConfig+0x74>
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	4a13      	ldr	r2, [pc, #76]	; (8006d0c <TIM_OC4_SetConfig+0xb4>)
 8006cc0:	4293      	cmp	r3, r2
 8006cc2:	d003      	beq.n	8006ccc <TIM_OC4_SetConfig+0x74>
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	4a12      	ldr	r2, [pc, #72]	; (8006d10 <TIM_OC4_SetConfig+0xb8>)
 8006cc8:	4293      	cmp	r3, r2
 8006cca:	d109      	bne.n	8006ce0 <TIM_OC4_SetConfig+0x88>
 8006ccc:	697b      	ldr	r3, [r7, #20]
 8006cce:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8006cd2:	617b      	str	r3, [r7, #20]
 8006cd4:	683b      	ldr	r3, [r7, #0]
 8006cd6:	695b      	ldr	r3, [r3, #20]
 8006cd8:	019b      	lsls	r3, r3, #6
 8006cda:	697a      	ldr	r2, [r7, #20]
 8006cdc:	4313      	orrs	r3, r2
 8006cde:	617b      	str	r3, [r7, #20]
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	697a      	ldr	r2, [r7, #20]
 8006ce4:	605a      	str	r2, [r3, #4]
 8006ce6:	687b      	ldr	r3, [r7, #4]
 8006ce8:	68fa      	ldr	r2, [r7, #12]
 8006cea:	61da      	str	r2, [r3, #28]
 8006cec:	683b      	ldr	r3, [r7, #0]
 8006cee:	685a      	ldr	r2, [r3, #4]
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	641a      	str	r2, [r3, #64]	; 0x40
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	693a      	ldr	r2, [r7, #16]
 8006cf8:	621a      	str	r2, [r3, #32]
 8006cfa:	bf00      	nop
 8006cfc:	371c      	adds	r7, #28
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d04:	4770      	bx	lr
 8006d06:	bf00      	nop
 8006d08:	40012c00 	.word	0x40012c00
 8006d0c:	40014000 	.word	0x40014000
 8006d10:	40014400 	.word	0x40014400

08006d14 <TIM_OC5_SetConfig>:
 8006d14:	b480      	push	{r7}
 8006d16:	b087      	sub	sp, #28
 8006d18:	af00      	add	r7, sp, #0
 8006d1a:	6078      	str	r0, [r7, #4]
 8006d1c:	6039      	str	r1, [r7, #0]
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	6a1b      	ldr	r3, [r3, #32]
 8006d22:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8006d26:	687b      	ldr	r3, [r7, #4]
 8006d28:	621a      	str	r2, [r3, #32]
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	6a1b      	ldr	r3, [r3, #32]
 8006d2e:	613b      	str	r3, [r7, #16]
 8006d30:	687b      	ldr	r3, [r7, #4]
 8006d32:	685b      	ldr	r3, [r3, #4]
 8006d34:	617b      	str	r3, [r7, #20]
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006d3a:	60fb      	str	r3, [r7, #12]
 8006d3c:	68fb      	ldr	r3, [r7, #12]
 8006d3e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006d42:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006d46:	60fb      	str	r3, [r7, #12]
 8006d48:	683b      	ldr	r3, [r7, #0]
 8006d4a:	681b      	ldr	r3, [r3, #0]
 8006d4c:	68fa      	ldr	r2, [r7, #12]
 8006d4e:	4313      	orrs	r3, r2
 8006d50:	60fb      	str	r3, [r7, #12]
 8006d52:	693b      	ldr	r3, [r7, #16]
 8006d54:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8006d58:	613b      	str	r3, [r7, #16]
 8006d5a:	683b      	ldr	r3, [r7, #0]
 8006d5c:	689b      	ldr	r3, [r3, #8]
 8006d5e:	041b      	lsls	r3, r3, #16
 8006d60:	693a      	ldr	r2, [r7, #16]
 8006d62:	4313      	orrs	r3, r2
 8006d64:	613b      	str	r3, [r7, #16]
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	4a13      	ldr	r2, [pc, #76]	; (8006db8 <TIM_OC5_SetConfig+0xa4>)
 8006d6a:	4293      	cmp	r3, r2
 8006d6c:	d007      	beq.n	8006d7e <TIM_OC5_SetConfig+0x6a>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	4a12      	ldr	r2, [pc, #72]	; (8006dbc <TIM_OC5_SetConfig+0xa8>)
 8006d72:	4293      	cmp	r3, r2
 8006d74:	d003      	beq.n	8006d7e <TIM_OC5_SetConfig+0x6a>
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	4a11      	ldr	r2, [pc, #68]	; (8006dc0 <TIM_OC5_SetConfig+0xac>)
 8006d7a:	4293      	cmp	r3, r2
 8006d7c:	d109      	bne.n	8006d92 <TIM_OC5_SetConfig+0x7e>
 8006d7e:	697b      	ldr	r3, [r7, #20]
 8006d80:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006d84:	617b      	str	r3, [r7, #20]
 8006d86:	683b      	ldr	r3, [r7, #0]
 8006d88:	695b      	ldr	r3, [r3, #20]
 8006d8a:	021b      	lsls	r3, r3, #8
 8006d8c:	697a      	ldr	r2, [r7, #20]
 8006d8e:	4313      	orrs	r3, r2
 8006d90:	617b      	str	r3, [r7, #20]
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	697a      	ldr	r2, [r7, #20]
 8006d96:	605a      	str	r2, [r3, #4]
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	68fa      	ldr	r2, [r7, #12]
 8006d9c:	655a      	str	r2, [r3, #84]	; 0x54
 8006d9e:	683b      	ldr	r3, [r7, #0]
 8006da0:	685a      	ldr	r2, [r3, #4]
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	659a      	str	r2, [r3, #88]	; 0x58
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	693a      	ldr	r2, [r7, #16]
 8006daa:	621a      	str	r2, [r3, #32]
 8006dac:	bf00      	nop
 8006dae:	371c      	adds	r7, #28
 8006db0:	46bd      	mov	sp, r7
 8006db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006db6:	4770      	bx	lr
 8006db8:	40012c00 	.word	0x40012c00
 8006dbc:	40014000 	.word	0x40014000
 8006dc0:	40014400 	.word	0x40014400

08006dc4 <TIM_OC6_SetConfig>:
 8006dc4:	b480      	push	{r7}
 8006dc6:	b087      	sub	sp, #28
 8006dc8:	af00      	add	r7, sp, #0
 8006dca:	6078      	str	r0, [r7, #4]
 8006dcc:	6039      	str	r1, [r7, #0]
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	6a1b      	ldr	r3, [r3, #32]
 8006dd2:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	621a      	str	r2, [r3, #32]
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	6a1b      	ldr	r3, [r3, #32]
 8006dde:	613b      	str	r3, [r7, #16]
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	685b      	ldr	r3, [r3, #4]
 8006de4:	617b      	str	r3, [r7, #20]
 8006de6:	687b      	ldr	r3, [r7, #4]
 8006de8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006dea:	60fb      	str	r3, [r7, #12]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006df2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006df6:	60fb      	str	r3, [r7, #12]
 8006df8:	683b      	ldr	r3, [r7, #0]
 8006dfa:	681b      	ldr	r3, [r3, #0]
 8006dfc:	021b      	lsls	r3, r3, #8
 8006dfe:	68fa      	ldr	r2, [r7, #12]
 8006e00:	4313      	orrs	r3, r2
 8006e02:	60fb      	str	r3, [r7, #12]
 8006e04:	693b      	ldr	r3, [r7, #16]
 8006e06:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8006e0a:	613b      	str	r3, [r7, #16]
 8006e0c:	683b      	ldr	r3, [r7, #0]
 8006e0e:	689b      	ldr	r3, [r3, #8]
 8006e10:	051b      	lsls	r3, r3, #20
 8006e12:	693a      	ldr	r2, [r7, #16]
 8006e14:	4313      	orrs	r3, r2
 8006e16:	613b      	str	r3, [r7, #16]
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	4a14      	ldr	r2, [pc, #80]	; (8006e6c <TIM_OC6_SetConfig+0xa8>)
 8006e1c:	4293      	cmp	r3, r2
 8006e1e:	d007      	beq.n	8006e30 <TIM_OC6_SetConfig+0x6c>
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	4a13      	ldr	r2, [pc, #76]	; (8006e70 <TIM_OC6_SetConfig+0xac>)
 8006e24:	4293      	cmp	r3, r2
 8006e26:	d003      	beq.n	8006e30 <TIM_OC6_SetConfig+0x6c>
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	4a12      	ldr	r2, [pc, #72]	; (8006e74 <TIM_OC6_SetConfig+0xb0>)
 8006e2c:	4293      	cmp	r3, r2
 8006e2e:	d109      	bne.n	8006e44 <TIM_OC6_SetConfig+0x80>
 8006e30:	697b      	ldr	r3, [r7, #20]
 8006e32:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e36:	617b      	str	r3, [r7, #20]
 8006e38:	683b      	ldr	r3, [r7, #0]
 8006e3a:	695b      	ldr	r3, [r3, #20]
 8006e3c:	029b      	lsls	r3, r3, #10
 8006e3e:	697a      	ldr	r2, [r7, #20]
 8006e40:	4313      	orrs	r3, r2
 8006e42:	617b      	str	r3, [r7, #20]
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	697a      	ldr	r2, [r7, #20]
 8006e48:	605a      	str	r2, [r3, #4]
 8006e4a:	687b      	ldr	r3, [r7, #4]
 8006e4c:	68fa      	ldr	r2, [r7, #12]
 8006e4e:	655a      	str	r2, [r3, #84]	; 0x54
 8006e50:	683b      	ldr	r3, [r7, #0]
 8006e52:	685a      	ldr	r2, [r3, #4]
 8006e54:	687b      	ldr	r3, [r7, #4]
 8006e56:	65da      	str	r2, [r3, #92]	; 0x5c
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	693a      	ldr	r2, [r7, #16]
 8006e5c:	621a      	str	r2, [r3, #32]
 8006e5e:	bf00      	nop
 8006e60:	371c      	adds	r7, #28
 8006e62:	46bd      	mov	sp, r7
 8006e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e68:	4770      	bx	lr
 8006e6a:	bf00      	nop
 8006e6c:	40012c00 	.word	0x40012c00
 8006e70:	40014000 	.word	0x40014000
 8006e74:	40014400 	.word	0x40014400

08006e78 <TIM_CCxChannelCmd>:
 8006e78:	b480      	push	{r7}
 8006e7a:	b087      	sub	sp, #28
 8006e7c:	af00      	add	r7, sp, #0
 8006e7e:	60f8      	str	r0, [r7, #12]
 8006e80:	60b9      	str	r1, [r7, #8]
 8006e82:	607a      	str	r2, [r7, #4]
 8006e84:	68bb      	ldr	r3, [r7, #8]
 8006e86:	f003 031f 	and.w	r3, r3, #31
 8006e8a:	2201      	movs	r2, #1
 8006e8c:	fa02 f303 	lsl.w	r3, r2, r3
 8006e90:	617b      	str	r3, [r7, #20]
 8006e92:	68fb      	ldr	r3, [r7, #12]
 8006e94:	6a1a      	ldr	r2, [r3, #32]
 8006e96:	697b      	ldr	r3, [r7, #20]
 8006e98:	43db      	mvns	r3, r3
 8006e9a:	401a      	ands	r2, r3
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	621a      	str	r2, [r3, #32]
 8006ea0:	68fb      	ldr	r3, [r7, #12]
 8006ea2:	6a1a      	ldr	r2, [r3, #32]
 8006ea4:	68bb      	ldr	r3, [r7, #8]
 8006ea6:	f003 031f 	and.w	r3, r3, #31
 8006eaa:	6879      	ldr	r1, [r7, #4]
 8006eac:	fa01 f303 	lsl.w	r3, r1, r3
 8006eb0:	431a      	orrs	r2, r3
 8006eb2:	68fb      	ldr	r3, [r7, #12]
 8006eb4:	621a      	str	r2, [r3, #32]
 8006eb6:	bf00      	nop
 8006eb8:	371c      	adds	r7, #28
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ec0:	4770      	bx	lr
	...

08006ec4 <HAL_TIMEx_MasterConfigSynchronization>:
 8006ec4:	b480      	push	{r7}
 8006ec6:	b085      	sub	sp, #20
 8006ec8:	af00      	add	r7, sp, #0
 8006eca:	6078      	str	r0, [r7, #4]
 8006ecc:	6039      	str	r1, [r7, #0]
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006ed4:	2b01      	cmp	r3, #1
 8006ed6:	d101      	bne.n	8006edc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006ed8:	2302      	movs	r3, #2
 8006eda:	e04f      	b.n	8006f7c <HAL_TIMEx_MasterConfigSynchronization+0xb8>
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	2201      	movs	r2, #1
 8006ee0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	2202      	movs	r2, #2
 8006ee8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	681b      	ldr	r3, [r3, #0]
 8006ef0:	685b      	ldr	r3, [r3, #4]
 8006ef2:	60fb      	str	r3, [r7, #12]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	689b      	ldr	r3, [r3, #8]
 8006efa:	60bb      	str	r3, [r7, #8]
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	681b      	ldr	r3, [r3, #0]
 8006f00:	4a21      	ldr	r2, [pc, #132]	; (8006f88 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8006f02:	4293      	cmp	r3, r2
 8006f04:	d108      	bne.n	8006f18 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8006f0c:	60fb      	str	r3, [r7, #12]
 8006f0e:	683b      	ldr	r3, [r7, #0]
 8006f10:	685b      	ldr	r3, [r3, #4]
 8006f12:	68fa      	ldr	r2, [r7, #12]
 8006f14:	4313      	orrs	r3, r2
 8006f16:	60fb      	str	r3, [r7, #12]
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006f1e:	60fb      	str	r3, [r7, #12]
 8006f20:	683b      	ldr	r3, [r7, #0]
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	68fa      	ldr	r2, [r7, #12]
 8006f26:	4313      	orrs	r3, r2
 8006f28:	60fb      	str	r3, [r7, #12]
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	681b      	ldr	r3, [r3, #0]
 8006f2e:	68fa      	ldr	r2, [r7, #12]
 8006f30:	605a      	str	r2, [r3, #4]
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	4a14      	ldr	r2, [pc, #80]	; (8006f88 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 8006f38:	4293      	cmp	r3, r2
 8006f3a:	d009      	beq.n	8006f50 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006f44:	d004      	beq.n	8006f50 <HAL_TIMEx_MasterConfigSynchronization+0x8c>
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	4a10      	ldr	r2, [pc, #64]	; (8006f8c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8006f4c:	4293      	cmp	r3, r2
 8006f4e:	d10c      	bne.n	8006f6a <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8006f50:	68bb      	ldr	r3, [r7, #8]
 8006f52:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006f56:	60bb      	str	r3, [r7, #8]
 8006f58:	683b      	ldr	r3, [r7, #0]
 8006f5a:	689b      	ldr	r3, [r3, #8]
 8006f5c:	68ba      	ldr	r2, [r7, #8]
 8006f5e:	4313      	orrs	r3, r2
 8006f60:	60bb      	str	r3, [r7, #8]
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	681b      	ldr	r3, [r3, #0]
 8006f66:	68ba      	ldr	r2, [r7, #8]
 8006f68:	609a      	str	r2, [r3, #8]
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	2201      	movs	r2, #1
 8006f6e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	2200      	movs	r2, #0
 8006f76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006f7a:	2300      	movs	r3, #0
 8006f7c:	4618      	mov	r0, r3
 8006f7e:	3714      	adds	r7, #20
 8006f80:	46bd      	mov	sp, r7
 8006f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f86:	4770      	bx	lr
 8006f88:	40012c00 	.word	0x40012c00
 8006f8c:	40014000 	.word	0x40014000

08006f90 <HAL_TIMEx_ConfigBreakDeadTime>:
 8006f90:	b480      	push	{r7}
 8006f92:	b085      	sub	sp, #20
 8006f94:	af00      	add	r7, sp, #0
 8006f96:	6078      	str	r0, [r7, #4]
 8006f98:	6039      	str	r1, [r7, #0]
 8006f9a:	2300      	movs	r3, #0
 8006f9c:	60fb      	str	r3, [r7, #12]
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006fa4:	2b01      	cmp	r3, #1
 8006fa6:	d101      	bne.n	8006fac <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8006fa8:	2302      	movs	r3, #2
 8006faa:	e060      	b.n	800706e <HAL_TIMEx_ConfigBreakDeadTime+0xde>
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	2201      	movs	r2, #1
 8006fb0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006fb4:	68fb      	ldr	r3, [r7, #12]
 8006fb6:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8006fba:	683b      	ldr	r3, [r7, #0]
 8006fbc:	68db      	ldr	r3, [r3, #12]
 8006fbe:	4313      	orrs	r3, r2
 8006fc0:	60fb      	str	r3, [r7, #12]
 8006fc2:	68fb      	ldr	r3, [r7, #12]
 8006fc4:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8006fc8:	683b      	ldr	r3, [r7, #0]
 8006fca:	689b      	ldr	r3, [r3, #8]
 8006fcc:	4313      	orrs	r3, r2
 8006fce:	60fb      	str	r3, [r7, #12]
 8006fd0:	68fb      	ldr	r3, [r7, #12]
 8006fd2:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8006fd6:	683b      	ldr	r3, [r7, #0]
 8006fd8:	685b      	ldr	r3, [r3, #4]
 8006fda:	4313      	orrs	r3, r2
 8006fdc:	60fb      	str	r3, [r7, #12]
 8006fde:	68fb      	ldr	r3, [r7, #12]
 8006fe0:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8006fe4:	683b      	ldr	r3, [r7, #0]
 8006fe6:	681b      	ldr	r3, [r3, #0]
 8006fe8:	4313      	orrs	r3, r2
 8006fea:	60fb      	str	r3, [r7, #12]
 8006fec:	68fb      	ldr	r3, [r7, #12]
 8006fee:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006ff2:	683b      	ldr	r3, [r7, #0]
 8006ff4:	691b      	ldr	r3, [r3, #16]
 8006ff6:	4313      	orrs	r3, r2
 8006ff8:	60fb      	str	r3, [r7, #12]
 8006ffa:	68fb      	ldr	r3, [r7, #12]
 8006ffc:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007000:	683b      	ldr	r3, [r7, #0]
 8007002:	695b      	ldr	r3, [r3, #20]
 8007004:	4313      	orrs	r3, r2
 8007006:	60fb      	str	r3, [r7, #12]
 8007008:	68fb      	ldr	r3, [r7, #12]
 800700a:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800700e:	683b      	ldr	r3, [r7, #0]
 8007010:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007012:	4313      	orrs	r3, r2
 8007014:	60fb      	str	r3, [r7, #12]
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 800701c:	683b      	ldr	r3, [r7, #0]
 800701e:	699b      	ldr	r3, [r3, #24]
 8007020:	041b      	lsls	r3, r3, #16
 8007022:	4313      	orrs	r3, r2
 8007024:	60fb      	str	r3, [r7, #12]
 8007026:	687b      	ldr	r3, [r7, #4]
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	4a14      	ldr	r2, [pc, #80]	; (800707c <HAL_TIMEx_ConfigBreakDeadTime+0xec>)
 800702c:	4293      	cmp	r3, r2
 800702e:	d115      	bne.n	800705c <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8007036:	683b      	ldr	r3, [r7, #0]
 8007038:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800703a:	051b      	lsls	r3, r3, #20
 800703c:	4313      	orrs	r3, r2
 800703e:	60fb      	str	r3, [r7, #12]
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8007046:	683b      	ldr	r3, [r7, #0]
 8007048:	69db      	ldr	r3, [r3, #28]
 800704a:	4313      	orrs	r3, r2
 800704c:	60fb      	str	r3, [r7, #12]
 800704e:	68fb      	ldr	r3, [r7, #12]
 8007050:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8007054:	683b      	ldr	r3, [r7, #0]
 8007056:	6a1b      	ldr	r3, [r3, #32]
 8007058:	4313      	orrs	r3, r2
 800705a:	60fb      	str	r3, [r7, #12]
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	68fa      	ldr	r2, [r7, #12]
 8007062:	645a      	str	r2, [r3, #68]	; 0x44
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	2200      	movs	r2, #0
 8007068:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800706c:	2300      	movs	r3, #0
 800706e:	4618      	mov	r0, r3
 8007070:	3714      	adds	r7, #20
 8007072:	46bd      	mov	sp, r7
 8007074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007078:	4770      	bx	lr
 800707a:	bf00      	nop
 800707c:	40012c00 	.word	0x40012c00

08007080 <HAL_TIMEx_CommutCallback>:
 8007080:	b480      	push	{r7}
 8007082:	b083      	sub	sp, #12
 8007084:	af00      	add	r7, sp, #0
 8007086:	6078      	str	r0, [r7, #4]
 8007088:	bf00      	nop
 800708a:	370c      	adds	r7, #12
 800708c:	46bd      	mov	sp, r7
 800708e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007092:	4770      	bx	lr

08007094 <HAL_TIMEx_BreakCallback>:
 8007094:	b480      	push	{r7}
 8007096:	b083      	sub	sp, #12
 8007098:	af00      	add	r7, sp, #0
 800709a:	6078      	str	r0, [r7, #4]
 800709c:	bf00      	nop
 800709e:	370c      	adds	r7, #12
 80070a0:	46bd      	mov	sp, r7
 80070a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070a6:	4770      	bx	lr

080070a8 <HAL_TIMEx_Break2Callback>:
 80070a8:	b480      	push	{r7}
 80070aa:	b083      	sub	sp, #12
 80070ac:	af00      	add	r7, sp, #0
 80070ae:	6078      	str	r0, [r7, #4]
 80070b0:	bf00      	nop
 80070b2:	370c      	adds	r7, #12
 80070b4:	46bd      	mov	sp, r7
 80070b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ba:	4770      	bx	lr

080070bc <HAL_UART_Init>:
 80070bc:	b580      	push	{r7, lr}
 80070be:	b082      	sub	sp, #8
 80070c0:	af00      	add	r7, sp, #0
 80070c2:	6078      	str	r0, [r7, #4]
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	d101      	bne.n	80070ce <HAL_UART_Init+0x12>
 80070ca:	2301      	movs	r3, #1
 80070cc:	e040      	b.n	8007150 <HAL_UART_Init+0x94>
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80070d2:	2b00      	cmp	r3, #0
 80070d4:	d106      	bne.n	80070e4 <HAL_UART_Init+0x28>
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	2200      	movs	r2, #0
 80070da:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80070de:	6878      	ldr	r0, [r7, #4]
 80070e0:	f7fb fd40 	bl	8002b64 <HAL_UART_MspInit>
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	2224      	movs	r2, #36	; 0x24
 80070e8:	679a      	str	r2, [r3, #120]	; 0x78
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	681a      	ldr	r2, [r3, #0]
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	f022 0201 	bic.w	r2, r2, #1
 80070f8:	601a      	str	r2, [r3, #0]
 80070fa:	6878      	ldr	r0, [r7, #4]
 80070fc:	f000 f92e 	bl	800735c <UART_SetConfig>
 8007100:	4603      	mov	r3, r0
 8007102:	2b01      	cmp	r3, #1
 8007104:	d101      	bne.n	800710a <HAL_UART_Init+0x4e>
 8007106:	2301      	movs	r3, #1
 8007108:	e022      	b.n	8007150 <HAL_UART_Init+0x94>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800710e:	2b00      	cmp	r3, #0
 8007110:	d002      	beq.n	8007118 <HAL_UART_Init+0x5c>
 8007112:	6878      	ldr	r0, [r7, #4]
 8007114:	f000 fb2e 	bl	8007774 <UART_AdvFeatureConfig>
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	685a      	ldr	r2, [r3, #4]
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007126:	605a      	str	r2, [r3, #4]
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	689a      	ldr	r2, [r3, #8]
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8007136:	609a      	str	r2, [r3, #8]
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	681a      	ldr	r2, [r3, #0]
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	f042 0201 	orr.w	r2, r2, #1
 8007146:	601a      	str	r2, [r3, #0]
 8007148:	6878      	ldr	r0, [r7, #4]
 800714a:	f000 fbb5 	bl	80078b8 <UART_CheckIdleState>
 800714e:	4603      	mov	r3, r0
 8007150:	4618      	mov	r0, r3
 8007152:	3708      	adds	r7, #8
 8007154:	46bd      	mov	sp, r7
 8007156:	bd80      	pop	{r7, pc}

08007158 <HAL_UART_Transmit>:
 8007158:	b580      	push	{r7, lr}
 800715a:	b08a      	sub	sp, #40	; 0x28
 800715c:	af02      	add	r7, sp, #8
 800715e:	60f8      	str	r0, [r7, #12]
 8007160:	60b9      	str	r1, [r7, #8]
 8007162:	603b      	str	r3, [r7, #0]
 8007164:	4613      	mov	r3, r2
 8007166:	80fb      	strh	r3, [r7, #6]
 8007168:	68fb      	ldr	r3, [r7, #12]
 800716a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800716c:	2b20      	cmp	r3, #32
 800716e:	f040 8082 	bne.w	8007276 <HAL_UART_Transmit+0x11e>
 8007172:	68bb      	ldr	r3, [r7, #8]
 8007174:	2b00      	cmp	r3, #0
 8007176:	d002      	beq.n	800717e <HAL_UART_Transmit+0x26>
 8007178:	88fb      	ldrh	r3, [r7, #6]
 800717a:	2b00      	cmp	r3, #0
 800717c:	d101      	bne.n	8007182 <HAL_UART_Transmit+0x2a>
 800717e:	2301      	movs	r3, #1
 8007180:	e07a      	b.n	8007278 <HAL_UART_Transmit+0x120>
 8007182:	68fb      	ldr	r3, [r7, #12]
 8007184:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007188:	2b01      	cmp	r3, #1
 800718a:	d101      	bne.n	8007190 <HAL_UART_Transmit+0x38>
 800718c:	2302      	movs	r3, #2
 800718e:	e073      	b.n	8007278 <HAL_UART_Transmit+0x120>
 8007190:	68fb      	ldr	r3, [r7, #12]
 8007192:	2201      	movs	r2, #1
 8007194:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007198:	68fb      	ldr	r3, [r7, #12]
 800719a:	2200      	movs	r2, #0
 800719c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80071a0:	68fb      	ldr	r3, [r7, #12]
 80071a2:	2221      	movs	r2, #33	; 0x21
 80071a4:	679a      	str	r2, [r3, #120]	; 0x78
 80071a6:	f7fb fecd 	bl	8002f44 <HAL_GetTick>
 80071aa:	6178      	str	r0, [r7, #20]
 80071ac:	68fb      	ldr	r3, [r7, #12]
 80071ae:	88fa      	ldrh	r2, [r7, #6]
 80071b0:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	88fa      	ldrh	r2, [r7, #6]
 80071b8:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	689b      	ldr	r3, [r3, #8]
 80071c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80071c4:	d108      	bne.n	80071d8 <HAL_UART_Transmit+0x80>
 80071c6:	68fb      	ldr	r3, [r7, #12]
 80071c8:	691b      	ldr	r3, [r3, #16]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d104      	bne.n	80071d8 <HAL_UART_Transmit+0x80>
 80071ce:	2300      	movs	r3, #0
 80071d0:	61fb      	str	r3, [r7, #28]
 80071d2:	68bb      	ldr	r3, [r7, #8]
 80071d4:	61bb      	str	r3, [r7, #24]
 80071d6:	e003      	b.n	80071e0 <HAL_UART_Transmit+0x88>
 80071d8:	68bb      	ldr	r3, [r7, #8]
 80071da:	61fb      	str	r3, [r7, #28]
 80071dc:	2300      	movs	r3, #0
 80071de:	61bb      	str	r3, [r7, #24]
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	2200      	movs	r2, #0
 80071e4:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80071e8:	e02d      	b.n	8007246 <HAL_UART_Transmit+0xee>
 80071ea:	683b      	ldr	r3, [r7, #0]
 80071ec:	9300      	str	r3, [sp, #0]
 80071ee:	697b      	ldr	r3, [r7, #20]
 80071f0:	2200      	movs	r2, #0
 80071f2:	2180      	movs	r1, #128	; 0x80
 80071f4:	68f8      	ldr	r0, [r7, #12]
 80071f6:	f000 fba8 	bl	800794a <UART_WaitOnFlagUntilTimeout>
 80071fa:	4603      	mov	r3, r0
 80071fc:	2b00      	cmp	r3, #0
 80071fe:	d001      	beq.n	8007204 <HAL_UART_Transmit+0xac>
 8007200:	2303      	movs	r3, #3
 8007202:	e039      	b.n	8007278 <HAL_UART_Transmit+0x120>
 8007204:	69fb      	ldr	r3, [r7, #28]
 8007206:	2b00      	cmp	r3, #0
 8007208:	d10b      	bne.n	8007222 <HAL_UART_Transmit+0xca>
 800720a:	69bb      	ldr	r3, [r7, #24]
 800720c:	881a      	ldrh	r2, [r3, #0]
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007216:	b292      	uxth	r2, r2
 8007218:	851a      	strh	r2, [r3, #40]	; 0x28
 800721a:	69bb      	ldr	r3, [r7, #24]
 800721c:	3302      	adds	r3, #2
 800721e:	61bb      	str	r3, [r7, #24]
 8007220:	e008      	b.n	8007234 <HAL_UART_Transmit+0xdc>
 8007222:	69fb      	ldr	r3, [r7, #28]
 8007224:	781a      	ldrb	r2, [r3, #0]
 8007226:	68fb      	ldr	r3, [r7, #12]
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	b292      	uxth	r2, r2
 800722c:	851a      	strh	r2, [r3, #40]	; 0x28
 800722e:	69fb      	ldr	r3, [r7, #28]
 8007230:	3301      	adds	r3, #1
 8007232:	61fb      	str	r3, [r7, #28]
 8007234:	68fb      	ldr	r3, [r7, #12]
 8007236:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800723a:	b29b      	uxth	r3, r3
 800723c:	3b01      	subs	r3, #1
 800723e:	b29a      	uxth	r2, r3
 8007240:	68fb      	ldr	r3, [r7, #12]
 8007242:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8007246:	68fb      	ldr	r3, [r7, #12]
 8007248:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800724c:	b29b      	uxth	r3, r3
 800724e:	2b00      	cmp	r3, #0
 8007250:	d1cb      	bne.n	80071ea <HAL_UART_Transmit+0x92>
 8007252:	683b      	ldr	r3, [r7, #0]
 8007254:	9300      	str	r3, [sp, #0]
 8007256:	697b      	ldr	r3, [r7, #20]
 8007258:	2200      	movs	r2, #0
 800725a:	2140      	movs	r1, #64	; 0x40
 800725c:	68f8      	ldr	r0, [r7, #12]
 800725e:	f000 fb74 	bl	800794a <UART_WaitOnFlagUntilTimeout>
 8007262:	4603      	mov	r3, r0
 8007264:	2b00      	cmp	r3, #0
 8007266:	d001      	beq.n	800726c <HAL_UART_Transmit+0x114>
 8007268:	2303      	movs	r3, #3
 800726a:	e005      	b.n	8007278 <HAL_UART_Transmit+0x120>
 800726c:	68fb      	ldr	r3, [r7, #12]
 800726e:	2220      	movs	r2, #32
 8007270:	679a      	str	r2, [r3, #120]	; 0x78
 8007272:	2300      	movs	r3, #0
 8007274:	e000      	b.n	8007278 <HAL_UART_Transmit+0x120>
 8007276:	2302      	movs	r3, #2
 8007278:	4618      	mov	r0, r3
 800727a:	3720      	adds	r7, #32
 800727c:	46bd      	mov	sp, r7
 800727e:	bd80      	pop	{r7, pc}

08007280 <HAL_UART_Receive_DMA>:
 8007280:	b580      	push	{r7, lr}
 8007282:	b084      	sub	sp, #16
 8007284:	af00      	add	r7, sp, #0
 8007286:	60f8      	str	r0, [r7, #12]
 8007288:	60b9      	str	r1, [r7, #8]
 800728a:	4613      	mov	r3, r2
 800728c:	80fb      	strh	r3, [r7, #6]
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007292:	2b20      	cmp	r3, #32
 8007294:	d131      	bne.n	80072fa <HAL_UART_Receive_DMA+0x7a>
 8007296:	68bb      	ldr	r3, [r7, #8]
 8007298:	2b00      	cmp	r3, #0
 800729a:	d002      	beq.n	80072a2 <HAL_UART_Receive_DMA+0x22>
 800729c:	88fb      	ldrh	r3, [r7, #6]
 800729e:	2b00      	cmp	r3, #0
 80072a0:	d101      	bne.n	80072a6 <HAL_UART_Receive_DMA+0x26>
 80072a2:	2301      	movs	r3, #1
 80072a4:	e02a      	b.n	80072fc <HAL_UART_Receive_DMA+0x7c>
 80072a6:	68fb      	ldr	r3, [r7, #12]
 80072a8:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 80072ac:	2b01      	cmp	r3, #1
 80072ae:	d101      	bne.n	80072b4 <HAL_UART_Receive_DMA+0x34>
 80072b0:	2302      	movs	r3, #2
 80072b2:	e023      	b.n	80072fc <HAL_UART_Receive_DMA+0x7c>
 80072b4:	68fb      	ldr	r3, [r7, #12]
 80072b6:	2201      	movs	r2, #1
 80072b8:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	2200      	movs	r2, #0
 80072c0:	661a      	str	r2, [r3, #96]	; 0x60
 80072c2:	68fb      	ldr	r3, [r7, #12]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	4a0f      	ldr	r2, [pc, #60]	; (8007304 <HAL_UART_Receive_DMA+0x84>)
 80072c8:	4293      	cmp	r3, r2
 80072ca:	d00e      	beq.n	80072ea <HAL_UART_Receive_DMA+0x6a>
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	681b      	ldr	r3, [r3, #0]
 80072d0:	685b      	ldr	r3, [r3, #4]
 80072d2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80072d6:	2b00      	cmp	r3, #0
 80072d8:	d007      	beq.n	80072ea <HAL_UART_Receive_DMA+0x6a>
 80072da:	68fb      	ldr	r3, [r7, #12]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	681a      	ldr	r2, [r3, #0]
 80072e0:	68fb      	ldr	r3, [r7, #12]
 80072e2:	681b      	ldr	r3, [r3, #0]
 80072e4:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80072e8:	601a      	str	r2, [r3, #0]
 80072ea:	88fb      	ldrh	r3, [r7, #6]
 80072ec:	461a      	mov	r2, r3
 80072ee:	68b9      	ldr	r1, [r7, #8]
 80072f0:	68f8      	ldr	r0, [r7, #12]
 80072f2:	f000 fba7 	bl	8007a44 <UART_Start_Receive_DMA>
 80072f6:	4603      	mov	r3, r0
 80072f8:	e000      	b.n	80072fc <HAL_UART_Receive_DMA+0x7c>
 80072fa:	2302      	movs	r3, #2
 80072fc:	4618      	mov	r0, r3
 80072fe:	3710      	adds	r7, #16
 8007300:	46bd      	mov	sp, r7
 8007302:	bd80      	pop	{r7, pc}
 8007304:	40008000 	.word	0x40008000

08007308 <HAL_UART_RxCpltCallback>:
 8007308:	b480      	push	{r7}
 800730a:	b083      	sub	sp, #12
 800730c:	af00      	add	r7, sp, #0
 800730e:	6078      	str	r0, [r7, #4]
 8007310:	bf00      	nop
 8007312:	370c      	adds	r7, #12
 8007314:	46bd      	mov	sp, r7
 8007316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800731a:	4770      	bx	lr

0800731c <HAL_UART_RxHalfCpltCallback>:
 800731c:	b480      	push	{r7}
 800731e:	b083      	sub	sp, #12
 8007320:	af00      	add	r7, sp, #0
 8007322:	6078      	str	r0, [r7, #4]
 8007324:	bf00      	nop
 8007326:	370c      	adds	r7, #12
 8007328:	46bd      	mov	sp, r7
 800732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732e:	4770      	bx	lr

08007330 <HAL_UART_ErrorCallback>:
 8007330:	b480      	push	{r7}
 8007332:	b083      	sub	sp, #12
 8007334:	af00      	add	r7, sp, #0
 8007336:	6078      	str	r0, [r7, #4]
 8007338:	bf00      	nop
 800733a:	370c      	adds	r7, #12
 800733c:	46bd      	mov	sp, r7
 800733e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007342:	4770      	bx	lr

08007344 <HAL_UARTEx_RxEventCallback>:
 8007344:	b480      	push	{r7}
 8007346:	b083      	sub	sp, #12
 8007348:	af00      	add	r7, sp, #0
 800734a:	6078      	str	r0, [r7, #4]
 800734c:	460b      	mov	r3, r1
 800734e:	807b      	strh	r3, [r7, #2]
 8007350:	bf00      	nop
 8007352:	370c      	adds	r7, #12
 8007354:	46bd      	mov	sp, r7
 8007356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800735a:	4770      	bx	lr

0800735c <UART_SetConfig>:
 800735c:	b5b0      	push	{r4, r5, r7, lr}
 800735e:	b088      	sub	sp, #32
 8007360:	af00      	add	r7, sp, #0
 8007362:	6078      	str	r0, [r7, #4]
 8007364:	2300      	movs	r3, #0
 8007366:	76bb      	strb	r3, [r7, #26]
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	689a      	ldr	r2, [r3, #8]
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	691b      	ldr	r3, [r3, #16]
 8007370:	431a      	orrs	r2, r3
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	695b      	ldr	r3, [r3, #20]
 8007376:	431a      	orrs	r2, r3
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	69db      	ldr	r3, [r3, #28]
 800737c:	4313      	orrs	r3, r2
 800737e:	61fb      	str	r3, [r7, #28]
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	681a      	ldr	r2, [r3, #0]
 8007386:	4baf      	ldr	r3, [pc, #700]	; (8007644 <UART_SetConfig+0x2e8>)
 8007388:	4013      	ands	r3, r2
 800738a:	687a      	ldr	r2, [r7, #4]
 800738c:	6812      	ldr	r2, [r2, #0]
 800738e:	69f9      	ldr	r1, [r7, #28]
 8007390:	430b      	orrs	r3, r1
 8007392:	6013      	str	r3, [r2, #0]
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	685b      	ldr	r3, [r3, #4]
 800739a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	68da      	ldr	r2, [r3, #12]
 80073a2:	687b      	ldr	r3, [r7, #4]
 80073a4:	681b      	ldr	r3, [r3, #0]
 80073a6:	430a      	orrs	r2, r1
 80073a8:	605a      	str	r2, [r3, #4]
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	699b      	ldr	r3, [r3, #24]
 80073ae:	61fb      	str	r3, [r7, #28]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	4aa4      	ldr	r2, [pc, #656]	; (8007648 <UART_SetConfig+0x2ec>)
 80073b6:	4293      	cmp	r3, r2
 80073b8:	d004      	beq.n	80073c4 <UART_SetConfig+0x68>
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	6a1b      	ldr	r3, [r3, #32]
 80073be:	69fa      	ldr	r2, [r7, #28]
 80073c0:	4313      	orrs	r3, r2
 80073c2:	61fb      	str	r3, [r7, #28]
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	681b      	ldr	r3, [r3, #0]
 80073c8:	689b      	ldr	r3, [r3, #8]
 80073ca:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	69fa      	ldr	r2, [r7, #28]
 80073d4:	430a      	orrs	r2, r1
 80073d6:	609a      	str	r2, [r3, #8]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	4a9b      	ldr	r2, [pc, #620]	; (800764c <UART_SetConfig+0x2f0>)
 80073de:	4293      	cmp	r3, r2
 80073e0:	d121      	bne.n	8007426 <UART_SetConfig+0xca>
 80073e2:	4b9b      	ldr	r3, [pc, #620]	; (8007650 <UART_SetConfig+0x2f4>)
 80073e4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80073e8:	f003 0303 	and.w	r3, r3, #3
 80073ec:	2b03      	cmp	r3, #3
 80073ee:	d817      	bhi.n	8007420 <UART_SetConfig+0xc4>
 80073f0:	a201      	add	r2, pc, #4	; (adr r2, 80073f8 <UART_SetConfig+0x9c>)
 80073f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80073f6:	bf00      	nop
 80073f8:	08007409 	.word	0x08007409
 80073fc:	08007415 	.word	0x08007415
 8007400:	0800740f 	.word	0x0800740f
 8007404:	0800741b 	.word	0x0800741b
 8007408:	2301      	movs	r3, #1
 800740a:	76fb      	strb	r3, [r7, #27]
 800740c:	e070      	b.n	80074f0 <UART_SetConfig+0x194>
 800740e:	2302      	movs	r3, #2
 8007410:	76fb      	strb	r3, [r7, #27]
 8007412:	e06d      	b.n	80074f0 <UART_SetConfig+0x194>
 8007414:	2304      	movs	r3, #4
 8007416:	76fb      	strb	r3, [r7, #27]
 8007418:	e06a      	b.n	80074f0 <UART_SetConfig+0x194>
 800741a:	2308      	movs	r3, #8
 800741c:	76fb      	strb	r3, [r7, #27]
 800741e:	e067      	b.n	80074f0 <UART_SetConfig+0x194>
 8007420:	2310      	movs	r3, #16
 8007422:	76fb      	strb	r3, [r7, #27]
 8007424:	e064      	b.n	80074f0 <UART_SetConfig+0x194>
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	4a8a      	ldr	r2, [pc, #552]	; (8007654 <UART_SetConfig+0x2f8>)
 800742c:	4293      	cmp	r3, r2
 800742e:	d132      	bne.n	8007496 <UART_SetConfig+0x13a>
 8007430:	4b87      	ldr	r3, [pc, #540]	; (8007650 <UART_SetConfig+0x2f4>)
 8007432:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007436:	f003 030c 	and.w	r3, r3, #12
 800743a:	2b0c      	cmp	r3, #12
 800743c:	d828      	bhi.n	8007490 <UART_SetConfig+0x134>
 800743e:	a201      	add	r2, pc, #4	; (adr r2, 8007444 <UART_SetConfig+0xe8>)
 8007440:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007444:	08007479 	.word	0x08007479
 8007448:	08007491 	.word	0x08007491
 800744c:	08007491 	.word	0x08007491
 8007450:	08007491 	.word	0x08007491
 8007454:	08007485 	.word	0x08007485
 8007458:	08007491 	.word	0x08007491
 800745c:	08007491 	.word	0x08007491
 8007460:	08007491 	.word	0x08007491
 8007464:	0800747f 	.word	0x0800747f
 8007468:	08007491 	.word	0x08007491
 800746c:	08007491 	.word	0x08007491
 8007470:	08007491 	.word	0x08007491
 8007474:	0800748b 	.word	0x0800748b
 8007478:	2300      	movs	r3, #0
 800747a:	76fb      	strb	r3, [r7, #27]
 800747c:	e038      	b.n	80074f0 <UART_SetConfig+0x194>
 800747e:	2302      	movs	r3, #2
 8007480:	76fb      	strb	r3, [r7, #27]
 8007482:	e035      	b.n	80074f0 <UART_SetConfig+0x194>
 8007484:	2304      	movs	r3, #4
 8007486:	76fb      	strb	r3, [r7, #27]
 8007488:	e032      	b.n	80074f0 <UART_SetConfig+0x194>
 800748a:	2308      	movs	r3, #8
 800748c:	76fb      	strb	r3, [r7, #27]
 800748e:	e02f      	b.n	80074f0 <UART_SetConfig+0x194>
 8007490:	2310      	movs	r3, #16
 8007492:	76fb      	strb	r3, [r7, #27]
 8007494:	e02c      	b.n	80074f0 <UART_SetConfig+0x194>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	681b      	ldr	r3, [r3, #0]
 800749a:	4a6b      	ldr	r2, [pc, #428]	; (8007648 <UART_SetConfig+0x2ec>)
 800749c:	4293      	cmp	r3, r2
 800749e:	d125      	bne.n	80074ec <UART_SetConfig+0x190>
 80074a0:	4b6b      	ldr	r3, [pc, #428]	; (8007650 <UART_SetConfig+0x2f4>)
 80074a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80074a6:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 80074aa:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80074ae:	d017      	beq.n	80074e0 <UART_SetConfig+0x184>
 80074b0:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80074b4:	d817      	bhi.n	80074e6 <UART_SetConfig+0x18a>
 80074b6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80074ba:	d00b      	beq.n	80074d4 <UART_SetConfig+0x178>
 80074bc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80074c0:	d811      	bhi.n	80074e6 <UART_SetConfig+0x18a>
 80074c2:	2b00      	cmp	r3, #0
 80074c4:	d003      	beq.n	80074ce <UART_SetConfig+0x172>
 80074c6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80074ca:	d006      	beq.n	80074da <UART_SetConfig+0x17e>
 80074cc:	e00b      	b.n	80074e6 <UART_SetConfig+0x18a>
 80074ce:	2300      	movs	r3, #0
 80074d0:	76fb      	strb	r3, [r7, #27]
 80074d2:	e00d      	b.n	80074f0 <UART_SetConfig+0x194>
 80074d4:	2302      	movs	r3, #2
 80074d6:	76fb      	strb	r3, [r7, #27]
 80074d8:	e00a      	b.n	80074f0 <UART_SetConfig+0x194>
 80074da:	2304      	movs	r3, #4
 80074dc:	76fb      	strb	r3, [r7, #27]
 80074de:	e007      	b.n	80074f0 <UART_SetConfig+0x194>
 80074e0:	2308      	movs	r3, #8
 80074e2:	76fb      	strb	r3, [r7, #27]
 80074e4:	e004      	b.n	80074f0 <UART_SetConfig+0x194>
 80074e6:	2310      	movs	r3, #16
 80074e8:	76fb      	strb	r3, [r7, #27]
 80074ea:	e001      	b.n	80074f0 <UART_SetConfig+0x194>
 80074ec:	2310      	movs	r3, #16
 80074ee:	76fb      	strb	r3, [r7, #27]
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	681b      	ldr	r3, [r3, #0]
 80074f4:	4a54      	ldr	r2, [pc, #336]	; (8007648 <UART_SetConfig+0x2ec>)
 80074f6:	4293      	cmp	r3, r2
 80074f8:	d173      	bne.n	80075e2 <UART_SetConfig+0x286>
 80074fa:	7efb      	ldrb	r3, [r7, #27]
 80074fc:	2b08      	cmp	r3, #8
 80074fe:	d824      	bhi.n	800754a <UART_SetConfig+0x1ee>
 8007500:	a201      	add	r2, pc, #4	; (adr r2, 8007508 <UART_SetConfig+0x1ac>)
 8007502:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007506:	bf00      	nop
 8007508:	0800752d 	.word	0x0800752d
 800750c:	0800754b 	.word	0x0800754b
 8007510:	08007535 	.word	0x08007535
 8007514:	0800754b 	.word	0x0800754b
 8007518:	0800753b 	.word	0x0800753b
 800751c:	0800754b 	.word	0x0800754b
 8007520:	0800754b 	.word	0x0800754b
 8007524:	0800754b 	.word	0x0800754b
 8007528:	08007543 	.word	0x08007543
 800752c:	f7fe f940 	bl	80057b0 <HAL_RCC_GetPCLK1Freq>
 8007530:	6178      	str	r0, [r7, #20]
 8007532:	e00f      	b.n	8007554 <UART_SetConfig+0x1f8>
 8007534:	4b48      	ldr	r3, [pc, #288]	; (8007658 <UART_SetConfig+0x2fc>)
 8007536:	617b      	str	r3, [r7, #20]
 8007538:	e00c      	b.n	8007554 <UART_SetConfig+0x1f8>
 800753a:	f7fe f8a1 	bl	8005680 <HAL_RCC_GetSysClockFreq>
 800753e:	6178      	str	r0, [r7, #20]
 8007540:	e008      	b.n	8007554 <UART_SetConfig+0x1f8>
 8007542:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007546:	617b      	str	r3, [r7, #20]
 8007548:	e004      	b.n	8007554 <UART_SetConfig+0x1f8>
 800754a:	2300      	movs	r3, #0
 800754c:	617b      	str	r3, [r7, #20]
 800754e:	2301      	movs	r3, #1
 8007550:	76bb      	strb	r3, [r7, #26]
 8007552:	bf00      	nop
 8007554:	697b      	ldr	r3, [r7, #20]
 8007556:	2b00      	cmp	r3, #0
 8007558:	f000 80fe 	beq.w	8007758 <UART_SetConfig+0x3fc>
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	685a      	ldr	r2, [r3, #4]
 8007560:	4613      	mov	r3, r2
 8007562:	005b      	lsls	r3, r3, #1
 8007564:	4413      	add	r3, r2
 8007566:	697a      	ldr	r2, [r7, #20]
 8007568:	429a      	cmp	r2, r3
 800756a:	d305      	bcc.n	8007578 <UART_SetConfig+0x21c>
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	685b      	ldr	r3, [r3, #4]
 8007570:	031b      	lsls	r3, r3, #12
 8007572:	697a      	ldr	r2, [r7, #20]
 8007574:	429a      	cmp	r2, r3
 8007576:	d902      	bls.n	800757e <UART_SetConfig+0x222>
 8007578:	2301      	movs	r3, #1
 800757a:	76bb      	strb	r3, [r7, #26]
 800757c:	e0ec      	b.n	8007758 <UART_SetConfig+0x3fc>
 800757e:	697b      	ldr	r3, [r7, #20]
 8007580:	4618      	mov	r0, r3
 8007582:	f04f 0100 	mov.w	r1, #0
 8007586:	f04f 0200 	mov.w	r2, #0
 800758a:	f04f 0300 	mov.w	r3, #0
 800758e:	020b      	lsls	r3, r1, #8
 8007590:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 8007594:	0202      	lsls	r2, r0, #8
 8007596:	6879      	ldr	r1, [r7, #4]
 8007598:	6849      	ldr	r1, [r1, #4]
 800759a:	0849      	lsrs	r1, r1, #1
 800759c:	4608      	mov	r0, r1
 800759e:	f04f 0100 	mov.w	r1, #0
 80075a2:	1814      	adds	r4, r2, r0
 80075a4:	eb43 0501 	adc.w	r5, r3, r1
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	685b      	ldr	r3, [r3, #4]
 80075ac:	461a      	mov	r2, r3
 80075ae:	f04f 0300 	mov.w	r3, #0
 80075b2:	4620      	mov	r0, r4
 80075b4:	4629      	mov	r1, r5
 80075b6:	f7f9 fad9 	bl	8000b6c <__aeabi_uldivmod>
 80075ba:	4602      	mov	r2, r0
 80075bc:	460b      	mov	r3, r1
 80075be:	4613      	mov	r3, r2
 80075c0:	613b      	str	r3, [r7, #16]
 80075c2:	693b      	ldr	r3, [r7, #16]
 80075c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80075c8:	d308      	bcc.n	80075dc <UART_SetConfig+0x280>
 80075ca:	693b      	ldr	r3, [r7, #16]
 80075cc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80075d0:	d204      	bcs.n	80075dc <UART_SetConfig+0x280>
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	693a      	ldr	r2, [r7, #16]
 80075d8:	60da      	str	r2, [r3, #12]
 80075da:	e0bd      	b.n	8007758 <UART_SetConfig+0x3fc>
 80075dc:	2301      	movs	r3, #1
 80075de:	76bb      	strb	r3, [r7, #26]
 80075e0:	e0ba      	b.n	8007758 <UART_SetConfig+0x3fc>
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	69db      	ldr	r3, [r3, #28]
 80075e6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80075ea:	d168      	bne.n	80076be <UART_SetConfig+0x362>
 80075ec:	7efb      	ldrb	r3, [r7, #27]
 80075ee:	2b08      	cmp	r3, #8
 80075f0:	d834      	bhi.n	800765c <UART_SetConfig+0x300>
 80075f2:	a201      	add	r2, pc, #4	; (adr r2, 80075f8 <UART_SetConfig+0x29c>)
 80075f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075f8:	0800761d 	.word	0x0800761d
 80075fc:	08007625 	.word	0x08007625
 8007600:	0800762d 	.word	0x0800762d
 8007604:	0800765d 	.word	0x0800765d
 8007608:	08007633 	.word	0x08007633
 800760c:	0800765d 	.word	0x0800765d
 8007610:	0800765d 	.word	0x0800765d
 8007614:	0800765d 	.word	0x0800765d
 8007618:	0800763b 	.word	0x0800763b
 800761c:	f7fe f8c8 	bl	80057b0 <HAL_RCC_GetPCLK1Freq>
 8007620:	6178      	str	r0, [r7, #20]
 8007622:	e020      	b.n	8007666 <UART_SetConfig+0x30a>
 8007624:	f7fe f8da 	bl	80057dc <HAL_RCC_GetPCLK2Freq>
 8007628:	6178      	str	r0, [r7, #20]
 800762a:	e01c      	b.n	8007666 <UART_SetConfig+0x30a>
 800762c:	4b0a      	ldr	r3, [pc, #40]	; (8007658 <UART_SetConfig+0x2fc>)
 800762e:	617b      	str	r3, [r7, #20]
 8007630:	e019      	b.n	8007666 <UART_SetConfig+0x30a>
 8007632:	f7fe f825 	bl	8005680 <HAL_RCC_GetSysClockFreq>
 8007636:	6178      	str	r0, [r7, #20]
 8007638:	e015      	b.n	8007666 <UART_SetConfig+0x30a>
 800763a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800763e:	617b      	str	r3, [r7, #20]
 8007640:	e011      	b.n	8007666 <UART_SetConfig+0x30a>
 8007642:	bf00      	nop
 8007644:	efff69f3 	.word	0xefff69f3
 8007648:	40008000 	.word	0x40008000
 800764c:	40013800 	.word	0x40013800
 8007650:	40021000 	.word	0x40021000
 8007654:	40004400 	.word	0x40004400
 8007658:	00f42400 	.word	0x00f42400
 800765c:	2300      	movs	r3, #0
 800765e:	617b      	str	r3, [r7, #20]
 8007660:	2301      	movs	r3, #1
 8007662:	76bb      	strb	r3, [r7, #26]
 8007664:	bf00      	nop
 8007666:	697b      	ldr	r3, [r7, #20]
 8007668:	2b00      	cmp	r3, #0
 800766a:	d075      	beq.n	8007758 <UART_SetConfig+0x3fc>
 800766c:	697b      	ldr	r3, [r7, #20]
 800766e:	005a      	lsls	r2, r3, #1
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	685b      	ldr	r3, [r3, #4]
 8007674:	085b      	lsrs	r3, r3, #1
 8007676:	441a      	add	r2, r3
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	685b      	ldr	r3, [r3, #4]
 800767c:	fbb2 f3f3 	udiv	r3, r2, r3
 8007680:	b29b      	uxth	r3, r3
 8007682:	613b      	str	r3, [r7, #16]
 8007684:	693b      	ldr	r3, [r7, #16]
 8007686:	2b0f      	cmp	r3, #15
 8007688:	d916      	bls.n	80076b8 <UART_SetConfig+0x35c>
 800768a:	693b      	ldr	r3, [r7, #16]
 800768c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007690:	d212      	bcs.n	80076b8 <UART_SetConfig+0x35c>
 8007692:	693b      	ldr	r3, [r7, #16]
 8007694:	b29b      	uxth	r3, r3
 8007696:	f023 030f 	bic.w	r3, r3, #15
 800769a:	81fb      	strh	r3, [r7, #14]
 800769c:	693b      	ldr	r3, [r7, #16]
 800769e:	085b      	lsrs	r3, r3, #1
 80076a0:	b29b      	uxth	r3, r3
 80076a2:	f003 0307 	and.w	r3, r3, #7
 80076a6:	b29a      	uxth	r2, r3
 80076a8:	89fb      	ldrh	r3, [r7, #14]
 80076aa:	4313      	orrs	r3, r2
 80076ac:	81fb      	strh	r3, [r7, #14]
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	89fa      	ldrh	r2, [r7, #14]
 80076b4:	60da      	str	r2, [r3, #12]
 80076b6:	e04f      	b.n	8007758 <UART_SetConfig+0x3fc>
 80076b8:	2301      	movs	r3, #1
 80076ba:	76bb      	strb	r3, [r7, #26]
 80076bc:	e04c      	b.n	8007758 <UART_SetConfig+0x3fc>
 80076be:	7efb      	ldrb	r3, [r7, #27]
 80076c0:	2b08      	cmp	r3, #8
 80076c2:	d828      	bhi.n	8007716 <UART_SetConfig+0x3ba>
 80076c4:	a201      	add	r2, pc, #4	; (adr r2, 80076cc <UART_SetConfig+0x370>)
 80076c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80076ca:	bf00      	nop
 80076cc:	080076f1 	.word	0x080076f1
 80076d0:	080076f9 	.word	0x080076f9
 80076d4:	08007701 	.word	0x08007701
 80076d8:	08007717 	.word	0x08007717
 80076dc:	08007707 	.word	0x08007707
 80076e0:	08007717 	.word	0x08007717
 80076e4:	08007717 	.word	0x08007717
 80076e8:	08007717 	.word	0x08007717
 80076ec:	0800770f 	.word	0x0800770f
 80076f0:	f7fe f85e 	bl	80057b0 <HAL_RCC_GetPCLK1Freq>
 80076f4:	6178      	str	r0, [r7, #20]
 80076f6:	e013      	b.n	8007720 <UART_SetConfig+0x3c4>
 80076f8:	f7fe f870 	bl	80057dc <HAL_RCC_GetPCLK2Freq>
 80076fc:	6178      	str	r0, [r7, #20]
 80076fe:	e00f      	b.n	8007720 <UART_SetConfig+0x3c4>
 8007700:	4b1b      	ldr	r3, [pc, #108]	; (8007770 <UART_SetConfig+0x414>)
 8007702:	617b      	str	r3, [r7, #20]
 8007704:	e00c      	b.n	8007720 <UART_SetConfig+0x3c4>
 8007706:	f7fd ffbb 	bl	8005680 <HAL_RCC_GetSysClockFreq>
 800770a:	6178      	str	r0, [r7, #20]
 800770c:	e008      	b.n	8007720 <UART_SetConfig+0x3c4>
 800770e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007712:	617b      	str	r3, [r7, #20]
 8007714:	e004      	b.n	8007720 <UART_SetConfig+0x3c4>
 8007716:	2300      	movs	r3, #0
 8007718:	617b      	str	r3, [r7, #20]
 800771a:	2301      	movs	r3, #1
 800771c:	76bb      	strb	r3, [r7, #26]
 800771e:	bf00      	nop
 8007720:	697b      	ldr	r3, [r7, #20]
 8007722:	2b00      	cmp	r3, #0
 8007724:	d018      	beq.n	8007758 <UART_SetConfig+0x3fc>
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	685b      	ldr	r3, [r3, #4]
 800772a:	085a      	lsrs	r2, r3, #1
 800772c:	697b      	ldr	r3, [r7, #20]
 800772e:	441a      	add	r2, r3
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	685b      	ldr	r3, [r3, #4]
 8007734:	fbb2 f3f3 	udiv	r3, r2, r3
 8007738:	b29b      	uxth	r3, r3
 800773a:	613b      	str	r3, [r7, #16]
 800773c:	693b      	ldr	r3, [r7, #16]
 800773e:	2b0f      	cmp	r3, #15
 8007740:	d908      	bls.n	8007754 <UART_SetConfig+0x3f8>
 8007742:	693b      	ldr	r3, [r7, #16]
 8007744:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007748:	d204      	bcs.n	8007754 <UART_SetConfig+0x3f8>
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	681b      	ldr	r3, [r3, #0]
 800774e:	693a      	ldr	r2, [r7, #16]
 8007750:	60da      	str	r2, [r3, #12]
 8007752:	e001      	b.n	8007758 <UART_SetConfig+0x3fc>
 8007754:	2301      	movs	r3, #1
 8007756:	76bb      	strb	r3, [r7, #26]
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	2200      	movs	r2, #0
 800775c:	665a      	str	r2, [r3, #100]	; 0x64
 800775e:	687b      	ldr	r3, [r7, #4]
 8007760:	2200      	movs	r2, #0
 8007762:	669a      	str	r2, [r3, #104]	; 0x68
 8007764:	7ebb      	ldrb	r3, [r7, #26]
 8007766:	4618      	mov	r0, r3
 8007768:	3720      	adds	r7, #32
 800776a:	46bd      	mov	sp, r7
 800776c:	bdb0      	pop	{r4, r5, r7, pc}
 800776e:	bf00      	nop
 8007770:	00f42400 	.word	0x00f42400

08007774 <UART_AdvFeatureConfig>:
 8007774:	b480      	push	{r7}
 8007776:	b083      	sub	sp, #12
 8007778:	af00      	add	r7, sp, #0
 800777a:	6078      	str	r0, [r7, #4]
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007780:	f003 0301 	and.w	r3, r3, #1
 8007784:	2b00      	cmp	r3, #0
 8007786:	d00a      	beq.n	800779e <UART_AdvFeatureConfig+0x2a>
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	681b      	ldr	r3, [r3, #0]
 800778c:	685b      	ldr	r3, [r3, #4]
 800778e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	430a      	orrs	r2, r1
 800779c:	605a      	str	r2, [r3, #4]
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077a2:	f003 0302 	and.w	r3, r3, #2
 80077a6:	2b00      	cmp	r3, #0
 80077a8:	d00a      	beq.n	80077c0 <UART_AdvFeatureConfig+0x4c>
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	681b      	ldr	r3, [r3, #0]
 80077ae:	685b      	ldr	r3, [r3, #4]
 80077b0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	430a      	orrs	r2, r1
 80077be:	605a      	str	r2, [r3, #4]
 80077c0:	687b      	ldr	r3, [r7, #4]
 80077c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077c4:	f003 0304 	and.w	r3, r3, #4
 80077c8:	2b00      	cmp	r3, #0
 80077ca:	d00a      	beq.n	80077e2 <UART_AdvFeatureConfig+0x6e>
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	685b      	ldr	r3, [r3, #4]
 80077d2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	681b      	ldr	r3, [r3, #0]
 80077de:	430a      	orrs	r2, r1
 80077e0:	605a      	str	r2, [r3, #4]
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077e6:	f003 0308 	and.w	r3, r3, #8
 80077ea:	2b00      	cmp	r3, #0
 80077ec:	d00a      	beq.n	8007804 <UART_AdvFeatureConfig+0x90>
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	685b      	ldr	r3, [r3, #4]
 80077f4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	681b      	ldr	r3, [r3, #0]
 8007800:	430a      	orrs	r2, r1
 8007802:	605a      	str	r2, [r3, #4]
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007808:	f003 0310 	and.w	r3, r3, #16
 800780c:	2b00      	cmp	r3, #0
 800780e:	d00a      	beq.n	8007826 <UART_AdvFeatureConfig+0xb2>
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	689b      	ldr	r3, [r3, #8]
 8007816:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	430a      	orrs	r2, r1
 8007824:	609a      	str	r2, [r3, #8]
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800782a:	f003 0320 	and.w	r3, r3, #32
 800782e:	2b00      	cmp	r3, #0
 8007830:	d00a      	beq.n	8007848 <UART_AdvFeatureConfig+0xd4>
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	689b      	ldr	r3, [r3, #8]
 8007838:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	430a      	orrs	r2, r1
 8007846:	609a      	str	r2, [r3, #8]
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800784c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007850:	2b00      	cmp	r3, #0
 8007852:	d01a      	beq.n	800788a <UART_AdvFeatureConfig+0x116>
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	681b      	ldr	r3, [r3, #0]
 8007858:	685b      	ldr	r3, [r3, #4]
 800785a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	430a      	orrs	r2, r1
 8007868:	605a      	str	r2, [r3, #4]
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800786e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007872:	d10a      	bne.n	800788a <UART_AdvFeatureConfig+0x116>
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	681b      	ldr	r3, [r3, #0]
 8007878:	685b      	ldr	r3, [r3, #4]
 800787a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	681b      	ldr	r3, [r3, #0]
 8007886:	430a      	orrs	r2, r1
 8007888:	605a      	str	r2, [r3, #4]
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800788e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007892:	2b00      	cmp	r3, #0
 8007894:	d00a      	beq.n	80078ac <UART_AdvFeatureConfig+0x138>
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	681b      	ldr	r3, [r3, #0]
 800789a:	685b      	ldr	r3, [r3, #4]
 800789c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	430a      	orrs	r2, r1
 80078aa:	605a      	str	r2, [r3, #4]
 80078ac:	bf00      	nop
 80078ae:	370c      	adds	r7, #12
 80078b0:	46bd      	mov	sp, r7
 80078b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078b6:	4770      	bx	lr

080078b8 <UART_CheckIdleState>:
 80078b8:	b580      	push	{r7, lr}
 80078ba:	b086      	sub	sp, #24
 80078bc:	af02      	add	r7, sp, #8
 80078be:	6078      	str	r0, [r7, #4]
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	2200      	movs	r2, #0
 80078c4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80078c8:	f7fb fb3c 	bl	8002f44 <HAL_GetTick>
 80078cc:	60f8      	str	r0, [r7, #12]
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	681b      	ldr	r3, [r3, #0]
 80078d4:	f003 0308 	and.w	r3, r3, #8
 80078d8:	2b08      	cmp	r3, #8
 80078da:	d10e      	bne.n	80078fa <UART_CheckIdleState+0x42>
 80078dc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80078e0:	9300      	str	r3, [sp, #0]
 80078e2:	68fb      	ldr	r3, [r7, #12]
 80078e4:	2200      	movs	r2, #0
 80078e6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80078ea:	6878      	ldr	r0, [r7, #4]
 80078ec:	f000 f82d 	bl	800794a <UART_WaitOnFlagUntilTimeout>
 80078f0:	4603      	mov	r3, r0
 80078f2:	2b00      	cmp	r3, #0
 80078f4:	d001      	beq.n	80078fa <UART_CheckIdleState+0x42>
 80078f6:	2303      	movs	r3, #3
 80078f8:	e023      	b.n	8007942 <UART_CheckIdleState+0x8a>
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	681b      	ldr	r3, [r3, #0]
 8007900:	f003 0304 	and.w	r3, r3, #4
 8007904:	2b04      	cmp	r3, #4
 8007906:	d10e      	bne.n	8007926 <UART_CheckIdleState+0x6e>
 8007908:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800790c:	9300      	str	r3, [sp, #0]
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	2200      	movs	r2, #0
 8007912:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8007916:	6878      	ldr	r0, [r7, #4]
 8007918:	f000 f817 	bl	800794a <UART_WaitOnFlagUntilTimeout>
 800791c:	4603      	mov	r3, r0
 800791e:	2b00      	cmp	r3, #0
 8007920:	d001      	beq.n	8007926 <UART_CheckIdleState+0x6e>
 8007922:	2303      	movs	r3, #3
 8007924:	e00d      	b.n	8007942 <UART_CheckIdleState+0x8a>
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	2220      	movs	r2, #32
 800792a:	679a      	str	r2, [r3, #120]	; 0x78
 800792c:	687b      	ldr	r3, [r7, #4]
 800792e:	2220      	movs	r2, #32
 8007930:	67da      	str	r2, [r3, #124]	; 0x7c
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	2200      	movs	r2, #0
 8007936:	661a      	str	r2, [r3, #96]	; 0x60
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	2200      	movs	r2, #0
 800793c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007940:	2300      	movs	r3, #0
 8007942:	4618      	mov	r0, r3
 8007944:	3710      	adds	r7, #16
 8007946:	46bd      	mov	sp, r7
 8007948:	bd80      	pop	{r7, pc}

0800794a <UART_WaitOnFlagUntilTimeout>:
 800794a:	b580      	push	{r7, lr}
 800794c:	b084      	sub	sp, #16
 800794e:	af00      	add	r7, sp, #0
 8007950:	60f8      	str	r0, [r7, #12]
 8007952:	60b9      	str	r1, [r7, #8]
 8007954:	603b      	str	r3, [r7, #0]
 8007956:	4613      	mov	r3, r2
 8007958:	71fb      	strb	r3, [r7, #7]
 800795a:	e05e      	b.n	8007a1a <UART_WaitOnFlagUntilTimeout+0xd0>
 800795c:	69bb      	ldr	r3, [r7, #24]
 800795e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8007962:	d05a      	beq.n	8007a1a <UART_WaitOnFlagUntilTimeout+0xd0>
 8007964:	f7fb faee 	bl	8002f44 <HAL_GetTick>
 8007968:	4602      	mov	r2, r0
 800796a:	683b      	ldr	r3, [r7, #0]
 800796c:	1ad3      	subs	r3, r2, r3
 800796e:	69ba      	ldr	r2, [r7, #24]
 8007970:	429a      	cmp	r2, r3
 8007972:	d302      	bcc.n	800797a <UART_WaitOnFlagUntilTimeout+0x30>
 8007974:	69bb      	ldr	r3, [r7, #24]
 8007976:	2b00      	cmp	r3, #0
 8007978:	d11b      	bne.n	80079b2 <UART_WaitOnFlagUntilTimeout+0x68>
 800797a:	68fb      	ldr	r3, [r7, #12]
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	681a      	ldr	r2, [r3, #0]
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8007988:	601a      	str	r2, [r3, #0]
 800798a:	68fb      	ldr	r3, [r7, #12]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	689a      	ldr	r2, [r3, #8]
 8007990:	68fb      	ldr	r3, [r7, #12]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	f022 0201 	bic.w	r2, r2, #1
 8007998:	609a      	str	r2, [r3, #8]
 800799a:	68fb      	ldr	r3, [r7, #12]
 800799c:	2220      	movs	r2, #32
 800799e:	679a      	str	r2, [r3, #120]	; 0x78
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	2220      	movs	r2, #32
 80079a4:	67da      	str	r2, [r3, #124]	; 0x7c
 80079a6:	68fb      	ldr	r3, [r7, #12]
 80079a8:	2200      	movs	r2, #0
 80079aa:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 80079ae:	2303      	movs	r3, #3
 80079b0:	e043      	b.n	8007a3a <UART_WaitOnFlagUntilTimeout+0xf0>
 80079b2:	68fb      	ldr	r3, [r7, #12]
 80079b4:	681b      	ldr	r3, [r3, #0]
 80079b6:	681b      	ldr	r3, [r3, #0]
 80079b8:	f003 0304 	and.w	r3, r3, #4
 80079bc:	2b00      	cmp	r3, #0
 80079be:	d02c      	beq.n	8007a1a <UART_WaitOnFlagUntilTimeout+0xd0>
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	681b      	ldr	r3, [r3, #0]
 80079c4:	69db      	ldr	r3, [r3, #28]
 80079c6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80079ca:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80079ce:	d124      	bne.n	8007a1a <UART_WaitOnFlagUntilTimeout+0xd0>
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80079d8:	621a      	str	r2, [r3, #32]
 80079da:	68fb      	ldr	r3, [r7, #12]
 80079dc:	681b      	ldr	r3, [r3, #0]
 80079de:	681a      	ldr	r2, [r3, #0]
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80079e8:	601a      	str	r2, [r3, #0]
 80079ea:	68fb      	ldr	r3, [r7, #12]
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	689a      	ldr	r2, [r3, #8]
 80079f0:	68fb      	ldr	r3, [r7, #12]
 80079f2:	681b      	ldr	r3, [r3, #0]
 80079f4:	f022 0201 	bic.w	r2, r2, #1
 80079f8:	609a      	str	r2, [r3, #8]
 80079fa:	68fb      	ldr	r3, [r7, #12]
 80079fc:	2220      	movs	r2, #32
 80079fe:	679a      	str	r2, [r3, #120]	; 0x78
 8007a00:	68fb      	ldr	r3, [r7, #12]
 8007a02:	2220      	movs	r2, #32
 8007a04:	67da      	str	r2, [r3, #124]	; 0x7c
 8007a06:	68fb      	ldr	r3, [r7, #12]
 8007a08:	2220      	movs	r2, #32
 8007a0a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007a0e:	68fb      	ldr	r3, [r7, #12]
 8007a10:	2200      	movs	r2, #0
 8007a12:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007a16:	2303      	movs	r3, #3
 8007a18:	e00f      	b.n	8007a3a <UART_WaitOnFlagUntilTimeout+0xf0>
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	69da      	ldr	r2, [r3, #28]
 8007a20:	68bb      	ldr	r3, [r7, #8]
 8007a22:	4013      	ands	r3, r2
 8007a24:	68ba      	ldr	r2, [r7, #8]
 8007a26:	429a      	cmp	r2, r3
 8007a28:	bf0c      	ite	eq
 8007a2a:	2301      	moveq	r3, #1
 8007a2c:	2300      	movne	r3, #0
 8007a2e:	b2db      	uxtb	r3, r3
 8007a30:	461a      	mov	r2, r3
 8007a32:	79fb      	ldrb	r3, [r7, #7]
 8007a34:	429a      	cmp	r2, r3
 8007a36:	d091      	beq.n	800795c <UART_WaitOnFlagUntilTimeout+0x12>
 8007a38:	2300      	movs	r3, #0
 8007a3a:	4618      	mov	r0, r3
 8007a3c:	3710      	adds	r7, #16
 8007a3e:	46bd      	mov	sp, r7
 8007a40:	bd80      	pop	{r7, pc}
	...

08007a44 <UART_Start_Receive_DMA>:
 8007a44:	b580      	push	{r7, lr}
 8007a46:	b084      	sub	sp, #16
 8007a48:	af00      	add	r7, sp, #0
 8007a4a:	60f8      	str	r0, [r7, #12]
 8007a4c:	60b9      	str	r1, [r7, #8]
 8007a4e:	4613      	mov	r3, r2
 8007a50:	80fb      	strh	r3, [r7, #6]
 8007a52:	68fb      	ldr	r3, [r7, #12]
 8007a54:	68ba      	ldr	r2, [r7, #8]
 8007a56:	655a      	str	r2, [r3, #84]	; 0x54
 8007a58:	68fb      	ldr	r3, [r7, #12]
 8007a5a:	88fa      	ldrh	r2, [r7, #6]
 8007a5c:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	2200      	movs	r2, #0
 8007a64:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	2222      	movs	r2, #34	; 0x22
 8007a6c:	67da      	str	r2, [r3, #124]	; 0x7c
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	d02b      	beq.n	8007ace <UART_Start_Receive_DMA+0x8a>
 8007a76:	68fb      	ldr	r3, [r7, #12]
 8007a78:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007a7a:	4a25      	ldr	r2, [pc, #148]	; (8007b10 <UART_Start_Receive_DMA+0xcc>)
 8007a7c:	62da      	str	r2, [r3, #44]	; 0x2c
 8007a7e:	68fb      	ldr	r3, [r7, #12]
 8007a80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007a82:	4a24      	ldr	r2, [pc, #144]	; (8007b14 <UART_Start_Receive_DMA+0xd0>)
 8007a84:	631a      	str	r2, [r3, #48]	; 0x30
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007a8a:	4a23      	ldr	r2, [pc, #140]	; (8007b18 <UART_Start_Receive_DMA+0xd4>)
 8007a8c:	635a      	str	r2, [r3, #52]	; 0x34
 8007a8e:	68fb      	ldr	r3, [r7, #12]
 8007a90:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007a92:	2200      	movs	r2, #0
 8007a94:	639a      	str	r2, [r3, #56]	; 0x38
 8007a96:	68fb      	ldr	r3, [r7, #12]
 8007a98:	6f18      	ldr	r0, [r3, #112]	; 0x70
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	3324      	adds	r3, #36	; 0x24
 8007aa0:	4619      	mov	r1, r3
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007aa6:	461a      	mov	r2, r3
 8007aa8:	88fb      	ldrh	r3, [r7, #6]
 8007aaa:	f7fc fd85 	bl	80045b8 <HAL_DMA_Start_IT>
 8007aae:	4603      	mov	r3, r0
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d00c      	beq.n	8007ace <UART_Start_Receive_DMA+0x8a>
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	2210      	movs	r2, #16
 8007ab8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	2200      	movs	r2, #0
 8007ac0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007ac4:	68fb      	ldr	r3, [r7, #12]
 8007ac6:	2220      	movs	r2, #32
 8007ac8:	679a      	str	r2, [r3, #120]	; 0x78
 8007aca:	2301      	movs	r3, #1
 8007acc:	e01c      	b.n	8007b08 <UART_Start_Receive_DMA+0xc4>
 8007ace:	68fb      	ldr	r3, [r7, #12]
 8007ad0:	2200      	movs	r2, #0
 8007ad2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
 8007ad6:	68fb      	ldr	r3, [r7, #12]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	681a      	ldr	r2, [r3, #0]
 8007adc:	68fb      	ldr	r3, [r7, #12]
 8007ade:	681b      	ldr	r3, [r3, #0]
 8007ae0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007ae4:	601a      	str	r2, [r3, #0]
 8007ae6:	68fb      	ldr	r3, [r7, #12]
 8007ae8:	681b      	ldr	r3, [r3, #0]
 8007aea:	689a      	ldr	r2, [r3, #8]
 8007aec:	68fb      	ldr	r3, [r7, #12]
 8007aee:	681b      	ldr	r3, [r3, #0]
 8007af0:	f042 0201 	orr.w	r2, r2, #1
 8007af4:	609a      	str	r2, [r3, #8]
 8007af6:	68fb      	ldr	r3, [r7, #12]
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	689a      	ldr	r2, [r3, #8]
 8007afc:	68fb      	ldr	r3, [r7, #12]
 8007afe:	681b      	ldr	r3, [r3, #0]
 8007b00:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007b04:	609a      	str	r2, [r3, #8]
 8007b06:	2300      	movs	r3, #0
 8007b08:	4618      	mov	r0, r3
 8007b0a:	3710      	adds	r7, #16
 8007b0c:	46bd      	mov	sp, r7
 8007b0e:	bd80      	pop	{r7, pc}
 8007b10:	08007ba5 	.word	0x08007ba5
 8007b14:	08007c3d 	.word	0x08007c3d
 8007b18:	08007c75 	.word	0x08007c75

08007b1c <UART_EndTxTransfer>:
 8007b1c:	b480      	push	{r7}
 8007b1e:	b083      	sub	sp, #12
 8007b20:	af00      	add	r7, sp, #0
 8007b22:	6078      	str	r0, [r7, #4]
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	681a      	ldr	r2, [r3, #0]
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	681b      	ldr	r3, [r3, #0]
 8007b2e:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8007b32:	601a      	str	r2, [r3, #0]
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	2220      	movs	r2, #32
 8007b38:	679a      	str	r2, [r3, #120]	; 0x78
 8007b3a:	bf00      	nop
 8007b3c:	370c      	adds	r7, #12
 8007b3e:	46bd      	mov	sp, r7
 8007b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b44:	4770      	bx	lr

08007b46 <UART_EndRxTransfer>:
 8007b46:	b480      	push	{r7}
 8007b48:	b083      	sub	sp, #12
 8007b4a:	af00      	add	r7, sp, #0
 8007b4c:	6078      	str	r0, [r7, #4]
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	681a      	ldr	r2, [r3, #0]
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	681b      	ldr	r3, [r3, #0]
 8007b58:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8007b5c:	601a      	str	r2, [r3, #0]
 8007b5e:	687b      	ldr	r3, [r7, #4]
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	689a      	ldr	r2, [r3, #8]
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	f022 0201 	bic.w	r2, r2, #1
 8007b6c:	609a      	str	r2, [r3, #8]
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007b72:	2b01      	cmp	r3, #1
 8007b74:	d107      	bne.n	8007b86 <UART_EndRxTransfer+0x40>
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	681a      	ldr	r2, [r3, #0]
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	f022 0210 	bic.w	r2, r2, #16
 8007b84:	601a      	str	r2, [r3, #0]
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	2220      	movs	r2, #32
 8007b8a:	67da      	str	r2, [r3, #124]	; 0x7c
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	2200      	movs	r2, #0
 8007b90:	661a      	str	r2, [r3, #96]	; 0x60
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	2200      	movs	r2, #0
 8007b96:	665a      	str	r2, [r3, #100]	; 0x64
 8007b98:	bf00      	nop
 8007b9a:	370c      	adds	r7, #12
 8007b9c:	46bd      	mov	sp, r7
 8007b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ba2:	4770      	bx	lr

08007ba4 <UART_DMAReceiveCplt>:
 8007ba4:	b580      	push	{r7, lr}
 8007ba6:	b084      	sub	sp, #16
 8007ba8:	af00      	add	r7, sp, #0
 8007baa:	6078      	str	r0, [r7, #4]
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007bb0:	60fb      	str	r3, [r7, #12]
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	681b      	ldr	r3, [r3, #0]
 8007bb6:	681b      	ldr	r3, [r3, #0]
 8007bb8:	f003 0320 	and.w	r3, r3, #32
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	d12a      	bne.n	8007c16 <UART_DMAReceiveCplt+0x72>
 8007bc0:	68fb      	ldr	r3, [r7, #12]
 8007bc2:	2200      	movs	r2, #0
 8007bc4:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8007bc8:	68fb      	ldr	r3, [r7, #12]
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	681a      	ldr	r2, [r3, #0]
 8007bce:	68fb      	ldr	r3, [r7, #12]
 8007bd0:	681b      	ldr	r3, [r3, #0]
 8007bd2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007bd6:	601a      	str	r2, [r3, #0]
 8007bd8:	68fb      	ldr	r3, [r7, #12]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	689a      	ldr	r2, [r3, #8]
 8007bde:	68fb      	ldr	r3, [r7, #12]
 8007be0:	681b      	ldr	r3, [r3, #0]
 8007be2:	f022 0201 	bic.w	r2, r2, #1
 8007be6:	609a      	str	r2, [r3, #8]
 8007be8:	68fb      	ldr	r3, [r7, #12]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	689a      	ldr	r2, [r3, #8]
 8007bee:	68fb      	ldr	r3, [r7, #12]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007bf6:	609a      	str	r2, [r3, #8]
 8007bf8:	68fb      	ldr	r3, [r7, #12]
 8007bfa:	2220      	movs	r2, #32
 8007bfc:	67da      	str	r2, [r3, #124]	; 0x7c
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007c02:	2b01      	cmp	r3, #1
 8007c04:	d107      	bne.n	8007c16 <UART_DMAReceiveCplt+0x72>
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	681a      	ldr	r2, [r3, #0]
 8007c0c:	68fb      	ldr	r3, [r7, #12]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	f022 0210 	bic.w	r2, r2, #16
 8007c14:	601a      	str	r2, [r3, #0]
 8007c16:	68fb      	ldr	r3, [r7, #12]
 8007c18:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007c1a:	2b01      	cmp	r3, #1
 8007c1c:	d107      	bne.n	8007c2e <UART_DMAReceiveCplt+0x8a>
 8007c1e:	68fb      	ldr	r3, [r7, #12]
 8007c20:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8007c24:	4619      	mov	r1, r3
 8007c26:	68f8      	ldr	r0, [r7, #12]
 8007c28:	f7ff fb8c 	bl	8007344 <HAL_UARTEx_RxEventCallback>
 8007c2c:	e002      	b.n	8007c34 <UART_DMAReceiveCplt+0x90>
 8007c2e:	68f8      	ldr	r0, [r7, #12]
 8007c30:	f7ff fb6a 	bl	8007308 <HAL_UART_RxCpltCallback>
 8007c34:	bf00      	nop
 8007c36:	3710      	adds	r7, #16
 8007c38:	46bd      	mov	sp, r7
 8007c3a:	bd80      	pop	{r7, pc}

08007c3c <UART_DMARxHalfCplt>:
 8007c3c:	b580      	push	{r7, lr}
 8007c3e:	b084      	sub	sp, #16
 8007c40:	af00      	add	r7, sp, #0
 8007c42:	6078      	str	r0, [r7, #4]
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c48:	60fb      	str	r3, [r7, #12]
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007c4e:	2b01      	cmp	r3, #1
 8007c50:	d109      	bne.n	8007c66 <UART_DMARxHalfCplt+0x2a>
 8007c52:	68fb      	ldr	r3, [r7, #12]
 8007c54:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 8007c58:	085b      	lsrs	r3, r3, #1
 8007c5a:	b29b      	uxth	r3, r3
 8007c5c:	4619      	mov	r1, r3
 8007c5e:	68f8      	ldr	r0, [r7, #12]
 8007c60:	f7ff fb70 	bl	8007344 <HAL_UARTEx_RxEventCallback>
 8007c64:	e002      	b.n	8007c6c <UART_DMARxHalfCplt+0x30>
 8007c66:	68f8      	ldr	r0, [r7, #12]
 8007c68:	f7ff fb58 	bl	800731c <HAL_UART_RxHalfCpltCallback>
 8007c6c:	bf00      	nop
 8007c6e:	3710      	adds	r7, #16
 8007c70:	46bd      	mov	sp, r7
 8007c72:	bd80      	pop	{r7, pc}

08007c74 <UART_DMAError>:
 8007c74:	b580      	push	{r7, lr}
 8007c76:	b086      	sub	sp, #24
 8007c78:	af00      	add	r7, sp, #0
 8007c7a:	6078      	str	r0, [r7, #4]
 8007c7c:	687b      	ldr	r3, [r7, #4]
 8007c7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c80:	617b      	str	r3, [r7, #20]
 8007c82:	697b      	ldr	r3, [r7, #20]
 8007c84:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007c86:	613b      	str	r3, [r7, #16]
 8007c88:	697b      	ldr	r3, [r7, #20]
 8007c8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8007c8c:	60fb      	str	r3, [r7, #12]
 8007c8e:	697b      	ldr	r3, [r7, #20]
 8007c90:	681b      	ldr	r3, [r3, #0]
 8007c92:	689b      	ldr	r3, [r3, #8]
 8007c94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007c98:	2b80      	cmp	r3, #128	; 0x80
 8007c9a:	d109      	bne.n	8007cb0 <UART_DMAError+0x3c>
 8007c9c:	693b      	ldr	r3, [r7, #16]
 8007c9e:	2b21      	cmp	r3, #33	; 0x21
 8007ca0:	d106      	bne.n	8007cb0 <UART_DMAError+0x3c>
 8007ca2:	697b      	ldr	r3, [r7, #20]
 8007ca4:	2200      	movs	r2, #0
 8007ca6:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 8007caa:	6978      	ldr	r0, [r7, #20]
 8007cac:	f7ff ff36 	bl	8007b1c <UART_EndTxTransfer>
 8007cb0:	697b      	ldr	r3, [r7, #20]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	689b      	ldr	r3, [r3, #8]
 8007cb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007cba:	2b40      	cmp	r3, #64	; 0x40
 8007cbc:	d109      	bne.n	8007cd2 <UART_DMAError+0x5e>
 8007cbe:	68fb      	ldr	r3, [r7, #12]
 8007cc0:	2b22      	cmp	r3, #34	; 0x22
 8007cc2:	d106      	bne.n	8007cd2 <UART_DMAError+0x5e>
 8007cc4:	697b      	ldr	r3, [r7, #20]
 8007cc6:	2200      	movs	r2, #0
 8007cc8:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 8007ccc:	6978      	ldr	r0, [r7, #20]
 8007cce:	f7ff ff3a 	bl	8007b46 <UART_EndRxTransfer>
 8007cd2:	697b      	ldr	r3, [r7, #20]
 8007cd4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8007cd8:	f043 0210 	orr.w	r2, r3, #16
 8007cdc:	697b      	ldr	r3, [r7, #20]
 8007cde:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8007ce2:	6978      	ldr	r0, [r7, #20]
 8007ce4:	f7ff fb24 	bl	8007330 <HAL_UART_ErrorCallback>
 8007ce8:	bf00      	nop
 8007cea:	3718      	adds	r7, #24
 8007cec:	46bd      	mov	sp, r7
 8007cee:	bd80      	pop	{r7, pc}

08007cf0 <abs>:
 8007cf0:	2800      	cmp	r0, #0
 8007cf2:	bfb8      	it	lt
 8007cf4:	4240      	neglt	r0, r0
 8007cf6:	4770      	bx	lr

08007cf8 <__libc_init_array>:
 8007cf8:	b570      	push	{r4, r5, r6, lr}
 8007cfa:	4d0d      	ldr	r5, [pc, #52]	; (8007d30 <__libc_init_array+0x38>)
 8007cfc:	4c0d      	ldr	r4, [pc, #52]	; (8007d34 <__libc_init_array+0x3c>)
 8007cfe:	1b64      	subs	r4, r4, r5
 8007d00:	10a4      	asrs	r4, r4, #2
 8007d02:	2600      	movs	r6, #0
 8007d04:	42a6      	cmp	r6, r4
 8007d06:	d109      	bne.n	8007d1c <__libc_init_array+0x24>
 8007d08:	4d0b      	ldr	r5, [pc, #44]	; (8007d38 <__libc_init_array+0x40>)
 8007d0a:	4c0c      	ldr	r4, [pc, #48]	; (8007d3c <__libc_init_array+0x44>)
 8007d0c:	f001 f8b6 	bl	8008e7c <_init>
 8007d10:	1b64      	subs	r4, r4, r5
 8007d12:	10a4      	asrs	r4, r4, #2
 8007d14:	2600      	movs	r6, #0
 8007d16:	42a6      	cmp	r6, r4
 8007d18:	d105      	bne.n	8007d26 <__libc_init_array+0x2e>
 8007d1a:	bd70      	pop	{r4, r5, r6, pc}
 8007d1c:	f855 3b04 	ldr.w	r3, [r5], #4
 8007d20:	4798      	blx	r3
 8007d22:	3601      	adds	r6, #1
 8007d24:	e7ee      	b.n	8007d04 <__libc_init_array+0xc>
 8007d26:	f855 3b04 	ldr.w	r3, [r5], #4
 8007d2a:	4798      	blx	r3
 8007d2c:	3601      	adds	r6, #1
 8007d2e:	e7f2      	b.n	8007d16 <__libc_init_array+0x1e>
 8007d30:	080090c0 	.word	0x080090c0
 8007d34:	080090c0 	.word	0x080090c0
 8007d38:	080090c0 	.word	0x080090c0
 8007d3c:	080090c4 	.word	0x080090c4

08007d40 <memcpy>:
 8007d40:	440a      	add	r2, r1
 8007d42:	4291      	cmp	r1, r2
 8007d44:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007d48:	d100      	bne.n	8007d4c <memcpy+0xc>
 8007d4a:	4770      	bx	lr
 8007d4c:	b510      	push	{r4, lr}
 8007d4e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007d52:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007d56:	4291      	cmp	r1, r2
 8007d58:	d1f9      	bne.n	8007d4e <memcpy+0xe>
 8007d5a:	bd10      	pop	{r4, pc}

08007d5c <memset>:
 8007d5c:	4402      	add	r2, r0
 8007d5e:	4603      	mov	r3, r0
 8007d60:	4293      	cmp	r3, r2
 8007d62:	d100      	bne.n	8007d66 <memset+0xa>
 8007d64:	4770      	bx	lr
 8007d66:	f803 1b01 	strb.w	r1, [r3], #1
 8007d6a:	e7f9      	b.n	8007d60 <memset+0x4>
 8007d6c:	0000      	movs	r0, r0
	...

08007d70 <cos>:
 8007d70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007d72:	ec53 2b10 	vmov	r2, r3, d0
 8007d76:	4824      	ldr	r0, [pc, #144]	; (8007e08 <cos+0x98>)
 8007d78:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8007d7c:	4281      	cmp	r1, r0
 8007d7e:	dc06      	bgt.n	8007d8e <cos+0x1e>
 8007d80:	ed9f 1b1f 	vldr	d1, [pc, #124]	; 8007e00 <cos+0x90>
 8007d84:	f000 faa4 	bl	80082d0 <__kernel_cos>
 8007d88:	ec51 0b10 	vmov	r0, r1, d0
 8007d8c:	e007      	b.n	8007d9e <cos+0x2e>
 8007d8e:	481f      	ldr	r0, [pc, #124]	; (8007e0c <cos+0x9c>)
 8007d90:	4281      	cmp	r1, r0
 8007d92:	dd09      	ble.n	8007da8 <cos+0x38>
 8007d94:	ee10 0a10 	vmov	r0, s0
 8007d98:	4619      	mov	r1, r3
 8007d9a:	f7f8 fa1d 	bl	80001d8 <__aeabi_dsub>
 8007d9e:	ec41 0b10 	vmov	d0, r0, r1
 8007da2:	b005      	add	sp, #20
 8007da4:	f85d fb04 	ldr.w	pc, [sp], #4
 8007da8:	4668      	mov	r0, sp
 8007daa:	f000 f885 	bl	8007eb8 <__ieee754_rem_pio2>
 8007dae:	f000 0003 	and.w	r0, r0, #3
 8007db2:	2801      	cmp	r0, #1
 8007db4:	d007      	beq.n	8007dc6 <cos+0x56>
 8007db6:	2802      	cmp	r0, #2
 8007db8:	d012      	beq.n	8007de0 <cos+0x70>
 8007dba:	b9c0      	cbnz	r0, 8007dee <cos+0x7e>
 8007dbc:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007dc0:	ed9d 0b00 	vldr	d0, [sp]
 8007dc4:	e7de      	b.n	8007d84 <cos+0x14>
 8007dc6:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007dca:	ed9d 0b00 	vldr	d0, [sp]
 8007dce:	f000 fe87 	bl	8008ae0 <__kernel_sin>
 8007dd2:	ec53 2b10 	vmov	r2, r3, d0
 8007dd6:	ee10 0a10 	vmov	r0, s0
 8007dda:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8007dde:	e7de      	b.n	8007d9e <cos+0x2e>
 8007de0:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007de4:	ed9d 0b00 	vldr	d0, [sp]
 8007de8:	f000 fa72 	bl	80082d0 <__kernel_cos>
 8007dec:	e7f1      	b.n	8007dd2 <cos+0x62>
 8007dee:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007df2:	ed9d 0b00 	vldr	d0, [sp]
 8007df6:	2001      	movs	r0, #1
 8007df8:	f000 fe72 	bl	8008ae0 <__kernel_sin>
 8007dfc:	e7c4      	b.n	8007d88 <cos+0x18>
 8007dfe:	bf00      	nop
	...
 8007e08:	3fe921fb 	.word	0x3fe921fb
 8007e0c:	7fefffff 	.word	0x7fefffff

08007e10 <sin>:
 8007e10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007e12:	ec53 2b10 	vmov	r2, r3, d0
 8007e16:	4826      	ldr	r0, [pc, #152]	; (8007eb0 <sin+0xa0>)
 8007e18:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8007e1c:	4281      	cmp	r1, r0
 8007e1e:	dc07      	bgt.n	8007e30 <sin+0x20>
 8007e20:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8007ea8 <sin+0x98>
 8007e24:	2000      	movs	r0, #0
 8007e26:	f000 fe5b 	bl	8008ae0 <__kernel_sin>
 8007e2a:	ec51 0b10 	vmov	r0, r1, d0
 8007e2e:	e007      	b.n	8007e40 <sin+0x30>
 8007e30:	4820      	ldr	r0, [pc, #128]	; (8007eb4 <sin+0xa4>)
 8007e32:	4281      	cmp	r1, r0
 8007e34:	dd09      	ble.n	8007e4a <sin+0x3a>
 8007e36:	ee10 0a10 	vmov	r0, s0
 8007e3a:	4619      	mov	r1, r3
 8007e3c:	f7f8 f9cc 	bl	80001d8 <__aeabi_dsub>
 8007e40:	ec41 0b10 	vmov	d0, r0, r1
 8007e44:	b005      	add	sp, #20
 8007e46:	f85d fb04 	ldr.w	pc, [sp], #4
 8007e4a:	4668      	mov	r0, sp
 8007e4c:	f000 f834 	bl	8007eb8 <__ieee754_rem_pio2>
 8007e50:	f000 0003 	and.w	r0, r0, #3
 8007e54:	2801      	cmp	r0, #1
 8007e56:	d008      	beq.n	8007e6a <sin+0x5a>
 8007e58:	2802      	cmp	r0, #2
 8007e5a:	d00d      	beq.n	8007e78 <sin+0x68>
 8007e5c:	b9d0      	cbnz	r0, 8007e94 <sin+0x84>
 8007e5e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007e62:	ed9d 0b00 	vldr	d0, [sp]
 8007e66:	2001      	movs	r0, #1
 8007e68:	e7dd      	b.n	8007e26 <sin+0x16>
 8007e6a:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007e6e:	ed9d 0b00 	vldr	d0, [sp]
 8007e72:	f000 fa2d 	bl	80082d0 <__kernel_cos>
 8007e76:	e7d8      	b.n	8007e2a <sin+0x1a>
 8007e78:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007e7c:	ed9d 0b00 	vldr	d0, [sp]
 8007e80:	2001      	movs	r0, #1
 8007e82:	f000 fe2d 	bl	8008ae0 <__kernel_sin>
 8007e86:	ec53 2b10 	vmov	r2, r3, d0
 8007e8a:	ee10 0a10 	vmov	r0, s0
 8007e8e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8007e92:	e7d5      	b.n	8007e40 <sin+0x30>
 8007e94:	ed9d 1b02 	vldr	d1, [sp, #8]
 8007e98:	ed9d 0b00 	vldr	d0, [sp]
 8007e9c:	f000 fa18 	bl	80082d0 <__kernel_cos>
 8007ea0:	e7f1      	b.n	8007e86 <sin+0x76>
 8007ea2:	bf00      	nop
 8007ea4:	f3af 8000 	nop.w
	...
 8007eb0:	3fe921fb 	.word	0x3fe921fb
 8007eb4:	7fefffff 	.word	0x7fefffff

08007eb8 <__ieee754_rem_pio2>:
 8007eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ebc:	ed2d 8b02 	vpush	{d8}
 8007ec0:	ec55 4b10 	vmov	r4, r5, d0
 8007ec4:	4bca      	ldr	r3, [pc, #808]	; (80081f0 <__ieee754_rem_pio2+0x338>)
 8007ec6:	b08b      	sub	sp, #44	; 0x2c
 8007ec8:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 8007ecc:	4598      	cmp	r8, r3
 8007ece:	4682      	mov	sl, r0
 8007ed0:	9502      	str	r5, [sp, #8]
 8007ed2:	dc08      	bgt.n	8007ee6 <__ieee754_rem_pio2+0x2e>
 8007ed4:	2200      	movs	r2, #0
 8007ed6:	2300      	movs	r3, #0
 8007ed8:	ed80 0b00 	vstr	d0, [r0]
 8007edc:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8007ee0:	f04f 0b00 	mov.w	fp, #0
 8007ee4:	e028      	b.n	8007f38 <__ieee754_rem_pio2+0x80>
 8007ee6:	4bc3      	ldr	r3, [pc, #780]	; (80081f4 <__ieee754_rem_pio2+0x33c>)
 8007ee8:	4598      	cmp	r8, r3
 8007eea:	dc78      	bgt.n	8007fde <__ieee754_rem_pio2+0x126>
 8007eec:	9b02      	ldr	r3, [sp, #8]
 8007eee:	4ec2      	ldr	r6, [pc, #776]	; (80081f8 <__ieee754_rem_pio2+0x340>)
 8007ef0:	2b00      	cmp	r3, #0
 8007ef2:	ee10 0a10 	vmov	r0, s0
 8007ef6:	a3b0      	add	r3, pc, #704	; (adr r3, 80081b8 <__ieee754_rem_pio2+0x300>)
 8007ef8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007efc:	4629      	mov	r1, r5
 8007efe:	dd39      	ble.n	8007f74 <__ieee754_rem_pio2+0xbc>
 8007f00:	f7f8 f96a 	bl	80001d8 <__aeabi_dsub>
 8007f04:	45b0      	cmp	r8, r6
 8007f06:	4604      	mov	r4, r0
 8007f08:	460d      	mov	r5, r1
 8007f0a:	d01b      	beq.n	8007f44 <__ieee754_rem_pio2+0x8c>
 8007f0c:	a3ac      	add	r3, pc, #688	; (adr r3, 80081c0 <__ieee754_rem_pio2+0x308>)
 8007f0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f12:	f7f8 f961 	bl	80001d8 <__aeabi_dsub>
 8007f16:	4602      	mov	r2, r0
 8007f18:	460b      	mov	r3, r1
 8007f1a:	e9ca 2300 	strd	r2, r3, [sl]
 8007f1e:	4620      	mov	r0, r4
 8007f20:	4629      	mov	r1, r5
 8007f22:	f7f8 f959 	bl	80001d8 <__aeabi_dsub>
 8007f26:	a3a6      	add	r3, pc, #664	; (adr r3, 80081c0 <__ieee754_rem_pio2+0x308>)
 8007f28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f2c:	f7f8 f954 	bl	80001d8 <__aeabi_dsub>
 8007f30:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007f34:	f04f 0b01 	mov.w	fp, #1
 8007f38:	4658      	mov	r0, fp
 8007f3a:	b00b      	add	sp, #44	; 0x2c
 8007f3c:	ecbd 8b02 	vpop	{d8}
 8007f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f44:	a3a0      	add	r3, pc, #640	; (adr r3, 80081c8 <__ieee754_rem_pio2+0x310>)
 8007f46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f4a:	f7f8 f945 	bl	80001d8 <__aeabi_dsub>
 8007f4e:	a3a0      	add	r3, pc, #640	; (adr r3, 80081d0 <__ieee754_rem_pio2+0x318>)
 8007f50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f54:	4604      	mov	r4, r0
 8007f56:	460d      	mov	r5, r1
 8007f58:	f7f8 f93e 	bl	80001d8 <__aeabi_dsub>
 8007f5c:	4602      	mov	r2, r0
 8007f5e:	460b      	mov	r3, r1
 8007f60:	e9ca 2300 	strd	r2, r3, [sl]
 8007f64:	4620      	mov	r0, r4
 8007f66:	4629      	mov	r1, r5
 8007f68:	f7f8 f936 	bl	80001d8 <__aeabi_dsub>
 8007f6c:	a398      	add	r3, pc, #608	; (adr r3, 80081d0 <__ieee754_rem_pio2+0x318>)
 8007f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f72:	e7db      	b.n	8007f2c <__ieee754_rem_pio2+0x74>
 8007f74:	f7f8 f932 	bl	80001dc <__adddf3>
 8007f78:	45b0      	cmp	r8, r6
 8007f7a:	4604      	mov	r4, r0
 8007f7c:	460d      	mov	r5, r1
 8007f7e:	d016      	beq.n	8007fae <__ieee754_rem_pio2+0xf6>
 8007f80:	a38f      	add	r3, pc, #572	; (adr r3, 80081c0 <__ieee754_rem_pio2+0x308>)
 8007f82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f86:	f7f8 f929 	bl	80001dc <__adddf3>
 8007f8a:	4602      	mov	r2, r0
 8007f8c:	460b      	mov	r3, r1
 8007f8e:	e9ca 2300 	strd	r2, r3, [sl]
 8007f92:	4620      	mov	r0, r4
 8007f94:	4629      	mov	r1, r5
 8007f96:	f7f8 f91f 	bl	80001d8 <__aeabi_dsub>
 8007f9a:	a389      	add	r3, pc, #548	; (adr r3, 80081c0 <__ieee754_rem_pio2+0x308>)
 8007f9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fa0:	f7f8 f91c 	bl	80001dc <__adddf3>
 8007fa4:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
 8007fa8:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8007fac:	e7c4      	b.n	8007f38 <__ieee754_rem_pio2+0x80>
 8007fae:	a386      	add	r3, pc, #536	; (adr r3, 80081c8 <__ieee754_rem_pio2+0x310>)
 8007fb0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fb4:	f7f8 f912 	bl	80001dc <__adddf3>
 8007fb8:	a385      	add	r3, pc, #532	; (adr r3, 80081d0 <__ieee754_rem_pio2+0x318>)
 8007fba:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	460d      	mov	r5, r1
 8007fc2:	f7f8 f90b 	bl	80001dc <__adddf3>
 8007fc6:	4602      	mov	r2, r0
 8007fc8:	460b      	mov	r3, r1
 8007fca:	e9ca 2300 	strd	r2, r3, [sl]
 8007fce:	4620      	mov	r0, r4
 8007fd0:	4629      	mov	r1, r5
 8007fd2:	f7f8 f901 	bl	80001d8 <__aeabi_dsub>
 8007fd6:	a37e      	add	r3, pc, #504	; (adr r3, 80081d0 <__ieee754_rem_pio2+0x318>)
 8007fd8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007fdc:	e7e0      	b.n	8007fa0 <__ieee754_rem_pio2+0xe8>
 8007fde:	4b87      	ldr	r3, [pc, #540]	; (80081fc <__ieee754_rem_pio2+0x344>)
 8007fe0:	4598      	cmp	r8, r3
 8007fe2:	f300 80d9 	bgt.w	8008198 <__ieee754_rem_pio2+0x2e0>
 8007fe6:	f000 fe39 	bl	8008c5c <fabs>
 8007fea:	ec55 4b10 	vmov	r4, r5, d0
 8007fee:	ee10 0a10 	vmov	r0, s0
 8007ff2:	a379      	add	r3, pc, #484	; (adr r3, 80081d8 <__ieee754_rem_pio2+0x320>)
 8007ff4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ff8:	4629      	mov	r1, r5
 8007ffa:	f7f8 faa5 	bl	8000548 <__aeabi_dmul>
 8007ffe:	4b80      	ldr	r3, [pc, #512]	; (8008200 <__ieee754_rem_pio2+0x348>)
 8008000:	2200      	movs	r2, #0
 8008002:	f7f8 f8eb 	bl	80001dc <__adddf3>
 8008006:	f7f8 fd39 	bl	8000a7c <__aeabi_d2iz>
 800800a:	4683      	mov	fp, r0
 800800c:	f7f8 fa32 	bl	8000474 <__aeabi_i2d>
 8008010:	4602      	mov	r2, r0
 8008012:	460b      	mov	r3, r1
 8008014:	ec43 2b18 	vmov	d8, r2, r3
 8008018:	a367      	add	r3, pc, #412	; (adr r3, 80081b8 <__ieee754_rem_pio2+0x300>)
 800801a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800801e:	f7f8 fa93 	bl	8000548 <__aeabi_dmul>
 8008022:	4602      	mov	r2, r0
 8008024:	460b      	mov	r3, r1
 8008026:	4620      	mov	r0, r4
 8008028:	4629      	mov	r1, r5
 800802a:	f7f8 f8d5 	bl	80001d8 <__aeabi_dsub>
 800802e:	a364      	add	r3, pc, #400	; (adr r3, 80081c0 <__ieee754_rem_pio2+0x308>)
 8008030:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008034:	4606      	mov	r6, r0
 8008036:	460f      	mov	r7, r1
 8008038:	ec51 0b18 	vmov	r0, r1, d8
 800803c:	f7f8 fa84 	bl	8000548 <__aeabi_dmul>
 8008040:	f1bb 0f1f 	cmp.w	fp, #31
 8008044:	4604      	mov	r4, r0
 8008046:	460d      	mov	r5, r1
 8008048:	dc0d      	bgt.n	8008066 <__ieee754_rem_pio2+0x1ae>
 800804a:	4b6e      	ldr	r3, [pc, #440]	; (8008204 <__ieee754_rem_pio2+0x34c>)
 800804c:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
 8008050:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008054:	4543      	cmp	r3, r8
 8008056:	d006      	beq.n	8008066 <__ieee754_rem_pio2+0x1ae>
 8008058:	4622      	mov	r2, r4
 800805a:	462b      	mov	r3, r5
 800805c:	4630      	mov	r0, r6
 800805e:	4639      	mov	r1, r7
 8008060:	f7f8 f8ba 	bl	80001d8 <__aeabi_dsub>
 8008064:	e00f      	b.n	8008086 <__ieee754_rem_pio2+0x1ce>
 8008066:	462b      	mov	r3, r5
 8008068:	4622      	mov	r2, r4
 800806a:	4630      	mov	r0, r6
 800806c:	4639      	mov	r1, r7
 800806e:	f7f8 f8b3 	bl	80001d8 <__aeabi_dsub>
 8008072:	ea4f 5328 	mov.w	r3, r8, asr #20
 8008076:	9303      	str	r3, [sp, #12]
 8008078:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800807c:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 8008080:	f1b8 0f10 	cmp.w	r8, #16
 8008084:	dc02      	bgt.n	800808c <__ieee754_rem_pio2+0x1d4>
 8008086:	e9ca 0100 	strd	r0, r1, [sl]
 800808a:	e039      	b.n	8008100 <__ieee754_rem_pio2+0x248>
 800808c:	a34e      	add	r3, pc, #312	; (adr r3, 80081c8 <__ieee754_rem_pio2+0x310>)
 800808e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008092:	ec51 0b18 	vmov	r0, r1, d8
 8008096:	f7f8 fa57 	bl	8000548 <__aeabi_dmul>
 800809a:	4604      	mov	r4, r0
 800809c:	460d      	mov	r5, r1
 800809e:	4602      	mov	r2, r0
 80080a0:	460b      	mov	r3, r1
 80080a2:	4630      	mov	r0, r6
 80080a4:	4639      	mov	r1, r7
 80080a6:	f7f8 f897 	bl	80001d8 <__aeabi_dsub>
 80080aa:	4602      	mov	r2, r0
 80080ac:	460b      	mov	r3, r1
 80080ae:	4680      	mov	r8, r0
 80080b0:	4689      	mov	r9, r1
 80080b2:	4630      	mov	r0, r6
 80080b4:	4639      	mov	r1, r7
 80080b6:	f7f8 f88f 	bl	80001d8 <__aeabi_dsub>
 80080ba:	4622      	mov	r2, r4
 80080bc:	462b      	mov	r3, r5
 80080be:	f7f8 f88b 	bl	80001d8 <__aeabi_dsub>
 80080c2:	a343      	add	r3, pc, #268	; (adr r3, 80081d0 <__ieee754_rem_pio2+0x318>)
 80080c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080c8:	4604      	mov	r4, r0
 80080ca:	460d      	mov	r5, r1
 80080cc:	ec51 0b18 	vmov	r0, r1, d8
 80080d0:	f7f8 fa3a 	bl	8000548 <__aeabi_dmul>
 80080d4:	4622      	mov	r2, r4
 80080d6:	462b      	mov	r3, r5
 80080d8:	f7f8 f87e 	bl	80001d8 <__aeabi_dsub>
 80080dc:	4602      	mov	r2, r0
 80080de:	460b      	mov	r3, r1
 80080e0:	4604      	mov	r4, r0
 80080e2:	460d      	mov	r5, r1
 80080e4:	4640      	mov	r0, r8
 80080e6:	4649      	mov	r1, r9
 80080e8:	f7f8 f876 	bl	80001d8 <__aeabi_dsub>
 80080ec:	9a03      	ldr	r2, [sp, #12]
 80080ee:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80080f2:	1ad3      	subs	r3, r2, r3
 80080f4:	2b31      	cmp	r3, #49	; 0x31
 80080f6:	dc24      	bgt.n	8008142 <__ieee754_rem_pio2+0x28a>
 80080f8:	e9ca 0100 	strd	r0, r1, [sl]
 80080fc:	4646      	mov	r6, r8
 80080fe:	464f      	mov	r7, r9
 8008100:	e9da 8900 	ldrd	r8, r9, [sl]
 8008104:	4630      	mov	r0, r6
 8008106:	4642      	mov	r2, r8
 8008108:	464b      	mov	r3, r9
 800810a:	4639      	mov	r1, r7
 800810c:	f7f8 f864 	bl	80001d8 <__aeabi_dsub>
 8008110:	462b      	mov	r3, r5
 8008112:	4622      	mov	r2, r4
 8008114:	f7f8 f860 	bl	80001d8 <__aeabi_dsub>
 8008118:	9b02      	ldr	r3, [sp, #8]
 800811a:	2b00      	cmp	r3, #0
 800811c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8008120:	f6bf af0a 	bge.w	8007f38 <__ieee754_rem_pio2+0x80>
 8008124:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8008128:	f8ca 3004 	str.w	r3, [sl, #4]
 800812c:	f8ca 8000 	str.w	r8, [sl]
 8008130:	f8ca 0008 	str.w	r0, [sl, #8]
 8008134:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008138:	f8ca 300c 	str.w	r3, [sl, #12]
 800813c:	f1cb 0b00 	rsb	fp, fp, #0
 8008140:	e6fa      	b.n	8007f38 <__ieee754_rem_pio2+0x80>
 8008142:	a327      	add	r3, pc, #156	; (adr r3, 80081e0 <__ieee754_rem_pio2+0x328>)
 8008144:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008148:	ec51 0b18 	vmov	r0, r1, d8
 800814c:	f7f8 f9fc 	bl	8000548 <__aeabi_dmul>
 8008150:	4604      	mov	r4, r0
 8008152:	460d      	mov	r5, r1
 8008154:	4602      	mov	r2, r0
 8008156:	460b      	mov	r3, r1
 8008158:	4640      	mov	r0, r8
 800815a:	4649      	mov	r1, r9
 800815c:	f7f8 f83c 	bl	80001d8 <__aeabi_dsub>
 8008160:	4602      	mov	r2, r0
 8008162:	460b      	mov	r3, r1
 8008164:	4606      	mov	r6, r0
 8008166:	460f      	mov	r7, r1
 8008168:	4640      	mov	r0, r8
 800816a:	4649      	mov	r1, r9
 800816c:	f7f8 f834 	bl	80001d8 <__aeabi_dsub>
 8008170:	4622      	mov	r2, r4
 8008172:	462b      	mov	r3, r5
 8008174:	f7f8 f830 	bl	80001d8 <__aeabi_dsub>
 8008178:	a31b      	add	r3, pc, #108	; (adr r3, 80081e8 <__ieee754_rem_pio2+0x330>)
 800817a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800817e:	4604      	mov	r4, r0
 8008180:	460d      	mov	r5, r1
 8008182:	ec51 0b18 	vmov	r0, r1, d8
 8008186:	f7f8 f9df 	bl	8000548 <__aeabi_dmul>
 800818a:	4622      	mov	r2, r4
 800818c:	462b      	mov	r3, r5
 800818e:	f7f8 f823 	bl	80001d8 <__aeabi_dsub>
 8008192:	4604      	mov	r4, r0
 8008194:	460d      	mov	r5, r1
 8008196:	e75f      	b.n	8008058 <__ieee754_rem_pio2+0x1a0>
 8008198:	4b1b      	ldr	r3, [pc, #108]	; (8008208 <__ieee754_rem_pio2+0x350>)
 800819a:	4598      	cmp	r8, r3
 800819c:	dd36      	ble.n	800820c <__ieee754_rem_pio2+0x354>
 800819e:	ee10 2a10 	vmov	r2, s0
 80081a2:	462b      	mov	r3, r5
 80081a4:	4620      	mov	r0, r4
 80081a6:	4629      	mov	r1, r5
 80081a8:	f7f8 f816 	bl	80001d8 <__aeabi_dsub>
 80081ac:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80081b0:	e9ca 0100 	strd	r0, r1, [sl]
 80081b4:	e694      	b.n	8007ee0 <__ieee754_rem_pio2+0x28>
 80081b6:	bf00      	nop
 80081b8:	54400000 	.word	0x54400000
 80081bc:	3ff921fb 	.word	0x3ff921fb
 80081c0:	1a626331 	.word	0x1a626331
 80081c4:	3dd0b461 	.word	0x3dd0b461
 80081c8:	1a600000 	.word	0x1a600000
 80081cc:	3dd0b461 	.word	0x3dd0b461
 80081d0:	2e037073 	.word	0x2e037073
 80081d4:	3ba3198a 	.word	0x3ba3198a
 80081d8:	6dc9c883 	.word	0x6dc9c883
 80081dc:	3fe45f30 	.word	0x3fe45f30
 80081e0:	2e000000 	.word	0x2e000000
 80081e4:	3ba3198a 	.word	0x3ba3198a
 80081e8:	252049c1 	.word	0x252049c1
 80081ec:	397b839a 	.word	0x397b839a
 80081f0:	3fe921fb 	.word	0x3fe921fb
 80081f4:	4002d97b 	.word	0x4002d97b
 80081f8:	3ff921fb 	.word	0x3ff921fb
 80081fc:	413921fb 	.word	0x413921fb
 8008200:	3fe00000 	.word	0x3fe00000
 8008204:	08008ee0 	.word	0x08008ee0
 8008208:	7fefffff 	.word	0x7fefffff
 800820c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8008210:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8008214:	ee10 0a10 	vmov	r0, s0
 8008218:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 800821c:	ee10 6a10 	vmov	r6, s0
 8008220:	460f      	mov	r7, r1
 8008222:	f7f8 fc2b 	bl	8000a7c <__aeabi_d2iz>
 8008226:	f7f8 f925 	bl	8000474 <__aeabi_i2d>
 800822a:	4602      	mov	r2, r0
 800822c:	460b      	mov	r3, r1
 800822e:	4630      	mov	r0, r6
 8008230:	4639      	mov	r1, r7
 8008232:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8008236:	f7f7 ffcf 	bl	80001d8 <__aeabi_dsub>
 800823a:	4b22      	ldr	r3, [pc, #136]	; (80082c4 <__ieee754_rem_pio2+0x40c>)
 800823c:	2200      	movs	r2, #0
 800823e:	f7f8 f983 	bl	8000548 <__aeabi_dmul>
 8008242:	460f      	mov	r7, r1
 8008244:	4606      	mov	r6, r0
 8008246:	f7f8 fc19 	bl	8000a7c <__aeabi_d2iz>
 800824a:	f7f8 f913 	bl	8000474 <__aeabi_i2d>
 800824e:	4602      	mov	r2, r0
 8008250:	460b      	mov	r3, r1
 8008252:	4630      	mov	r0, r6
 8008254:	4639      	mov	r1, r7
 8008256:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800825a:	f7f7 ffbd 	bl	80001d8 <__aeabi_dsub>
 800825e:	4b19      	ldr	r3, [pc, #100]	; (80082c4 <__ieee754_rem_pio2+0x40c>)
 8008260:	2200      	movs	r2, #0
 8008262:	f7f8 f971 	bl	8000548 <__aeabi_dmul>
 8008266:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800826a:	ad04      	add	r5, sp, #16
 800826c:	f04f 0803 	mov.w	r8, #3
 8008270:	46a9      	mov	r9, r5
 8008272:	2600      	movs	r6, #0
 8008274:	2700      	movs	r7, #0
 8008276:	4632      	mov	r2, r6
 8008278:	463b      	mov	r3, r7
 800827a:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 800827e:	46c3      	mov	fp, r8
 8008280:	3d08      	subs	r5, #8
 8008282:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8008286:	f7f8 fbc7 	bl	8000a18 <__aeabi_dcmpeq>
 800828a:	2800      	cmp	r0, #0
 800828c:	d1f3      	bne.n	8008276 <__ieee754_rem_pio2+0x3be>
 800828e:	4b0e      	ldr	r3, [pc, #56]	; (80082c8 <__ieee754_rem_pio2+0x410>)
 8008290:	9301      	str	r3, [sp, #4]
 8008292:	2302      	movs	r3, #2
 8008294:	9300      	str	r3, [sp, #0]
 8008296:	4622      	mov	r2, r4
 8008298:	465b      	mov	r3, fp
 800829a:	4651      	mov	r1, sl
 800829c:	4648      	mov	r0, r9
 800829e:	f000 f8df 	bl	8008460 <__kernel_rem_pio2>
 80082a2:	9b02      	ldr	r3, [sp, #8]
 80082a4:	2b00      	cmp	r3, #0
 80082a6:	4683      	mov	fp, r0
 80082a8:	f6bf ae46 	bge.w	8007f38 <__ieee754_rem_pio2+0x80>
 80082ac:	f8da 3004 	ldr.w	r3, [sl, #4]
 80082b0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80082b4:	f8ca 3004 	str.w	r3, [sl, #4]
 80082b8:	f8da 300c 	ldr.w	r3, [sl, #12]
 80082bc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80082c0:	e73a      	b.n	8008138 <__ieee754_rem_pio2+0x280>
 80082c2:	bf00      	nop
 80082c4:	41700000 	.word	0x41700000
 80082c8:	08008f60 	.word	0x08008f60
 80082cc:	00000000 	.word	0x00000000

080082d0 <__kernel_cos>:
 80082d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80082d4:	ec57 6b10 	vmov	r6, r7, d0
 80082d8:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 80082dc:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 80082e0:	ed8d 1b00 	vstr	d1, [sp]
 80082e4:	da07      	bge.n	80082f6 <__kernel_cos+0x26>
 80082e6:	ee10 0a10 	vmov	r0, s0
 80082ea:	4639      	mov	r1, r7
 80082ec:	f7f8 fbc6 	bl	8000a7c <__aeabi_d2iz>
 80082f0:	2800      	cmp	r0, #0
 80082f2:	f000 8088 	beq.w	8008406 <__kernel_cos+0x136>
 80082f6:	4632      	mov	r2, r6
 80082f8:	463b      	mov	r3, r7
 80082fa:	4630      	mov	r0, r6
 80082fc:	4639      	mov	r1, r7
 80082fe:	f7f8 f923 	bl	8000548 <__aeabi_dmul>
 8008302:	4b51      	ldr	r3, [pc, #324]	; (8008448 <__kernel_cos+0x178>)
 8008304:	2200      	movs	r2, #0
 8008306:	4604      	mov	r4, r0
 8008308:	460d      	mov	r5, r1
 800830a:	f7f8 f91d 	bl	8000548 <__aeabi_dmul>
 800830e:	a340      	add	r3, pc, #256	; (adr r3, 8008410 <__kernel_cos+0x140>)
 8008310:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008314:	4682      	mov	sl, r0
 8008316:	468b      	mov	fp, r1
 8008318:	4620      	mov	r0, r4
 800831a:	4629      	mov	r1, r5
 800831c:	f7f8 f914 	bl	8000548 <__aeabi_dmul>
 8008320:	a33d      	add	r3, pc, #244	; (adr r3, 8008418 <__kernel_cos+0x148>)
 8008322:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008326:	f7f7 ff59 	bl	80001dc <__adddf3>
 800832a:	4622      	mov	r2, r4
 800832c:	462b      	mov	r3, r5
 800832e:	f7f8 f90b 	bl	8000548 <__aeabi_dmul>
 8008332:	a33b      	add	r3, pc, #236	; (adr r3, 8008420 <__kernel_cos+0x150>)
 8008334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008338:	f7f7 ff4e 	bl	80001d8 <__aeabi_dsub>
 800833c:	4622      	mov	r2, r4
 800833e:	462b      	mov	r3, r5
 8008340:	f7f8 f902 	bl	8000548 <__aeabi_dmul>
 8008344:	a338      	add	r3, pc, #224	; (adr r3, 8008428 <__kernel_cos+0x158>)
 8008346:	e9d3 2300 	ldrd	r2, r3, [r3]
 800834a:	f7f7 ff47 	bl	80001dc <__adddf3>
 800834e:	4622      	mov	r2, r4
 8008350:	462b      	mov	r3, r5
 8008352:	f7f8 f8f9 	bl	8000548 <__aeabi_dmul>
 8008356:	a336      	add	r3, pc, #216	; (adr r3, 8008430 <__kernel_cos+0x160>)
 8008358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800835c:	f7f7 ff3c 	bl	80001d8 <__aeabi_dsub>
 8008360:	4622      	mov	r2, r4
 8008362:	462b      	mov	r3, r5
 8008364:	f7f8 f8f0 	bl	8000548 <__aeabi_dmul>
 8008368:	a333      	add	r3, pc, #204	; (adr r3, 8008438 <__kernel_cos+0x168>)
 800836a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800836e:	f7f7 ff35 	bl	80001dc <__adddf3>
 8008372:	4622      	mov	r2, r4
 8008374:	462b      	mov	r3, r5
 8008376:	f7f8 f8e7 	bl	8000548 <__aeabi_dmul>
 800837a:	4622      	mov	r2, r4
 800837c:	462b      	mov	r3, r5
 800837e:	f7f8 f8e3 	bl	8000548 <__aeabi_dmul>
 8008382:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008386:	4604      	mov	r4, r0
 8008388:	460d      	mov	r5, r1
 800838a:	4630      	mov	r0, r6
 800838c:	4639      	mov	r1, r7
 800838e:	f7f8 f8db 	bl	8000548 <__aeabi_dmul>
 8008392:	460b      	mov	r3, r1
 8008394:	4602      	mov	r2, r0
 8008396:	4629      	mov	r1, r5
 8008398:	4620      	mov	r0, r4
 800839a:	f7f7 ff1d 	bl	80001d8 <__aeabi_dsub>
 800839e:	4b2b      	ldr	r3, [pc, #172]	; (800844c <__kernel_cos+0x17c>)
 80083a0:	4598      	cmp	r8, r3
 80083a2:	4606      	mov	r6, r0
 80083a4:	460f      	mov	r7, r1
 80083a6:	dc10      	bgt.n	80083ca <__kernel_cos+0xfa>
 80083a8:	4602      	mov	r2, r0
 80083aa:	460b      	mov	r3, r1
 80083ac:	4650      	mov	r0, sl
 80083ae:	4659      	mov	r1, fp
 80083b0:	f7f7 ff12 	bl	80001d8 <__aeabi_dsub>
 80083b4:	460b      	mov	r3, r1
 80083b6:	4926      	ldr	r1, [pc, #152]	; (8008450 <__kernel_cos+0x180>)
 80083b8:	4602      	mov	r2, r0
 80083ba:	2000      	movs	r0, #0
 80083bc:	f7f7 ff0c 	bl	80001d8 <__aeabi_dsub>
 80083c0:	ec41 0b10 	vmov	d0, r0, r1
 80083c4:	b003      	add	sp, #12
 80083c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80083ca:	4b22      	ldr	r3, [pc, #136]	; (8008454 <__kernel_cos+0x184>)
 80083cc:	4920      	ldr	r1, [pc, #128]	; (8008450 <__kernel_cos+0x180>)
 80083ce:	4598      	cmp	r8, r3
 80083d0:	bfcc      	ite	gt
 80083d2:	4d21      	ldrgt	r5, [pc, #132]	; (8008458 <__kernel_cos+0x188>)
 80083d4:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 80083d8:	2400      	movs	r4, #0
 80083da:	4622      	mov	r2, r4
 80083dc:	462b      	mov	r3, r5
 80083de:	2000      	movs	r0, #0
 80083e0:	f7f7 fefa 	bl	80001d8 <__aeabi_dsub>
 80083e4:	4622      	mov	r2, r4
 80083e6:	4680      	mov	r8, r0
 80083e8:	4689      	mov	r9, r1
 80083ea:	462b      	mov	r3, r5
 80083ec:	4650      	mov	r0, sl
 80083ee:	4659      	mov	r1, fp
 80083f0:	f7f7 fef2 	bl	80001d8 <__aeabi_dsub>
 80083f4:	4632      	mov	r2, r6
 80083f6:	463b      	mov	r3, r7
 80083f8:	f7f7 feee 	bl	80001d8 <__aeabi_dsub>
 80083fc:	4602      	mov	r2, r0
 80083fe:	460b      	mov	r3, r1
 8008400:	4640      	mov	r0, r8
 8008402:	4649      	mov	r1, r9
 8008404:	e7da      	b.n	80083bc <__kernel_cos+0xec>
 8008406:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8008440 <__kernel_cos+0x170>
 800840a:	e7db      	b.n	80083c4 <__kernel_cos+0xf4>
 800840c:	f3af 8000 	nop.w
 8008410:	be8838d4 	.word	0xbe8838d4
 8008414:	bda8fae9 	.word	0xbda8fae9
 8008418:	bdb4b1c4 	.word	0xbdb4b1c4
 800841c:	3e21ee9e 	.word	0x3e21ee9e
 8008420:	809c52ad 	.word	0x809c52ad
 8008424:	3e927e4f 	.word	0x3e927e4f
 8008428:	19cb1590 	.word	0x19cb1590
 800842c:	3efa01a0 	.word	0x3efa01a0
 8008430:	16c15177 	.word	0x16c15177
 8008434:	3f56c16c 	.word	0x3f56c16c
 8008438:	5555554c 	.word	0x5555554c
 800843c:	3fa55555 	.word	0x3fa55555
 8008440:	00000000 	.word	0x00000000
 8008444:	3ff00000 	.word	0x3ff00000
 8008448:	3fe00000 	.word	0x3fe00000
 800844c:	3fd33332 	.word	0x3fd33332
 8008450:	3ff00000 	.word	0x3ff00000
 8008454:	3fe90000 	.word	0x3fe90000
 8008458:	3fd20000 	.word	0x3fd20000
 800845c:	00000000 	.word	0x00000000

08008460 <__kernel_rem_pio2>:
 8008460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008464:	ed2d 8b02 	vpush	{d8}
 8008468:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 800846c:	f112 0f14 	cmn.w	r2, #20
 8008470:	9308      	str	r3, [sp, #32]
 8008472:	9101      	str	r1, [sp, #4]
 8008474:	4bc6      	ldr	r3, [pc, #792]	; (8008790 <__kernel_rem_pio2+0x330>)
 8008476:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8008478:	9009      	str	r0, [sp, #36]	; 0x24
 800847a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800847e:	9304      	str	r3, [sp, #16]
 8008480:	9b08      	ldr	r3, [sp, #32]
 8008482:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8008486:	bfa8      	it	ge
 8008488:	1ed4      	subge	r4, r2, #3
 800848a:	9306      	str	r3, [sp, #24]
 800848c:	bfb2      	itee	lt
 800848e:	2400      	movlt	r4, #0
 8008490:	2318      	movge	r3, #24
 8008492:	fb94 f4f3 	sdivge	r4, r4, r3
 8008496:	f06f 0317 	mvn.w	r3, #23
 800849a:	fb04 3303 	mla	r3, r4, r3, r3
 800849e:	eb03 0a02 	add.w	sl, r3, r2
 80084a2:	9b04      	ldr	r3, [sp, #16]
 80084a4:	9a06      	ldr	r2, [sp, #24]
 80084a6:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 8008780 <__kernel_rem_pio2+0x320>
 80084aa:	eb03 0802 	add.w	r8, r3, r2
 80084ae:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 80084b0:	1aa7      	subs	r7, r4, r2
 80084b2:	ae20      	add	r6, sp, #128	; 0x80
 80084b4:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80084b8:	2500      	movs	r5, #0
 80084ba:	4545      	cmp	r5, r8
 80084bc:	dd18      	ble.n	80084f0 <__kernel_rem_pio2+0x90>
 80084be:	9b08      	ldr	r3, [sp, #32]
 80084c0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80084c4:	aa20      	add	r2, sp, #128	; 0x80
 80084c6:	ed9f 8bae 	vldr	d8, [pc, #696]	; 8008780 <__kernel_rem_pio2+0x320>
 80084ca:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 80084ce:	f1c3 0301 	rsb	r3, r3, #1
 80084d2:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 80084d6:	9307      	str	r3, [sp, #28]
 80084d8:	9b07      	ldr	r3, [sp, #28]
 80084da:	9a04      	ldr	r2, [sp, #16]
 80084dc:	4443      	add	r3, r8
 80084de:	429a      	cmp	r2, r3
 80084e0:	db2f      	blt.n	8008542 <__kernel_rem_pio2+0xe2>
 80084e2:	ed8d 8b02 	vstr	d8, [sp, #8]
 80084e6:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80084ea:	462f      	mov	r7, r5
 80084ec:	2600      	movs	r6, #0
 80084ee:	e01b      	b.n	8008528 <__kernel_rem_pio2+0xc8>
 80084f0:	42ef      	cmn	r7, r5
 80084f2:	d407      	bmi.n	8008504 <__kernel_rem_pio2+0xa4>
 80084f4:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80084f8:	f7f7 ffbc 	bl	8000474 <__aeabi_i2d>
 80084fc:	e8e6 0102 	strd	r0, r1, [r6], #8
 8008500:	3501      	adds	r5, #1
 8008502:	e7da      	b.n	80084ba <__kernel_rem_pio2+0x5a>
 8008504:	ec51 0b18 	vmov	r0, r1, d8
 8008508:	e7f8      	b.n	80084fc <__kernel_rem_pio2+0x9c>
 800850a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800850e:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8008512:	f7f8 f819 	bl	8000548 <__aeabi_dmul>
 8008516:	4602      	mov	r2, r0
 8008518:	460b      	mov	r3, r1
 800851a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800851e:	f7f7 fe5d 	bl	80001dc <__adddf3>
 8008522:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8008526:	3601      	adds	r6, #1
 8008528:	9b06      	ldr	r3, [sp, #24]
 800852a:	429e      	cmp	r6, r3
 800852c:	f1a7 0708 	sub.w	r7, r7, #8
 8008530:	ddeb      	ble.n	800850a <__kernel_rem_pio2+0xaa>
 8008532:	ed9d 7b02 	vldr	d7, [sp, #8]
 8008536:	3508      	adds	r5, #8
 8008538:	ecab 7b02 	vstmia	fp!, {d7}
 800853c:	f108 0801 	add.w	r8, r8, #1
 8008540:	e7ca      	b.n	80084d8 <__kernel_rem_pio2+0x78>
 8008542:	9b04      	ldr	r3, [sp, #16]
 8008544:	aa0c      	add	r2, sp, #48	; 0x30
 8008546:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800854a:	930b      	str	r3, [sp, #44]	; 0x2c
 800854c:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 800854e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8008552:	9c04      	ldr	r4, [sp, #16]
 8008554:	930a      	str	r3, [sp, #40]	; 0x28
 8008556:	ab98      	add	r3, sp, #608	; 0x260
 8008558:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800855c:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8008560:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
 8008564:	f8cd b008 	str.w	fp, [sp, #8]
 8008568:	4625      	mov	r5, r4
 800856a:	2d00      	cmp	r5, #0
 800856c:	dc78      	bgt.n	8008660 <__kernel_rem_pio2+0x200>
 800856e:	ec47 6b10 	vmov	d0, r6, r7
 8008572:	4650      	mov	r0, sl
 8008574:	f000 fbfc 	bl	8008d70 <scalbn>
 8008578:	ec57 6b10 	vmov	r6, r7, d0
 800857c:	2200      	movs	r2, #0
 800857e:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8008582:	ee10 0a10 	vmov	r0, s0
 8008586:	4639      	mov	r1, r7
 8008588:	f7f7 ffde 	bl	8000548 <__aeabi_dmul>
 800858c:	ec41 0b10 	vmov	d0, r0, r1
 8008590:	f000 fb6e 	bl	8008c70 <floor>
 8008594:	4b7f      	ldr	r3, [pc, #508]	; (8008794 <__kernel_rem_pio2+0x334>)
 8008596:	ec51 0b10 	vmov	r0, r1, d0
 800859a:	2200      	movs	r2, #0
 800859c:	f7f7 ffd4 	bl	8000548 <__aeabi_dmul>
 80085a0:	4602      	mov	r2, r0
 80085a2:	460b      	mov	r3, r1
 80085a4:	4630      	mov	r0, r6
 80085a6:	4639      	mov	r1, r7
 80085a8:	f7f7 fe16 	bl	80001d8 <__aeabi_dsub>
 80085ac:	460f      	mov	r7, r1
 80085ae:	4606      	mov	r6, r0
 80085b0:	f7f8 fa64 	bl	8000a7c <__aeabi_d2iz>
 80085b4:	9007      	str	r0, [sp, #28]
 80085b6:	f7f7 ff5d 	bl	8000474 <__aeabi_i2d>
 80085ba:	4602      	mov	r2, r0
 80085bc:	460b      	mov	r3, r1
 80085be:	4630      	mov	r0, r6
 80085c0:	4639      	mov	r1, r7
 80085c2:	f7f7 fe09 	bl	80001d8 <__aeabi_dsub>
 80085c6:	f1ba 0f00 	cmp.w	sl, #0
 80085ca:	4606      	mov	r6, r0
 80085cc:	460f      	mov	r7, r1
 80085ce:	dd70      	ble.n	80086b2 <__kernel_rem_pio2+0x252>
 80085d0:	1e62      	subs	r2, r4, #1
 80085d2:	ab0c      	add	r3, sp, #48	; 0x30
 80085d4:	9d07      	ldr	r5, [sp, #28]
 80085d6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80085da:	f1ca 0118 	rsb	r1, sl, #24
 80085de:	fa40 f301 	asr.w	r3, r0, r1
 80085e2:	441d      	add	r5, r3
 80085e4:	408b      	lsls	r3, r1
 80085e6:	1ac0      	subs	r0, r0, r3
 80085e8:	ab0c      	add	r3, sp, #48	; 0x30
 80085ea:	9507      	str	r5, [sp, #28]
 80085ec:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 80085f0:	f1ca 0317 	rsb	r3, sl, #23
 80085f4:	fa40 f303 	asr.w	r3, r0, r3
 80085f8:	9302      	str	r3, [sp, #8]
 80085fa:	9b02      	ldr	r3, [sp, #8]
 80085fc:	2b00      	cmp	r3, #0
 80085fe:	dd66      	ble.n	80086ce <__kernel_rem_pio2+0x26e>
 8008600:	9b07      	ldr	r3, [sp, #28]
 8008602:	2200      	movs	r2, #0
 8008604:	3301      	adds	r3, #1
 8008606:	9307      	str	r3, [sp, #28]
 8008608:	4615      	mov	r5, r2
 800860a:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 800860e:	4294      	cmp	r4, r2
 8008610:	f300 8099 	bgt.w	8008746 <__kernel_rem_pio2+0x2e6>
 8008614:	f1ba 0f00 	cmp.w	sl, #0
 8008618:	dd07      	ble.n	800862a <__kernel_rem_pio2+0x1ca>
 800861a:	f1ba 0f01 	cmp.w	sl, #1
 800861e:	f000 80a5 	beq.w	800876c <__kernel_rem_pio2+0x30c>
 8008622:	f1ba 0f02 	cmp.w	sl, #2
 8008626:	f000 80c1 	beq.w	80087ac <__kernel_rem_pio2+0x34c>
 800862a:	9b02      	ldr	r3, [sp, #8]
 800862c:	2b02      	cmp	r3, #2
 800862e:	d14e      	bne.n	80086ce <__kernel_rem_pio2+0x26e>
 8008630:	4632      	mov	r2, r6
 8008632:	463b      	mov	r3, r7
 8008634:	4958      	ldr	r1, [pc, #352]	; (8008798 <__kernel_rem_pio2+0x338>)
 8008636:	2000      	movs	r0, #0
 8008638:	f7f7 fdce 	bl	80001d8 <__aeabi_dsub>
 800863c:	4606      	mov	r6, r0
 800863e:	460f      	mov	r7, r1
 8008640:	2d00      	cmp	r5, #0
 8008642:	d044      	beq.n	80086ce <__kernel_rem_pio2+0x26e>
 8008644:	4650      	mov	r0, sl
 8008646:	ed9f 0b50 	vldr	d0, [pc, #320]	; 8008788 <__kernel_rem_pio2+0x328>
 800864a:	f000 fb91 	bl	8008d70 <scalbn>
 800864e:	4630      	mov	r0, r6
 8008650:	4639      	mov	r1, r7
 8008652:	ec53 2b10 	vmov	r2, r3, d0
 8008656:	f7f7 fdbf 	bl	80001d8 <__aeabi_dsub>
 800865a:	4606      	mov	r6, r0
 800865c:	460f      	mov	r7, r1
 800865e:	e036      	b.n	80086ce <__kernel_rem_pio2+0x26e>
 8008660:	4b4e      	ldr	r3, [pc, #312]	; (800879c <__kernel_rem_pio2+0x33c>)
 8008662:	2200      	movs	r2, #0
 8008664:	4630      	mov	r0, r6
 8008666:	4639      	mov	r1, r7
 8008668:	f7f7 ff6e 	bl	8000548 <__aeabi_dmul>
 800866c:	f7f8 fa06 	bl	8000a7c <__aeabi_d2iz>
 8008670:	f7f7 ff00 	bl	8000474 <__aeabi_i2d>
 8008674:	4b4a      	ldr	r3, [pc, #296]	; (80087a0 <__kernel_rem_pio2+0x340>)
 8008676:	2200      	movs	r2, #0
 8008678:	4680      	mov	r8, r0
 800867a:	4689      	mov	r9, r1
 800867c:	f7f7 ff64 	bl	8000548 <__aeabi_dmul>
 8008680:	4602      	mov	r2, r0
 8008682:	460b      	mov	r3, r1
 8008684:	4630      	mov	r0, r6
 8008686:	4639      	mov	r1, r7
 8008688:	f7f7 fda6 	bl	80001d8 <__aeabi_dsub>
 800868c:	f7f8 f9f6 	bl	8000a7c <__aeabi_d2iz>
 8008690:	9b02      	ldr	r3, [sp, #8]
 8008692:	f843 0b04 	str.w	r0, [r3], #4
 8008696:	3d01      	subs	r5, #1
 8008698:	9302      	str	r3, [sp, #8]
 800869a:	ab70      	add	r3, sp, #448	; 0x1c0
 800869c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80086a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80086a4:	4640      	mov	r0, r8
 80086a6:	4649      	mov	r1, r9
 80086a8:	f7f7 fd98 	bl	80001dc <__adddf3>
 80086ac:	4606      	mov	r6, r0
 80086ae:	460f      	mov	r7, r1
 80086b0:	e75b      	b.n	800856a <__kernel_rem_pio2+0x10a>
 80086b2:	d105      	bne.n	80086c0 <__kernel_rem_pio2+0x260>
 80086b4:	1e63      	subs	r3, r4, #1
 80086b6:	aa0c      	add	r2, sp, #48	; 0x30
 80086b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80086bc:	15c3      	asrs	r3, r0, #23
 80086be:	e79b      	b.n	80085f8 <__kernel_rem_pio2+0x198>
 80086c0:	4b38      	ldr	r3, [pc, #224]	; (80087a4 <__kernel_rem_pio2+0x344>)
 80086c2:	2200      	movs	r2, #0
 80086c4:	f7f8 f9c6 	bl	8000a54 <__aeabi_dcmpge>
 80086c8:	2800      	cmp	r0, #0
 80086ca:	d139      	bne.n	8008740 <__kernel_rem_pio2+0x2e0>
 80086cc:	9002      	str	r0, [sp, #8]
 80086ce:	2200      	movs	r2, #0
 80086d0:	2300      	movs	r3, #0
 80086d2:	4630      	mov	r0, r6
 80086d4:	4639      	mov	r1, r7
 80086d6:	f7f8 f99f 	bl	8000a18 <__aeabi_dcmpeq>
 80086da:	2800      	cmp	r0, #0
 80086dc:	f000 80b4 	beq.w	8008848 <__kernel_rem_pio2+0x3e8>
 80086e0:	f104 3bff 	add.w	fp, r4, #4294967295	; 0xffffffff
 80086e4:	465b      	mov	r3, fp
 80086e6:	2200      	movs	r2, #0
 80086e8:	9904      	ldr	r1, [sp, #16]
 80086ea:	428b      	cmp	r3, r1
 80086ec:	da65      	bge.n	80087ba <__kernel_rem_pio2+0x35a>
 80086ee:	2a00      	cmp	r2, #0
 80086f0:	d07b      	beq.n	80087ea <__kernel_rem_pio2+0x38a>
 80086f2:	ab0c      	add	r3, sp, #48	; 0x30
 80086f4:	f1aa 0a18 	sub.w	sl, sl, #24
 80086f8:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	f000 80a0 	beq.w	8008842 <__kernel_rem_pio2+0x3e2>
 8008702:	ed9f 0b21 	vldr	d0, [pc, #132]	; 8008788 <__kernel_rem_pio2+0x328>
 8008706:	4650      	mov	r0, sl
 8008708:	f000 fb32 	bl	8008d70 <scalbn>
 800870c:	4f23      	ldr	r7, [pc, #140]	; (800879c <__kernel_rem_pio2+0x33c>)
 800870e:	ec55 4b10 	vmov	r4, r5, d0
 8008712:	46d8      	mov	r8, fp
 8008714:	2600      	movs	r6, #0
 8008716:	f1b8 0f00 	cmp.w	r8, #0
 800871a:	f280 80cf 	bge.w	80088bc <__kernel_rem_pio2+0x45c>
 800871e:	ed9f 8b18 	vldr	d8, [pc, #96]	; 8008780 <__kernel_rem_pio2+0x320>
 8008722:	465f      	mov	r7, fp
 8008724:	f04f 0800 	mov.w	r8, #0
 8008728:	2f00      	cmp	r7, #0
 800872a:	f2c0 80fd 	blt.w	8008928 <__kernel_rem_pio2+0x4c8>
 800872e:	ab70      	add	r3, sp, #448	; 0x1c0
 8008730:	f8df a074 	ldr.w	sl, [pc, #116]	; 80087a8 <__kernel_rem_pio2+0x348>
 8008734:	ec55 4b18 	vmov	r4, r5, d8
 8008738:	eb03 09c7 	add.w	r9, r3, r7, lsl #3
 800873c:	2600      	movs	r6, #0
 800873e:	e0e5      	b.n	800890c <__kernel_rem_pio2+0x4ac>
 8008740:	2302      	movs	r3, #2
 8008742:	9302      	str	r3, [sp, #8]
 8008744:	e75c      	b.n	8008600 <__kernel_rem_pio2+0x1a0>
 8008746:	f8db 3000 	ldr.w	r3, [fp]
 800874a:	b955      	cbnz	r5, 8008762 <__kernel_rem_pio2+0x302>
 800874c:	b123      	cbz	r3, 8008758 <__kernel_rem_pio2+0x2f8>
 800874e:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8008752:	f8cb 3000 	str.w	r3, [fp]
 8008756:	2301      	movs	r3, #1
 8008758:	3201      	adds	r2, #1
 800875a:	f10b 0b04 	add.w	fp, fp, #4
 800875e:	461d      	mov	r5, r3
 8008760:	e755      	b.n	800860e <__kernel_rem_pio2+0x1ae>
 8008762:	1acb      	subs	r3, r1, r3
 8008764:	f8cb 3000 	str.w	r3, [fp]
 8008768:	462b      	mov	r3, r5
 800876a:	e7f5      	b.n	8008758 <__kernel_rem_pio2+0x2f8>
 800876c:	1e62      	subs	r2, r4, #1
 800876e:	ab0c      	add	r3, sp, #48	; 0x30
 8008770:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8008774:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8008778:	a90c      	add	r1, sp, #48	; 0x30
 800877a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800877e:	e754      	b.n	800862a <__kernel_rem_pio2+0x1ca>
	...
 800878c:	3ff00000 	.word	0x3ff00000
 8008790:	080090a8 	.word	0x080090a8
 8008794:	40200000 	.word	0x40200000
 8008798:	3ff00000 	.word	0x3ff00000
 800879c:	3e700000 	.word	0x3e700000
 80087a0:	41700000 	.word	0x41700000
 80087a4:	3fe00000 	.word	0x3fe00000
 80087a8:	08009068 	.word	0x08009068
 80087ac:	1e62      	subs	r2, r4, #1
 80087ae:	ab0c      	add	r3, sp, #48	; 0x30
 80087b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80087b4:	f3c3 0315 	ubfx	r3, r3, #0, #22
 80087b8:	e7de      	b.n	8008778 <__kernel_rem_pio2+0x318>
 80087ba:	a90c      	add	r1, sp, #48	; 0x30
 80087bc:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80087c0:	3b01      	subs	r3, #1
 80087c2:	430a      	orrs	r2, r1
 80087c4:	e790      	b.n	80086e8 <__kernel_rem_pio2+0x288>
 80087c6:	3301      	adds	r3, #1
 80087c8:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 80087cc:	2900      	cmp	r1, #0
 80087ce:	d0fa      	beq.n	80087c6 <__kernel_rem_pio2+0x366>
 80087d0:	9a08      	ldr	r2, [sp, #32]
 80087d2:	18e3      	adds	r3, r4, r3
 80087d4:	18a6      	adds	r6, r4, r2
 80087d6:	aa20      	add	r2, sp, #128	; 0x80
 80087d8:	1c65      	adds	r5, r4, #1
 80087da:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 80087de:	9302      	str	r3, [sp, #8]
 80087e0:	9b02      	ldr	r3, [sp, #8]
 80087e2:	42ab      	cmp	r3, r5
 80087e4:	da04      	bge.n	80087f0 <__kernel_rem_pio2+0x390>
 80087e6:	461c      	mov	r4, r3
 80087e8:	e6b5      	b.n	8008556 <__kernel_rem_pio2+0xf6>
 80087ea:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80087ec:	2301      	movs	r3, #1
 80087ee:	e7eb      	b.n	80087c8 <__kernel_rem_pio2+0x368>
 80087f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80087f2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80087f6:	f7f7 fe3d 	bl	8000474 <__aeabi_i2d>
 80087fa:	e8e6 0102 	strd	r0, r1, [r6], #8
 80087fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008800:	46b3      	mov	fp, r6
 8008802:	461c      	mov	r4, r3
 8008804:	2700      	movs	r7, #0
 8008806:	f04f 0800 	mov.w	r8, #0
 800880a:	f04f 0900 	mov.w	r9, #0
 800880e:	9b06      	ldr	r3, [sp, #24]
 8008810:	429f      	cmp	r7, r3
 8008812:	dd06      	ble.n	8008822 <__kernel_rem_pio2+0x3c2>
 8008814:	ab70      	add	r3, sp, #448	; 0x1c0
 8008816:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800881a:	e9c3 8900 	strd	r8, r9, [r3]
 800881e:	3501      	adds	r5, #1
 8008820:	e7de      	b.n	80087e0 <__kernel_rem_pio2+0x380>
 8008822:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8008826:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800882a:	f7f7 fe8d 	bl	8000548 <__aeabi_dmul>
 800882e:	4602      	mov	r2, r0
 8008830:	460b      	mov	r3, r1
 8008832:	4640      	mov	r0, r8
 8008834:	4649      	mov	r1, r9
 8008836:	f7f7 fcd1 	bl	80001dc <__adddf3>
 800883a:	3701      	adds	r7, #1
 800883c:	4680      	mov	r8, r0
 800883e:	4689      	mov	r9, r1
 8008840:	e7e5      	b.n	800880e <__kernel_rem_pio2+0x3ae>
 8008842:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008846:	e754      	b.n	80086f2 <__kernel_rem_pio2+0x292>
 8008848:	ec47 6b10 	vmov	d0, r6, r7
 800884c:	f1ca 0000 	rsb	r0, sl, #0
 8008850:	f000 fa8e 	bl	8008d70 <scalbn>
 8008854:	ec57 6b10 	vmov	r6, r7, d0
 8008858:	4b9f      	ldr	r3, [pc, #636]	; (8008ad8 <__kernel_rem_pio2+0x678>)
 800885a:	ee10 0a10 	vmov	r0, s0
 800885e:	2200      	movs	r2, #0
 8008860:	4639      	mov	r1, r7
 8008862:	f7f8 f8f7 	bl	8000a54 <__aeabi_dcmpge>
 8008866:	b300      	cbz	r0, 80088aa <__kernel_rem_pio2+0x44a>
 8008868:	4b9c      	ldr	r3, [pc, #624]	; (8008adc <__kernel_rem_pio2+0x67c>)
 800886a:	2200      	movs	r2, #0
 800886c:	4630      	mov	r0, r6
 800886e:	4639      	mov	r1, r7
 8008870:	f7f7 fe6a 	bl	8000548 <__aeabi_dmul>
 8008874:	f7f8 f902 	bl	8000a7c <__aeabi_d2iz>
 8008878:	4605      	mov	r5, r0
 800887a:	f7f7 fdfb 	bl	8000474 <__aeabi_i2d>
 800887e:	4b96      	ldr	r3, [pc, #600]	; (8008ad8 <__kernel_rem_pio2+0x678>)
 8008880:	2200      	movs	r2, #0
 8008882:	f7f7 fe61 	bl	8000548 <__aeabi_dmul>
 8008886:	460b      	mov	r3, r1
 8008888:	4602      	mov	r2, r0
 800888a:	4639      	mov	r1, r7
 800888c:	4630      	mov	r0, r6
 800888e:	f7f7 fca3 	bl	80001d8 <__aeabi_dsub>
 8008892:	f7f8 f8f3 	bl	8000a7c <__aeabi_d2iz>
 8008896:	f104 0b01 	add.w	fp, r4, #1
 800889a:	ab0c      	add	r3, sp, #48	; 0x30
 800889c:	f10a 0a18 	add.w	sl, sl, #24
 80088a0:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80088a4:	f843 502b 	str.w	r5, [r3, fp, lsl #2]
 80088a8:	e72b      	b.n	8008702 <__kernel_rem_pio2+0x2a2>
 80088aa:	4630      	mov	r0, r6
 80088ac:	4639      	mov	r1, r7
 80088ae:	f7f8 f8e5 	bl	8000a7c <__aeabi_d2iz>
 80088b2:	ab0c      	add	r3, sp, #48	; 0x30
 80088b4:	46a3      	mov	fp, r4
 80088b6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80088ba:	e722      	b.n	8008702 <__kernel_rem_pio2+0x2a2>
 80088bc:	ab70      	add	r3, sp, #448	; 0x1c0
 80088be:	eb03 09c8 	add.w	r9, r3, r8, lsl #3
 80088c2:	ab0c      	add	r3, sp, #48	; 0x30
 80088c4:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 80088c8:	f7f7 fdd4 	bl	8000474 <__aeabi_i2d>
 80088cc:	4622      	mov	r2, r4
 80088ce:	462b      	mov	r3, r5
 80088d0:	f7f7 fe3a 	bl	8000548 <__aeabi_dmul>
 80088d4:	4632      	mov	r2, r6
 80088d6:	e9c9 0100 	strd	r0, r1, [r9]
 80088da:	463b      	mov	r3, r7
 80088dc:	4620      	mov	r0, r4
 80088de:	4629      	mov	r1, r5
 80088e0:	f7f7 fe32 	bl	8000548 <__aeabi_dmul>
 80088e4:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80088e8:	4604      	mov	r4, r0
 80088ea:	460d      	mov	r5, r1
 80088ec:	e713      	b.n	8008716 <__kernel_rem_pio2+0x2b6>
 80088ee:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 80088f2:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 80088f6:	f7f7 fe27 	bl	8000548 <__aeabi_dmul>
 80088fa:	4602      	mov	r2, r0
 80088fc:	460b      	mov	r3, r1
 80088fe:	4620      	mov	r0, r4
 8008900:	4629      	mov	r1, r5
 8008902:	f7f7 fc6b 	bl	80001dc <__adddf3>
 8008906:	3601      	adds	r6, #1
 8008908:	4604      	mov	r4, r0
 800890a:	460d      	mov	r5, r1
 800890c:	9b04      	ldr	r3, [sp, #16]
 800890e:	429e      	cmp	r6, r3
 8008910:	dc01      	bgt.n	8008916 <__kernel_rem_pio2+0x4b6>
 8008912:	45b0      	cmp	r8, r6
 8008914:	daeb      	bge.n	80088ee <__kernel_rem_pio2+0x48e>
 8008916:	ab48      	add	r3, sp, #288	; 0x120
 8008918:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800891c:	e9c3 4500 	strd	r4, r5, [r3]
 8008920:	3f01      	subs	r7, #1
 8008922:	f108 0801 	add.w	r8, r8, #1
 8008926:	e6ff      	b.n	8008728 <__kernel_rem_pio2+0x2c8>
 8008928:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 800892a:	2b02      	cmp	r3, #2
 800892c:	dc0b      	bgt.n	8008946 <__kernel_rem_pio2+0x4e6>
 800892e:	2b00      	cmp	r3, #0
 8008930:	dc6e      	bgt.n	8008a10 <__kernel_rem_pio2+0x5b0>
 8008932:	d045      	beq.n	80089c0 <__kernel_rem_pio2+0x560>
 8008934:	9b07      	ldr	r3, [sp, #28]
 8008936:	f003 0007 	and.w	r0, r3, #7
 800893a:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 800893e:	ecbd 8b02 	vpop	{d8}
 8008942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008946:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8008948:	2b03      	cmp	r3, #3
 800894a:	d1f3      	bne.n	8008934 <__kernel_rem_pio2+0x4d4>
 800894c:	ab48      	add	r3, sp, #288	; 0x120
 800894e:	eb03 0acb 	add.w	sl, r3, fp, lsl #3
 8008952:	46d0      	mov	r8, sl
 8008954:	46d9      	mov	r9, fp
 8008956:	f1b9 0f00 	cmp.w	r9, #0
 800895a:	f1a8 0808 	sub.w	r8, r8, #8
 800895e:	dc64      	bgt.n	8008a2a <__kernel_rem_pio2+0x5ca>
 8008960:	465c      	mov	r4, fp
 8008962:	2c01      	cmp	r4, #1
 8008964:	f1aa 0a08 	sub.w	sl, sl, #8
 8008968:	dc7e      	bgt.n	8008a68 <__kernel_rem_pio2+0x608>
 800896a:	2000      	movs	r0, #0
 800896c:	2100      	movs	r1, #0
 800896e:	f1bb 0f01 	cmp.w	fp, #1
 8008972:	f300 8097 	bgt.w	8008aa4 <__kernel_rem_pio2+0x644>
 8008976:	9b02      	ldr	r3, [sp, #8]
 8008978:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	; 0x120
 800897c:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 8008980:	2b00      	cmp	r3, #0
 8008982:	f040 8099 	bne.w	8008ab8 <__kernel_rem_pio2+0x658>
 8008986:	9b01      	ldr	r3, [sp, #4]
 8008988:	e9c3 5600 	strd	r5, r6, [r3]
 800898c:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8008990:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8008994:	e7ce      	b.n	8008934 <__kernel_rem_pio2+0x4d4>
 8008996:	ab48      	add	r3, sp, #288	; 0x120
 8008998:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800899c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089a0:	f7f7 fc1c 	bl	80001dc <__adddf3>
 80089a4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80089a8:	f1bb 0f00 	cmp.w	fp, #0
 80089ac:	daf3      	bge.n	8008996 <__kernel_rem_pio2+0x536>
 80089ae:	9b02      	ldr	r3, [sp, #8]
 80089b0:	b113      	cbz	r3, 80089b8 <__kernel_rem_pio2+0x558>
 80089b2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80089b6:	4619      	mov	r1, r3
 80089b8:	9b01      	ldr	r3, [sp, #4]
 80089ba:	e9c3 0100 	strd	r0, r1, [r3]
 80089be:	e7b9      	b.n	8008934 <__kernel_rem_pio2+0x4d4>
 80089c0:	2000      	movs	r0, #0
 80089c2:	2100      	movs	r1, #0
 80089c4:	e7f0      	b.n	80089a8 <__kernel_rem_pio2+0x548>
 80089c6:	ab48      	add	r3, sp, #288	; 0x120
 80089c8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80089cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089d0:	f7f7 fc04 	bl	80001dc <__adddf3>
 80089d4:	3c01      	subs	r4, #1
 80089d6:	2c00      	cmp	r4, #0
 80089d8:	daf5      	bge.n	80089c6 <__kernel_rem_pio2+0x566>
 80089da:	9b02      	ldr	r3, [sp, #8]
 80089dc:	b1e3      	cbz	r3, 8008a18 <__kernel_rem_pio2+0x5b8>
 80089de:	4602      	mov	r2, r0
 80089e0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80089e4:	9c01      	ldr	r4, [sp, #4]
 80089e6:	e9c4 2300 	strd	r2, r3, [r4]
 80089ea:	4602      	mov	r2, r0
 80089ec:	460b      	mov	r3, r1
 80089ee:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80089f2:	f7f7 fbf1 	bl	80001d8 <__aeabi_dsub>
 80089f6:	ad4a      	add	r5, sp, #296	; 0x128
 80089f8:	2401      	movs	r4, #1
 80089fa:	45a3      	cmp	fp, r4
 80089fc:	da0f      	bge.n	8008a1e <__kernel_rem_pio2+0x5be>
 80089fe:	9b02      	ldr	r3, [sp, #8]
 8008a00:	b113      	cbz	r3, 8008a08 <__kernel_rem_pio2+0x5a8>
 8008a02:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008a06:	4619      	mov	r1, r3
 8008a08:	9b01      	ldr	r3, [sp, #4]
 8008a0a:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8008a0e:	e791      	b.n	8008934 <__kernel_rem_pio2+0x4d4>
 8008a10:	465c      	mov	r4, fp
 8008a12:	2000      	movs	r0, #0
 8008a14:	2100      	movs	r1, #0
 8008a16:	e7de      	b.n	80089d6 <__kernel_rem_pio2+0x576>
 8008a18:	4602      	mov	r2, r0
 8008a1a:	460b      	mov	r3, r1
 8008a1c:	e7e2      	b.n	80089e4 <__kernel_rem_pio2+0x584>
 8008a1e:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8008a22:	f7f7 fbdb 	bl	80001dc <__adddf3>
 8008a26:	3401      	adds	r4, #1
 8008a28:	e7e7      	b.n	80089fa <__kernel_rem_pio2+0x59a>
 8008a2a:	e9d8 4500 	ldrd	r4, r5, [r8]
 8008a2e:	e9d8 6702 	ldrd	r6, r7, [r8, #8]
 8008a32:	4620      	mov	r0, r4
 8008a34:	4632      	mov	r2, r6
 8008a36:	463b      	mov	r3, r7
 8008a38:	4629      	mov	r1, r5
 8008a3a:	f7f7 fbcf 	bl	80001dc <__adddf3>
 8008a3e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a42:	4602      	mov	r2, r0
 8008a44:	460b      	mov	r3, r1
 8008a46:	4620      	mov	r0, r4
 8008a48:	4629      	mov	r1, r5
 8008a4a:	f7f7 fbc5 	bl	80001d8 <__aeabi_dsub>
 8008a4e:	4632      	mov	r2, r6
 8008a50:	463b      	mov	r3, r7
 8008a52:	f7f7 fbc3 	bl	80001dc <__adddf3>
 8008a56:	ed9d 7b04 	vldr	d7, [sp, #16]
 8008a5a:	e9c8 0102 	strd	r0, r1, [r8, #8]
 8008a5e:	ed88 7b00 	vstr	d7, [r8]
 8008a62:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008a66:	e776      	b.n	8008956 <__kernel_rem_pio2+0x4f6>
 8008a68:	e9da 8900 	ldrd	r8, r9, [sl]
 8008a6c:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 8008a70:	4640      	mov	r0, r8
 8008a72:	4632      	mov	r2, r6
 8008a74:	463b      	mov	r3, r7
 8008a76:	4649      	mov	r1, r9
 8008a78:	f7f7 fbb0 	bl	80001dc <__adddf3>
 8008a7c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8008a80:	4602      	mov	r2, r0
 8008a82:	460b      	mov	r3, r1
 8008a84:	4640      	mov	r0, r8
 8008a86:	4649      	mov	r1, r9
 8008a88:	f7f7 fba6 	bl	80001d8 <__aeabi_dsub>
 8008a8c:	4632      	mov	r2, r6
 8008a8e:	463b      	mov	r3, r7
 8008a90:	f7f7 fba4 	bl	80001dc <__adddf3>
 8008a94:	ed9d 7b04 	vldr	d7, [sp, #16]
 8008a98:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8008a9c:	ed8a 7b00 	vstr	d7, [sl]
 8008aa0:	3c01      	subs	r4, #1
 8008aa2:	e75e      	b.n	8008962 <__kernel_rem_pio2+0x502>
 8008aa4:	ab48      	add	r3, sp, #288	; 0x120
 8008aa6:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8008aaa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008aae:	f7f7 fb95 	bl	80001dc <__adddf3>
 8008ab2:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8008ab6:	e75a      	b.n	800896e <__kernel_rem_pio2+0x50e>
 8008ab8:	9b01      	ldr	r3, [sp, #4]
 8008aba:	9a01      	ldr	r2, [sp, #4]
 8008abc:	601d      	str	r5, [r3, #0]
 8008abe:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8008ac2:	605c      	str	r4, [r3, #4]
 8008ac4:	609f      	str	r7, [r3, #8]
 8008ac6:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 8008aca:	60d3      	str	r3, [r2, #12]
 8008acc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008ad0:	6110      	str	r0, [r2, #16]
 8008ad2:	6153      	str	r3, [r2, #20]
 8008ad4:	e72e      	b.n	8008934 <__kernel_rem_pio2+0x4d4>
 8008ad6:	bf00      	nop
 8008ad8:	41700000 	.word	0x41700000
 8008adc:	3e700000 	.word	0x3e700000

08008ae0 <__kernel_sin>:
 8008ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ae4:	ed2d 8b04 	vpush	{d8-d9}
 8008ae8:	eeb0 8a41 	vmov.f32	s16, s2
 8008aec:	eef0 8a61 	vmov.f32	s17, s3
 8008af0:	ec55 4b10 	vmov	r4, r5, d0
 8008af4:	b083      	sub	sp, #12
 8008af6:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8008afa:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8008afe:	9001      	str	r0, [sp, #4]
 8008b00:	da06      	bge.n	8008b10 <__kernel_sin+0x30>
 8008b02:	ee10 0a10 	vmov	r0, s0
 8008b06:	4629      	mov	r1, r5
 8008b08:	f7f7 ffb8 	bl	8000a7c <__aeabi_d2iz>
 8008b0c:	2800      	cmp	r0, #0
 8008b0e:	d051      	beq.n	8008bb4 <__kernel_sin+0xd4>
 8008b10:	4622      	mov	r2, r4
 8008b12:	462b      	mov	r3, r5
 8008b14:	4620      	mov	r0, r4
 8008b16:	4629      	mov	r1, r5
 8008b18:	f7f7 fd16 	bl	8000548 <__aeabi_dmul>
 8008b1c:	4682      	mov	sl, r0
 8008b1e:	468b      	mov	fp, r1
 8008b20:	4602      	mov	r2, r0
 8008b22:	460b      	mov	r3, r1
 8008b24:	4620      	mov	r0, r4
 8008b26:	4629      	mov	r1, r5
 8008b28:	f7f7 fd0e 	bl	8000548 <__aeabi_dmul>
 8008b2c:	a341      	add	r3, pc, #260	; (adr r3, 8008c34 <__kernel_sin+0x154>)
 8008b2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b32:	4680      	mov	r8, r0
 8008b34:	4689      	mov	r9, r1
 8008b36:	4650      	mov	r0, sl
 8008b38:	4659      	mov	r1, fp
 8008b3a:	f7f7 fd05 	bl	8000548 <__aeabi_dmul>
 8008b3e:	a33f      	add	r3, pc, #252	; (adr r3, 8008c3c <__kernel_sin+0x15c>)
 8008b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b44:	f7f7 fb48 	bl	80001d8 <__aeabi_dsub>
 8008b48:	4652      	mov	r2, sl
 8008b4a:	465b      	mov	r3, fp
 8008b4c:	f7f7 fcfc 	bl	8000548 <__aeabi_dmul>
 8008b50:	a33c      	add	r3, pc, #240	; (adr r3, 8008c44 <__kernel_sin+0x164>)
 8008b52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b56:	f7f7 fb41 	bl	80001dc <__adddf3>
 8008b5a:	4652      	mov	r2, sl
 8008b5c:	465b      	mov	r3, fp
 8008b5e:	f7f7 fcf3 	bl	8000548 <__aeabi_dmul>
 8008b62:	a33a      	add	r3, pc, #232	; (adr r3, 8008c4c <__kernel_sin+0x16c>)
 8008b64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b68:	f7f7 fb36 	bl	80001d8 <__aeabi_dsub>
 8008b6c:	4652      	mov	r2, sl
 8008b6e:	465b      	mov	r3, fp
 8008b70:	f7f7 fcea 	bl	8000548 <__aeabi_dmul>
 8008b74:	a337      	add	r3, pc, #220	; (adr r3, 8008c54 <__kernel_sin+0x174>)
 8008b76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b7a:	f7f7 fb2f 	bl	80001dc <__adddf3>
 8008b7e:	9b01      	ldr	r3, [sp, #4]
 8008b80:	4606      	mov	r6, r0
 8008b82:	460f      	mov	r7, r1
 8008b84:	b9eb      	cbnz	r3, 8008bc2 <__kernel_sin+0xe2>
 8008b86:	4602      	mov	r2, r0
 8008b88:	460b      	mov	r3, r1
 8008b8a:	4650      	mov	r0, sl
 8008b8c:	4659      	mov	r1, fp
 8008b8e:	f7f7 fcdb 	bl	8000548 <__aeabi_dmul>
 8008b92:	a325      	add	r3, pc, #148	; (adr r3, 8008c28 <__kernel_sin+0x148>)
 8008b94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b98:	f7f7 fb1e 	bl	80001d8 <__aeabi_dsub>
 8008b9c:	4642      	mov	r2, r8
 8008b9e:	464b      	mov	r3, r9
 8008ba0:	f7f7 fcd2 	bl	8000548 <__aeabi_dmul>
 8008ba4:	4602      	mov	r2, r0
 8008ba6:	460b      	mov	r3, r1
 8008ba8:	4620      	mov	r0, r4
 8008baa:	4629      	mov	r1, r5
 8008bac:	f7f7 fb16 	bl	80001dc <__adddf3>
 8008bb0:	4604      	mov	r4, r0
 8008bb2:	460d      	mov	r5, r1
 8008bb4:	ec45 4b10 	vmov	d0, r4, r5
 8008bb8:	b003      	add	sp, #12
 8008bba:	ecbd 8b04 	vpop	{d8-d9}
 8008bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008bc2:	4b1b      	ldr	r3, [pc, #108]	; (8008c30 <__kernel_sin+0x150>)
 8008bc4:	ec51 0b18 	vmov	r0, r1, d8
 8008bc8:	2200      	movs	r2, #0
 8008bca:	f7f7 fcbd 	bl	8000548 <__aeabi_dmul>
 8008bce:	4632      	mov	r2, r6
 8008bd0:	ec41 0b19 	vmov	d9, r0, r1
 8008bd4:	463b      	mov	r3, r7
 8008bd6:	4640      	mov	r0, r8
 8008bd8:	4649      	mov	r1, r9
 8008bda:	f7f7 fcb5 	bl	8000548 <__aeabi_dmul>
 8008bde:	4602      	mov	r2, r0
 8008be0:	460b      	mov	r3, r1
 8008be2:	ec51 0b19 	vmov	r0, r1, d9
 8008be6:	f7f7 faf7 	bl	80001d8 <__aeabi_dsub>
 8008bea:	4652      	mov	r2, sl
 8008bec:	465b      	mov	r3, fp
 8008bee:	f7f7 fcab 	bl	8000548 <__aeabi_dmul>
 8008bf2:	ec53 2b18 	vmov	r2, r3, d8
 8008bf6:	f7f7 faef 	bl	80001d8 <__aeabi_dsub>
 8008bfa:	a30b      	add	r3, pc, #44	; (adr r3, 8008c28 <__kernel_sin+0x148>)
 8008bfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c00:	4606      	mov	r6, r0
 8008c02:	460f      	mov	r7, r1
 8008c04:	4640      	mov	r0, r8
 8008c06:	4649      	mov	r1, r9
 8008c08:	f7f7 fc9e 	bl	8000548 <__aeabi_dmul>
 8008c0c:	4602      	mov	r2, r0
 8008c0e:	460b      	mov	r3, r1
 8008c10:	4630      	mov	r0, r6
 8008c12:	4639      	mov	r1, r7
 8008c14:	f7f7 fae2 	bl	80001dc <__adddf3>
 8008c18:	4602      	mov	r2, r0
 8008c1a:	460b      	mov	r3, r1
 8008c1c:	4620      	mov	r0, r4
 8008c1e:	4629      	mov	r1, r5
 8008c20:	f7f7 fada 	bl	80001d8 <__aeabi_dsub>
 8008c24:	e7c4      	b.n	8008bb0 <__kernel_sin+0xd0>
 8008c26:	bf00      	nop
 8008c28:	55555549 	.word	0x55555549
 8008c2c:	3fc55555 	.word	0x3fc55555
 8008c30:	3fe00000 	.word	0x3fe00000
 8008c34:	5acfd57c 	.word	0x5acfd57c
 8008c38:	3de5d93a 	.word	0x3de5d93a
 8008c3c:	8a2b9ceb 	.word	0x8a2b9ceb
 8008c40:	3e5ae5e6 	.word	0x3e5ae5e6
 8008c44:	57b1fe7d 	.word	0x57b1fe7d
 8008c48:	3ec71de3 	.word	0x3ec71de3
 8008c4c:	19c161d5 	.word	0x19c161d5
 8008c50:	3f2a01a0 	.word	0x3f2a01a0
 8008c54:	1110f8a6 	.word	0x1110f8a6
 8008c58:	3f811111 	.word	0x3f811111

08008c5c <fabs>:
 8008c5c:	ec51 0b10 	vmov	r0, r1, d0
 8008c60:	ee10 2a10 	vmov	r2, s0
 8008c64:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8008c68:	ec43 2b10 	vmov	d0, r2, r3
 8008c6c:	4770      	bx	lr
	...

08008c70 <floor>:
 8008c70:	ec51 0b10 	vmov	r0, r1, d0
 8008c74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c78:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8008c7c:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8008c80:	2e13      	cmp	r6, #19
 8008c82:	ee10 5a10 	vmov	r5, s0
 8008c86:	ee10 8a10 	vmov	r8, s0
 8008c8a:	460c      	mov	r4, r1
 8008c8c:	dc32      	bgt.n	8008cf4 <floor+0x84>
 8008c8e:	2e00      	cmp	r6, #0
 8008c90:	da14      	bge.n	8008cbc <floor+0x4c>
 8008c92:	a333      	add	r3, pc, #204	; (adr r3, 8008d60 <floor+0xf0>)
 8008c94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c98:	f7f7 faa0 	bl	80001dc <__adddf3>
 8008c9c:	2200      	movs	r2, #0
 8008c9e:	2300      	movs	r3, #0
 8008ca0:	f7f7 fee2 	bl	8000a68 <__aeabi_dcmpgt>
 8008ca4:	b138      	cbz	r0, 8008cb6 <floor+0x46>
 8008ca6:	2c00      	cmp	r4, #0
 8008ca8:	da57      	bge.n	8008d5a <floor+0xea>
 8008caa:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8008cae:	431d      	orrs	r5, r3
 8008cb0:	d001      	beq.n	8008cb6 <floor+0x46>
 8008cb2:	4c2d      	ldr	r4, [pc, #180]	; (8008d68 <floor+0xf8>)
 8008cb4:	2500      	movs	r5, #0
 8008cb6:	4621      	mov	r1, r4
 8008cb8:	4628      	mov	r0, r5
 8008cba:	e025      	b.n	8008d08 <floor+0x98>
 8008cbc:	4f2b      	ldr	r7, [pc, #172]	; (8008d6c <floor+0xfc>)
 8008cbe:	4137      	asrs	r7, r6
 8008cc0:	ea01 0307 	and.w	r3, r1, r7
 8008cc4:	4303      	orrs	r3, r0
 8008cc6:	d01f      	beq.n	8008d08 <floor+0x98>
 8008cc8:	a325      	add	r3, pc, #148	; (adr r3, 8008d60 <floor+0xf0>)
 8008cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008cce:	f7f7 fa85 	bl	80001dc <__adddf3>
 8008cd2:	2200      	movs	r2, #0
 8008cd4:	2300      	movs	r3, #0
 8008cd6:	f7f7 fec7 	bl	8000a68 <__aeabi_dcmpgt>
 8008cda:	2800      	cmp	r0, #0
 8008cdc:	d0eb      	beq.n	8008cb6 <floor+0x46>
 8008cde:	2c00      	cmp	r4, #0
 8008ce0:	bfbe      	ittt	lt
 8008ce2:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8008ce6:	fa43 f606 	asrlt.w	r6, r3, r6
 8008cea:	19a4      	addlt	r4, r4, r6
 8008cec:	ea24 0407 	bic.w	r4, r4, r7
 8008cf0:	2500      	movs	r5, #0
 8008cf2:	e7e0      	b.n	8008cb6 <floor+0x46>
 8008cf4:	2e33      	cmp	r6, #51	; 0x33
 8008cf6:	dd0b      	ble.n	8008d10 <floor+0xa0>
 8008cf8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8008cfc:	d104      	bne.n	8008d08 <floor+0x98>
 8008cfe:	ee10 2a10 	vmov	r2, s0
 8008d02:	460b      	mov	r3, r1
 8008d04:	f7f7 fa6a 	bl	80001dc <__adddf3>
 8008d08:	ec41 0b10 	vmov	d0, r0, r1
 8008d0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008d10:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8008d14:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008d18:	fa23 f707 	lsr.w	r7, r3, r7
 8008d1c:	4207      	tst	r7, r0
 8008d1e:	d0f3      	beq.n	8008d08 <floor+0x98>
 8008d20:	a30f      	add	r3, pc, #60	; (adr r3, 8008d60 <floor+0xf0>)
 8008d22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d26:	f7f7 fa59 	bl	80001dc <__adddf3>
 8008d2a:	2200      	movs	r2, #0
 8008d2c:	2300      	movs	r3, #0
 8008d2e:	f7f7 fe9b 	bl	8000a68 <__aeabi_dcmpgt>
 8008d32:	2800      	cmp	r0, #0
 8008d34:	d0bf      	beq.n	8008cb6 <floor+0x46>
 8008d36:	2c00      	cmp	r4, #0
 8008d38:	da02      	bge.n	8008d40 <floor+0xd0>
 8008d3a:	2e14      	cmp	r6, #20
 8008d3c:	d103      	bne.n	8008d46 <floor+0xd6>
 8008d3e:	3401      	adds	r4, #1
 8008d40:	ea25 0507 	bic.w	r5, r5, r7
 8008d44:	e7b7      	b.n	8008cb6 <floor+0x46>
 8008d46:	2301      	movs	r3, #1
 8008d48:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8008d4c:	fa03 f606 	lsl.w	r6, r3, r6
 8008d50:	4435      	add	r5, r6
 8008d52:	4545      	cmp	r5, r8
 8008d54:	bf38      	it	cc
 8008d56:	18e4      	addcc	r4, r4, r3
 8008d58:	e7f2      	b.n	8008d40 <floor+0xd0>
 8008d5a:	2500      	movs	r5, #0
 8008d5c:	462c      	mov	r4, r5
 8008d5e:	e7aa      	b.n	8008cb6 <floor+0x46>
 8008d60:	8800759c 	.word	0x8800759c
 8008d64:	7e37e43c 	.word	0x7e37e43c
 8008d68:	bff00000 	.word	0xbff00000
 8008d6c:	000fffff 	.word	0x000fffff

08008d70 <scalbn>:
 8008d70:	b570      	push	{r4, r5, r6, lr}
 8008d72:	ec55 4b10 	vmov	r4, r5, d0
 8008d76:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8008d7a:	4606      	mov	r6, r0
 8008d7c:	462b      	mov	r3, r5
 8008d7e:	b99a      	cbnz	r2, 8008da8 <scalbn+0x38>
 8008d80:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8008d84:	4323      	orrs	r3, r4
 8008d86:	d036      	beq.n	8008df6 <scalbn+0x86>
 8008d88:	4b39      	ldr	r3, [pc, #228]	; (8008e70 <scalbn+0x100>)
 8008d8a:	4629      	mov	r1, r5
 8008d8c:	ee10 0a10 	vmov	r0, s0
 8008d90:	2200      	movs	r2, #0
 8008d92:	f7f7 fbd9 	bl	8000548 <__aeabi_dmul>
 8008d96:	4b37      	ldr	r3, [pc, #220]	; (8008e74 <scalbn+0x104>)
 8008d98:	429e      	cmp	r6, r3
 8008d9a:	4604      	mov	r4, r0
 8008d9c:	460d      	mov	r5, r1
 8008d9e:	da10      	bge.n	8008dc2 <scalbn+0x52>
 8008da0:	a32b      	add	r3, pc, #172	; (adr r3, 8008e50 <scalbn+0xe0>)
 8008da2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008da6:	e03a      	b.n	8008e1e <scalbn+0xae>
 8008da8:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8008dac:	428a      	cmp	r2, r1
 8008dae:	d10c      	bne.n	8008dca <scalbn+0x5a>
 8008db0:	ee10 2a10 	vmov	r2, s0
 8008db4:	4620      	mov	r0, r4
 8008db6:	4629      	mov	r1, r5
 8008db8:	f7f7 fa10 	bl	80001dc <__adddf3>
 8008dbc:	4604      	mov	r4, r0
 8008dbe:	460d      	mov	r5, r1
 8008dc0:	e019      	b.n	8008df6 <scalbn+0x86>
 8008dc2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8008dc6:	460b      	mov	r3, r1
 8008dc8:	3a36      	subs	r2, #54	; 0x36
 8008dca:	4432      	add	r2, r6
 8008dcc:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8008dd0:	428a      	cmp	r2, r1
 8008dd2:	dd08      	ble.n	8008de6 <scalbn+0x76>
 8008dd4:	2d00      	cmp	r5, #0
 8008dd6:	a120      	add	r1, pc, #128	; (adr r1, 8008e58 <scalbn+0xe8>)
 8008dd8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008ddc:	da1c      	bge.n	8008e18 <scalbn+0xa8>
 8008dde:	a120      	add	r1, pc, #128	; (adr r1, 8008e60 <scalbn+0xf0>)
 8008de0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008de4:	e018      	b.n	8008e18 <scalbn+0xa8>
 8008de6:	2a00      	cmp	r2, #0
 8008de8:	dd08      	ble.n	8008dfc <scalbn+0x8c>
 8008dea:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008dee:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008df2:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8008df6:	ec45 4b10 	vmov	d0, r4, r5
 8008dfa:	bd70      	pop	{r4, r5, r6, pc}
 8008dfc:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8008e00:	da19      	bge.n	8008e36 <scalbn+0xc6>
 8008e02:	f24c 3350 	movw	r3, #50000	; 0xc350
 8008e06:	429e      	cmp	r6, r3
 8008e08:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 8008e0c:	dd0a      	ble.n	8008e24 <scalbn+0xb4>
 8008e0e:	a112      	add	r1, pc, #72	; (adr r1, 8008e58 <scalbn+0xe8>)
 8008e10:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008e14:	2b00      	cmp	r3, #0
 8008e16:	d1e2      	bne.n	8008dde <scalbn+0x6e>
 8008e18:	a30f      	add	r3, pc, #60	; (adr r3, 8008e58 <scalbn+0xe8>)
 8008e1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008e1e:	f7f7 fb93 	bl	8000548 <__aeabi_dmul>
 8008e22:	e7cb      	b.n	8008dbc <scalbn+0x4c>
 8008e24:	a10a      	add	r1, pc, #40	; (adr r1, 8008e50 <scalbn+0xe0>)
 8008e26:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008e2a:	2b00      	cmp	r3, #0
 8008e2c:	d0b8      	beq.n	8008da0 <scalbn+0x30>
 8008e2e:	a10e      	add	r1, pc, #56	; (adr r1, 8008e68 <scalbn+0xf8>)
 8008e30:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008e34:	e7b4      	b.n	8008da0 <scalbn+0x30>
 8008e36:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8008e3a:	3236      	adds	r2, #54	; 0x36
 8008e3c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8008e40:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8008e44:	4620      	mov	r0, r4
 8008e46:	4b0c      	ldr	r3, [pc, #48]	; (8008e78 <scalbn+0x108>)
 8008e48:	2200      	movs	r2, #0
 8008e4a:	e7e8      	b.n	8008e1e <scalbn+0xae>
 8008e4c:	f3af 8000 	nop.w
 8008e50:	c2f8f359 	.word	0xc2f8f359
 8008e54:	01a56e1f 	.word	0x01a56e1f
 8008e58:	8800759c 	.word	0x8800759c
 8008e5c:	7e37e43c 	.word	0x7e37e43c
 8008e60:	8800759c 	.word	0x8800759c
 8008e64:	fe37e43c 	.word	0xfe37e43c
 8008e68:	c2f8f359 	.word	0xc2f8f359
 8008e6c:	81a56e1f 	.word	0x81a56e1f
 8008e70:	43500000 	.word	0x43500000
 8008e74:	ffff3cb0 	.word	0xffff3cb0
 8008e78:	3c900000 	.word	0x3c900000

08008e7c <_init>:
 8008e7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e7e:	bf00      	nop
 8008e80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008e82:	bc08      	pop	{r3}
 8008e84:	469e      	mov	lr, r3
 8008e86:	4770      	bx	lr

08008e88 <_fini>:
 8008e88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008e8a:	bf00      	nop
 8008e8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008e8e:	bc08      	pop	{r3}
 8008e90:	469e      	mov	lr, r3
 8008e92:	4770      	bx	lr
